%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Martian Colony. First Sprouts.eps
%%Creator: Adobe Illustrator(R) 22.0
%%For: User
%%CreationDate: 2/8/2018
%%BoundingBox: 0 0 596 842
%%HiResBoundingBox: 0 0 595.2761 841.8902
%%CropBox: 0 0 595.2761 841.8902
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 22.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 22.0.0 x243 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c143 79.161210, 2017/08/11-10:28:36        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:photoshop="http://ns.adobe.com/photoshop/1.0/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Martian Colony. First Sprouts. Vector Poster Stylization under the Retro Space Posters</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:creator>
            <rdf:Seq>
               <rdf:li>svekloid</rdf:li>
            </rdf:Seq>
         </dc:creator>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>vector</rdf:li>
               <rdf:li>illustration</rdf:li>
               <rdf:li>drawing</rdf:li>
               <rdf:li>art</rdf:li>
               <rdf:li>sketch</rdf:li>
               <rdf:li>poster</rdf:li>
               <rdf:li>banner</rdf:li>
               <rdf:li>wallpaper</rdf:li>
               <rdf:li>border</rdf:li>
               <rdf:li>mars</rdf:li>
               <rdf:li>martian colony</rdf:li>
               <rdf:li>colony</rdf:li>
               <rdf:li>colonization</rdf:li>
               <rdf:li>sky</rdf:li>
               <rdf:li>space</rdf:li>
               <rdf:li>planet</rdf:li>
               <rdf:li>satellite</rdf:li>
               <rdf:li>mountains</rdf:li>
               <rdf:li>sprouts</rdf:li>
               <rdf:li>flowers</rdf:li>
               <rdf:li>grass</rdf:li>
               <rdf:li>rover</rdf:li>
               <rdf:li>vehicle</rdf:li>
               <rdf:li>cross country vehicle</rdf:li>
               <rdf:li>stylization</rdf:li>
               <rdf:li>retro</rdf:li>
               <rdf:li>classic</rdf:li>
               <rdf:li>vintage</rdf:li>
               <rdf:li>old</rdf:li>
               <rdf:li>horizon</rdf:li>
               <rdf:li>view</rdf:li>
               <rdf:li>landscape</rdf:li>
               <rdf:li>clouds</rdf:li>
               <rdf:li>print</rdf:li>
               <rdf:li>decoration</rdf:li>
               <rdf:li>future</rdf:li>
               <rdf:li>solar system</rdf:li>
               <rdf:li>isolated</rdf:li>
               <rdf:li>detail</rdf:li>
               <rdf:li>original</rdf:li>
               <rdf:li>stock</rdf:li>
               <rdf:li>graphic</rdf:li>
               <rdf:li>design</rdf:li>
               <rdf:li>concept</rdf:li>
            </rdf:Bag>
         </dc:subject>
         <xmp:CreatorTool>Adobe Illustrator CC 22.0 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2018-02-08T23:31:05+02:00</xmp:CreateDate>
         <xmp:ModifyDate>2018-02-08T23:31:05+02:00</xmp:ModifyDate>
         <xmp:MetadataDate>2018-02-08T23:31:05+02:00</xmp:MetadataDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>184</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+IMWElDQ19QUk9GSUxFAAEBAAAMSExpbm8CEAAAbW50clJHQiBYWVogB84AAgAJ&#xA;AAYAMQAAYWNzcE1TRlQAAAAASUVDIHNSR0IAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1IUCAgAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARY3BydAAAAVAAAAAz&#xA;ZGVzYwAAAYQAAABsd3RwdAAAAfAAAAAUYmtwdAAAAgQAAAAUclhZWgAAAhgAAAAUZ1hZWgAAAiwA&#xA;AAAUYlhZWgAAAkAAAAAUZG1uZAAAAlQAAABwZG1kZAAAAsQAAACIdnVlZAAAA0wAAACGdmlldwAA&#xA;A9QAAAAkbHVtaQAAA/gAAAAUbWVhcwAABAwAAAAkdGVjaAAABDAAAAAMclRSQwAABDwAAAgMZ1RS&#xA;QwAABDwAAAgMYlRSQwAABDwAAAgMdGV4dAAAAABDb3B5cmlnaHQgKGMpIDE5OTggSGV3bGV0dC1Q&#xA;YWNrYXJkIENvbXBhbnkAAGRlc2MAAAAAAAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAS&#xA;c1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#xA;AAAAAAAAAAAAAFhZWiAAAAAAAADzUQABAAAAARbMWFlaIAAAAAAAAAAAAAAAAAAAAABYWVogAAAA&#xA;AAAAb6IAADj1AAADkFhZWiAAAAAAAABimQAAt4UAABjaWFlaIAAAAAAAACSgAAAPhAAAts9kZXNj&#xA;AAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAAAAAAAAAABZJRUMgaHR0cDovL3d3dy5p&#xA;ZWMuY2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAGRlc2MAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBp&#xA;biBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAACxSZWZlcmVuY2UgVmlld2luZyBDb25kaXRpb24gaW4g&#xA;SUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2aWV3AAAAAAATpP4AFF8uABDP&#xA;FAAD7cwABBMLAANcngAAAAFYWVogAAAAAABMCVYAUAAAAFcf521lYXMAAAAAAAAAAQAAAAAAAAAA&#xA;AAAAAAAAAAAAAAKPAAAAAnNpZyAAAAAAQ1JUIGN1cnYAAAAAAAAEAAAAAAUACgAPABQAGQAeACMA&#xA;KAAtADIANwA7AEAARQBKAE8AVABZAF4AYwBoAG0AcgB3AHwAgQCGAIsAkACVAJoAnwCkAKkArgCy&#xA;ALcAvADBAMYAywDQANUA2wDgAOUA6wDwAPYA+wEBAQcBDQETARkBHwElASsBMgE4AT4BRQFMAVIB&#xA;WQFgAWcBbgF1AXwBgwGLAZIBmgGhAakBsQG5AcEByQHRAdkB4QHpAfIB+gIDAgwCFAIdAiYCLwI4&#xA;AkECSwJUAl0CZwJxAnoChAKOApgCogKsArYCwQLLAtUC4ALrAvUDAAMLAxYDIQMtAzgDQwNPA1oD&#xA;ZgNyA34DigOWA6IDrgO6A8cD0wPgA+wD+QQGBBMEIAQtBDsESARVBGMEcQR+BIwEmgSoBLYExATT&#xA;BOEE8AT+BQ0FHAUrBToFSQVYBWcFdwWGBZYFpgW1BcUF1QXlBfYGBgYWBicGNwZIBlkGagZ7BowG&#xA;nQavBsAG0QbjBvUHBwcZBysHPQdPB2EHdAeGB5kHrAe/B9IH5Qf4CAsIHwgyCEYIWghuCIIIlgiq&#xA;CL4I0gjnCPsJEAklCToJTwlkCXkJjwmkCboJzwnlCfsKEQonCj0KVApqCoEKmAquCsUK3ArzCwsL&#xA;Igs5C1ELaQuAC5gLsAvIC+EL+QwSDCoMQwxcDHUMjgynDMAM2QzzDQ0NJg1ADVoNdA2ODakNww3e&#xA;DfgOEw4uDkkOZA5/DpsOtg7SDu4PCQ8lD0EPXg96D5YPsw/PD+wQCRAmEEMQYRB+EJsQuRDXEPUR&#xA;ExExEU8RbRGMEaoRyRHoEgcSJhJFEmQShBKjEsMS4xMDEyMTQxNjE4MTpBPFE+UUBhQnFEkUahSL&#xA;FK0UzhTwFRIVNBVWFXgVmxW9FeAWAxYmFkkWbBaPFrIW1hb6Fx0XQRdlF4kXrhfSF/cYGxhAGGUY&#xA;ihivGNUY+hkgGUUZaxmRGbcZ3RoEGioaURp3Gp4axRrsGxQbOxtjG4obshvaHAIcKhxSHHscoxzM&#xA;HPUdHh1HHXAdmR3DHeweFh5AHmoelB6+HukfEx8+H2kflB+/H+ogFSBBIGwgmCDEIPAhHCFIIXUh&#xA;oSHOIfsiJyJVIoIiryLdIwojOCNmI5QjwiPwJB8kTSR8JKsk2iUJJTglaCWXJccl9yYnJlcmhya3&#xA;JugnGCdJJ3onqyfcKA0oPyhxKKIo1CkGKTgpaymdKdAqAio1KmgqmyrPKwIrNitpK50r0SwFLDks&#xA;biyiLNctDC1BLXYtqy3hLhYuTC6CLrcu7i8kL1ovkS/HL/4wNTBsMKQw2zESMUoxgjG6MfIyKjJj&#xA;Mpsy1DMNM0YzfzO4M/E0KzRlNJ402DUTNU01hzXCNf02NzZyNq426TckN2A3nDfXOBQ4UDiMOMg5&#xA;BTlCOX85vDn5OjY6dDqyOu87LTtrO6o76DwnPGU8pDzjPSI9YT2hPeA+ID5gPqA+4D8hP2E/oj/i&#xA;QCNAZECmQOdBKUFqQaxB7kIwQnJCtUL3QzpDfUPARANER0SKRM5FEkVVRZpF3kYiRmdGq0bwRzVH&#xA;e0fASAVIS0iRSNdJHUljSalJ8Eo3Sn1KxEsMS1NLmkviTCpMcky6TQJNSk2TTdxOJU5uTrdPAE9J&#xA;T5NP3VAnUHFQu1EGUVBRm1HmUjFSfFLHUxNTX1OqU/ZUQlSPVNtVKFV1VcJWD1ZcVqlW91dEV5JX&#xA;4FgvWH1Yy1kaWWlZuFoHWlZaplr1W0VblVvlXDVchlzWXSddeF3JXhpebF69Xw9fYV+zYAVgV2Cq&#xA;YPxhT2GiYfViSWKcYvBjQ2OXY+tkQGSUZOllPWWSZedmPWaSZuhnPWeTZ+loP2iWaOxpQ2maafFq&#xA;SGqfavdrT2una/9sV2yvbQhtYG25bhJua27Ebx5veG/RcCtwhnDgcTpxlXHwcktypnMBc11zuHQU&#xA;dHB0zHUodYV14XY+dpt2+HdWd7N4EXhueMx5KnmJeed6RnqlewR7Y3vCfCF8gXzhfUF9oX4BfmJ+&#xA;wn8jf4R/5YBHgKiBCoFrgc2CMIKSgvSDV4O6hB2EgITjhUeFq4YOhnKG14c7h5+IBIhpiM6JM4mZ&#xA;if6KZIrKizCLlov8jGOMyo0xjZiN/45mjs6PNo+ekAaQbpDWkT+RqJIRknqS45NNk7aUIJSKlPSV&#xA;X5XJljSWn5cKl3WX4JhMmLiZJJmQmfyaaJrVm0Kbr5wcnImc951kndKeQJ6unx2fi5/6oGmg2KFH&#xA;obaiJqKWowajdqPmpFakx6U4pammGqaLpv2nbqfgqFKoxKk3qamqHKqPqwKrdavprFys0K1Erbiu&#xA;La6hrxavi7AAsHWw6rFgsdayS7LCszizrrQltJy1E7WKtgG2ebbwt2i34LhZuNG5SrnCuju6tbsu&#xA;u6e8IbybvRW9j74KvoS+/796v/XAcMDswWfB48JfwtvDWMPUxFHEzsVLxcjGRsbDx0HHv8g9yLzJ&#xA;Osm5yjjKt8s2y7bMNcy1zTXNtc42zrbPN8+40DnQutE80b7SP9LB00TTxtRJ1MvVTtXR1lXW2Ndc&#xA;1+DYZNjo2WzZ8dp22vvbgNwF3IrdEN2W3hzeot8p36/gNuC94UThzOJT4tvjY+Pr5HPk/OWE5g3m&#xA;lucf56noMui86Ubp0Opb6uXrcOv77IbtEe2c7ijutO9A78zwWPDl8XLx//KM8xnzp/Q09ML1UPXe&#xA;9m32+/eK+Bn4qPk4+cf6V/rn+3f8B/yY/Sn9uv5L/tz/bf///+4ADkFkb2JlAGTAAAAAAf/bAIQA&#xA;BgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoKDBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8f&#xA;Hx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f&#xA;Hx8fHx8fHx8fHx8fHx8f/8AAEQgBAAC4AwERAAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQF&#xA;AwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAAAQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMB&#xA;AgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPBUtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdU&#xA;ZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eX&#xA;p7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZqbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUE&#xA;BQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEyobHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PS&#xA;NeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG&#xA;1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/a&#xA;AAwDAQACEQMRAD8Ahn5X/lfpHm7SLu9vbu4t5Le49FVh4UI4K1TyVt/iyjFiEgzz5zA0GVah+Qfl&#xA;q1tWmXUbwsCAATFTc/6mXDTDvceWtkByCUf8qb0L/ltuv+Sf/NOS/KR72H8oS7g7/lTehf8ALbdf&#xA;8k/+acfyke9f5Ql3B3/Km9C/5bbr/kn/AM04/lI96/yhLuDv+VN6F/y23X/JP/mnH8pHvX+UJdwR&#xA;Wnfkj5eurkQvf3aggkEenWo+aYDpY96Y6+RPIJt/0Lz5Z/6uV7/yS/5oyP5YNn5yXcHf9C8+Wf8A&#xA;q5Xv/JL/AJox/LBfzku4O/6F58s/9XK9/wCSX/NGP5YL+cl3B3/QvPln/q5Xv/JL/mjH8sF/OS7g&#xA;7/oXnyz/ANXK9/5Jf80Y/lgv5yXcHf8AQvPln/q5Xv8AyS/5ox/LBfzku4JFP+THl9JnVL66KKxC&#xA;k+nUgH/Uyf5SPe1HtCXcFn/Km9C/5bbr/kn/AM04/lI96/yhLuDv+VN6F/y23X/JP/mnH8pHvX+U&#xA;Jdwd/wAqb0L/AJbbr/kn/wA04/lI96/yhLuCK038kPL11c+lJf3agqSCPTrUfNMB0sR1THXyJ5BN&#xA;v+hefLP/AFcr3/kl/wA0ZH8sGz85LuDv+hefLP8A1cr3/kl/zRj+WC/nJdwd/wBC8+Wf+rle/wDJ&#xA;L/mjH8sF/OS7gluq/kXoFm8YS/u2Vwd29PqPkmSGlierCWukOgRf/OPukw6R+eF5p0DtJFb2M6q7&#xA;05GoibegA75UI8MyHK4zPGCVf/nHhSfLGpUH/H7/AMykyWnIAatXAkig9D1+osfm4/jmXA7uvyAg&#xA;McyxodirsVRVtdW0acZbVZj/ADFmU/hkJRJ5FthOIG4tEWl7afW4THarC5cAuHYijbdDt3wcJ70m&#xA;cTyFMjyLN2KuxV2KuxUNOeKMwI2BP+dcFpphZrU16/fl7jOxQ7FXYqr2E/oXkUp2UNRvkdjgIZRN&#xA;Fl2VN7sVdiqD1Sy+tWxVf7xPiT5+H04QaYyFh59+TSsv/OQ+qqwIYWcwIPUHjDmKf7wuxxf3UVP/&#xA;AJxz/wCUX1P/AJjv+ZKZTj5OTN6yQCKHcZYxUXsrN/twRt7lR/TJCR72BxxPMBRbR9Mbrbr9FR+o&#xA;4fEl3sDp4dyjLoemhapbcj4B2B+ippkhll3sJaaHQfal09rpcbcJLS5jb/Jow+danLRKR6hx5Qxj&#xA;YxkEJJb6WG+CeWEg7epHX/iOTEpdzSYY+8j3hklu6TQpIjq4YfaFRU9+uVmVdG0YweRCp6bYPEDL&#xA;wJO9N/DDxhHgT7muDeGPEEeFLub2HVcHPqkbc4uZkZSpQEHYjBwHvZ+LH+axeWTRnY/uJoj4IwI/&#xA;4auXAT73GMsR6EKRXSyNnnU+6I3/ABsuH1eTCoeaHkEYYiMlk7FgFP3At+vJBrNdFaKxuJQCnA17&#xA;epGD9xauAzAZxxE8q+YVxoeoGlFQ16Udf65HxYtn5aaf6fDeLbLHcLSRPhBqDUDp0ys5It0dPOuS&#xA;J9N/DBxhTgn3LSCOoyQILAwI5h2Fi88/K/8A9aW1n/mEl/5NQ5i/5Quxj/dhAf8AOOpI8r6lQV/0&#xA;7/mUmQxAU2ZZEHYPTdSS6e2b6u/pSVB5cuPfxzIgYjm4uUTPLb4pSllqzfa1AJ85mP6ssMo932NA&#xA;x5P532ttY6sPs6ip/wCezjBxx7vsScWT+d9q6FNWRv3lzzX/ACZUr/w4OJMe5MRkHM/ar+rfgUFx&#xA;J/07N+tlyNR7vvbOKfef9iqL+kJmCmZgjbEtHAw/CQ/qwekfgpHGev2R/WjLWxjt4yisWqSxJoBU&#xA;9aAAADI+KWQ00Vb0h2Jx8Rfyw6Fr0vfD4vkj8t5u9I/zY+J5KNOe9vg38xwcY7mXgy/nFoo/jX54&#xA;RKLGWKffbHL3Qr83MjQxh42YstGUdd+5GXDNFxJaWd8kMNE1Qn+4P3r/AFyXix72H5bJ3Kw8u6kV&#xA;qQgP8pbf8Nsj40Wf5SaxtB1QHaEN7hl/icPjRQdLk7lq6JqhNPQI+bKP44fFj3oGmydyZ2vl2eFk&#xA;mW64SgAlQlR7j7W+VHP5ORHRHvTgRNT7W+Q8QdzYNPIdW+Mg/a+/BxR7mYhkHVpkY9hX2yQmGueG&#xA;R6B5x+WAp/zkvrIPX6pL/wAmocpBuZcgRIxgFLf+cef+UZ1L/mN/5lJk9NyadZ9Q9z069i9W0mj6&#xA;lkNPmBUZkhwiNmO6ZbW08xWdqKBsK0qcjnyGI2ZabEJk2o3sMcN1JHG3JFOx+iuWY5GUQS1ZYCMi&#xA;Ao5Nqdiq+KeSP7FPpVT+sHARbISIRMOr3sTAqUoO3BB+IFcicYLYM8h/YGT292k8KypQqwr8vbKj&#xA;jcgZyVT1Pn9+R4GQz/i2/UPv/n9GPhp8c+f4+DvVOPhr+YLvVOPhhP5goe+urqK3aWBVdk3ZWB3X&#xA;vShGEYgxlqZDklkfml/92W4PurU/WDhODzQNaeoVh5ot6isLgd6EHI+Ae9n+dHciRr+llAxlIJ/Z&#xA;KtX8BkfBk2/moVzVYdY02U0WdQfBqr/xKmROOQ6Mo6iB6ohp4ETm8iqn8xIA+/I0WwyA3tYt3FIa&#xA;QyRSfJx/CuHhI5sRMHkQVRWcmjIR7ggj+v4YGVlv4vH7xh2Ynieb/ln/AOtM6xXr9Ul6f8YochH6&#xA;yzlfALSz/nHhSfLGpED/AI/f+ZSZPTyADRq4EkEPVaHwzJtwjEsSvoDb3kkY2ANV+R3GWjcOOdih&#xA;8KHAV2GKqotboiohcj2U/wBMjxBlwS7lNlZTRgVPgdsLEimsKEw0nUfqsvpyH9w53/yT4/1yMgzj&#xA;KmSAggEGoO4IytubxV2KuxV2Ksc1fTTbuZoh+4Y7gfsk9vllkS0yjSW5Jg7FXYq7FXYqvWedPsyM&#xA;vyYjBQZCRHVVj1G+jbkk7192JH3HbBwDuZDLIdSkf5Szm4/5yN1SY/aaykLfP0oQfxzAqshDtxLi&#xA;xgoT/nHgE+WNSI/5bf8AmUmSwEU16qJMgQ9XDSD3/HLeGLUMmQeaX6uluYvXltPXZaK1GKED6MlG&#xA;JHIteSYO5ikRudP5f7x0Xw9Rq/fT+GW8Mu9x+OH837VgWxdzR3hHbkA4+kjifwx3RUD5IhYJQP3G&#xA;oR07D1GjP40yNjqGwRPSQ+dKy2uukgiYuOxMqsPxJwcUGQhl7/tVzbeYivEhCPcR1++mR4oNnBm/&#xA;FKP1TzEhqFb5ckI+6uHigw8PMPwEZZ3GpwkJd2p9Ls6L9n5hO30YPT0KQJjnH8fBMgwIqAKHGvNH&#xA;F5Bwp3yRYiurfw++DdkeHza2wsdnNHHIpRqFWFCCNqZGz3MuAHqkV35elVy0DoYvBmoR7ZMZfJgd&#xA;MehHzQ50HVO0QYeIZf4nHxYr+Vn3LTomqDrAfoZT+o4fFj3sfy2TuUzpWog0+rvX5YfEj3o8Cfc3&#xA;+idS3/0d9vbHxI96+BPuaj0vUXfgtu4Piw4j72oMTkj3qMEyeRbbSdSU0Nu/0Cv6sfEj3qcEx0Y7&#xA;+Tkbxf8AORGqpIpRxZTVU7H7EOYRN5C7OAIxAFDf848/8ozqX/Mb/wAykyWm5Nes+oe56rmQ4buR&#xA;8cBiGQmR1SDUrvU7a4Ku4dDvGzRoaj/gckIRYSzzvn9gQ36XuCKSRwyL4NGv8KYfDCPzB6gfJb+k&#xA;FrUWsA9uJP62OHg8yjxfIK8eq2gH7zT4WPivw/rDZE4z3sxnj1iESms6aE4fVpEXsEcj9RXIHFLv&#xA;bRqIVyLo9ZsYyeH1kA9i4Yf8MTicZPco1ERy4lZNZsj0uZ4z4Mqt/BsBxHuDMaiPeQiodWtmIreR&#xA;Ff8AKjZD95an4ZA4z3NgzxP8Q+SOSWOQVRlYe2Rptv3L6KewwWWXDE9A6gpTtgtkIiqdQeGNo4Q4&#xA;qpFCAQeoxsqYA9EKNJ00MW+rpU+1R92S8SXe1jTw7m3021YUXnF7xuy/gDTETKThj7lMaZIprHe3&#xA;AP8AlMHH4jDx+QY+CRylJQaz11ZD6d6pTsWUV+6hyXFDuazjy3tJcsOvqRW4ide9RQ/guC4dyRHN&#xA;3j8fBVB1QMFYpv8AtcOS/eHVvwweln+8/H9rAvyw5/8AQy+s86cvqktadP7qHxymP1t074RaW/8A&#xA;OPP/ACjOpf8AMb/zKTLdNycbWfUPc9UzIcNvFVC7tIrqExyD/VbuD4jCDSCLYxd2c1rL6cg/1WHQ&#xA;j2ywG2kilDCxdirsVdirsVdiqql3dIapM6/JiMjwhmMkh1TG18xXcdFn/er/ADdG/pkDii2jUz70&#xA;1t9ZtJqcZeDH9l9j/TInEO5sGpl3owSt88icYbBqJLhL4jIHE2R1PeG/VXB4ZZnUB3qDxx8Mr447&#xA;1C5vhbIZHQvGO6VYj3IoP14jGSstREIRPMmnM1CJFH8xUU/Ak5LwJMBrIeaqmu6W1f3vH/WVh/DI&#xA;nFJmNVA9UeCCAQag7g5W3vN/yz/9aZ1r/mEl/wCTUORh9Scn0pV/zjww/wANamvcXtSPnEn9Mt0/&#xA;JxNZ9Q9zNrrzd5bsdYura8vY4J4khWQNXqeTgVA8HH35fYccY5EbBx8/eTwQP0pFueIpyO5+Qx4g&#xA;nwpdyY6bruj6nyFheRXDLuyIw5geJQ/EOvhhBYmJHNFT28M8ZjlUMp/D5YQWBFpDfaLPAS8NZYvb&#xA;7Q+YyYk1ShSW5Ji7FDsVdirsVdirsVdiqrDd3MP91KyDwB2+7BSQSjYdfvE2kCyDvUUP4f0wcLIT&#xA;KYW+vWkm0gMR99x94yJizEwmKSRyLyRgynoQajIs1wNOwwEMhKkPLp2nyFma2Uueu5Wp+jB6u9lc&#xA;P5v2pTPHpUcvo3NrJbE9JEcuKeIr1yXq6G2F4uRBDcTacjUGpThRsvEMAPw/hgPF3BlEwH8ZYr+V&#xA;Dof+ckdWKymYNZy8ZD1b93D8sxR9Zdhd4xvbEPyQ8z6XpUF1a3c4jeafkUoT8PBRyooPQjHDljEU&#xA;Sw1OnnOQMReyUa7pl/J5quIFmhubi8uC0Usbco5PVeoPIsadd/5e+SsS5FshcByr3hAQ6fqU/wBa&#xA;Max1s0LXIK04hWC0oT1qenX6Bjwhmcx8vkyTyP5S81XF1FqOl3MNkY3PGWRyrGn2l9Mc2YU69vfJ&#xA;xDjZJxGxe8Zc4LgB40wEsgAeqEu9Ks7irMoVz+2mx+nxwiTGWMJTcaBdJUwsJV8Pst+O2WCTUYFL&#xA;pYJojSWNkP8AlAjDbAhZhQ7FXYq7FXYq7FXYq7FVSC5nt35QuUPenQ/MYCEg0n1jr1vKRHcJ6bnY&#xA;PX4T/TKpQPQuTDLDqE1rF7jIepu/dnvY35j83eTbPS3uby+SeIPwRLZ0llMncKFPUd65Dxa3sNg0&#xA;wkaqTyvzJ+Yxu7uG28serbRE/vLi5WNnYnsFoyqo+/8AjVk1cujkYuzoXvuj/wDnHWa8m/Ot5bxj&#xA;JdPaXJldupPFfDK8UuKVt2WAiKHR4plTY7FUZNpN7Hbi5CerbMK+vEeaj503X6ciJDkyMDVoe3uZ&#xA;7eUSwSNHIvRlNDkiGINPpL8ltc1zV/K7nVoXCQS8LK7cUEsZG4XueDbV6b0HTMnEZAOJmjAy6Wz8&#xA;qvt9+XCRccwj5fNrgPf8Dh42BxD8U1QeP35Ky18I73GMMKGhB6jHiT4XmELLpNjJu0Kg+K/D+qmH&#xA;xGJwFBzeW4W3id0+Y5D+GS8QMTpz3FCvocsB5NJVB1YR89v9XfDx2jwq5n7FP6vprDa7jZv8qJ4/&#xA;+ImmDil3MuCB/iHyKHewNTwngcdqSBf+J8ckJ+Razi7iPmsNlcjoob/VZW/UTh4gx8OSiysrcWBB&#xA;HUHCwIpWtriGIES26TAmtWLA/gcEgT1ZwmBzFpha6vp1uSUseBbqefL/AIkMqljkerkQ1EI8oq8n&#xA;mO2K0W3ZT4jj/ENkRhPe2HVx7kJqnmm3t9HvHcSchEwjJ4U5MOKj4Qnc5DNHhiS2abKMkxHf7P1P&#xA;nvXLX05xMi0ST7RH8++a3HLaneZY0bVtI0wcUupahq8o1B7e+2RyT6MscOrO/wDnHr/ydz/8wlx/&#xA;xBMyNP0cPVcy8SyKuxVF2WpXFpFcQoaw3MZjkQ9KkUDD3GAxtlGRCK8qaSmr+ZdM0ySvo3dzHHNx&#xA;2PplhzofHjXJwFkBqyS4YkvrqCKK3gjggRY4YlCRRqAFVVFAAPADNhwB1PiyVebY8AT40nCTxGAw&#xA;ZDN3hd6q9xkPDLaNQOodzjPYY8Ml8WB6O/dntj6l/dno6kX+ZxuS8OP8FuidifvwWWYEOhQ95YQ3&#xA;KULcW7NRW/AjDGZHRhPED1Sh/LLA0W6Uk9Awp/E5b43k450fdJTbyzej/dsVPElh/wAa4+OEfkp9&#xA;4b/wxe0/vY6+FW/pj44X8lLvDf6I1qMAKUcDpUq3/Exj4kCn8vlDhZa3X4rSF/cpD/CmPFDv+9fD&#xA;y/zR9iIGl6hxBNvZknqpUgivyoPuyPiR7y2eDPuiwT8yvrdu1nbPFHBHIGdhETRyCAK1J6Zg6zJd&#xA;AHZ2fZ2EC5EAFgFzaxXHD1K/u2DinenY5hCVOzlG1bIsmSf849f+Tuf/AJg7j/iCZnafo6zVcy8R&#xA;yKuxV2Ksk/Ly6trTzdYXVxKIUhLkOTSjMhUH6OVdsnjmIyBPJqzYzOBA5voyK/1eoEcgnHbhwkqP&#xA;9jU5s7DpKldIgajecgrNIrHsYAP+N8iSAL2+bZGBJoXfu/apXF5qCmjXYRT0JQr+pW/XjCcZck5c&#xA;M4c9lP6xqFCReoQP8sD9YGTsdzVwnvC6K81YCqzo4HXkyU+80/XgMosowmRYRkGq3gNJ7VmH+/Ig&#xA;WH8R+ODbvUCXcmcbrIoZa0PYgg/SDgtlwlskAVJoPHEmlAJ2Cm1zCoryr7DKZZ4Dq5ENJkJ5UgL2&#xA;5iuUMTJzFeg3IPz7ZjS1h/hc6HZ0f4jalCkaJxQUA6713+eUzyGe5czFhjjFRCo08wUMsklB0Ck9&#xA;Pl0wxzGI70TwRke5UW+vjFQPRx0Z1Xf5gZOOffcbNUtMeHY7uh1W8B4yelIRsQgYH6TU0+7JHPDp&#xA;bXHTZOpCq2szKpItCWHYOKfqr+GWCUD1apRygfT9rxTzDqlxqesXV3MxbnIwjUmoVASFUewGa3Ib&#xA;kXcYo1EJdkGx2Ksj/wCcev8Aydz/APMJcf8AEEzO0/R1mq5l4lkVdirsVZFeaJZw67pmkRAuZniW&#xA;eVjQsZZAvboAMhCRItsyRAID6Wa2tyoAhQU2AChR+Ay38xPvYfk8X81ciuNiQFHRR/blRlInct8Y&#xA;RiKApapk5VcfA23Hw+eRBINsiARSoVQrxMaEe6Kf4Zd40+9p/LY/5oWIjhSKhf5VUUAyokncltjE&#xA;AUOSmYIHf44+LmtCKiv0rlsNROOzj5NHjnuRuqQQLA3KMsG8eRyUtRMsceixx6KrMzfaJPzyoyJ5&#xA;uTGAjyFKF3NawwNLdSLFAv2nduK+1TkCB1ZhhHnLz/p2macF0ZluL2RwocqxjRQatXl1qNtsEYxW&#xA;Vhluk6jb6tpFve2p4R3EYbj3QkfEvbdTthI2oKjI1kQhSQyAAA9CKYACFVMmhwAHTbArA/NvnW4S&#xA;8n0zTJAgg+C4nXduZFSqntSu/euQnItkIhhGVNrsVdirI/8AnHr/AMnc/wDzB3H/ABBMztP0dZqu&#xA;ZeJZFXYq7FWaaUou/wAytHQdEntXFdvsKsuVw+ltnvN9E4W12KuxV2KuxVpioBZiABuSegwJY9L+&#xA;YXk+GWaKXUVR4PtVSQ1BpulFPPr+ziN0HZSf8xvKz20klndG5kUfDGiOrVPSokCbYJGkxFsC1LXt&#xA;W1JAl7ctLGp5BKKqg+NFAGUkkt4ADHry9tWtI53j9RRIeCV2JWoqT4ZZGJumuUhVsn/KrzYsGrXO&#xA;mXbiOC/b1LcsaKsyinHf+ddvmBlvDQaRKy9ewMlskkca8pGCL/MxAH44q8y84/mkiXiWOiTh7ajL&#xA;d3aqa1NAPSavbepp8sTHZAkLYbpETpa+o5JecmRq+/TKsh3bsY2R2VtjsVUrm5it4jJKaKOg7k+A&#xA;wgWxlIBkX/ONzs/5yK7CjGyn2/55rmdhG7rNQXjGQZOxV2Ks08gv6/5kaczf5Z223S1b+Iyqe0Gw&#xA;G5PfBNKP2j9O+YwmXIX/AFmT2yXilFNG5kPSg+WJylaW+rJ/McjxlK2bUUgj5zypEg6u5Cj8cl4h&#xA;WmA+Z/Op1GOWz09mNspZJpOhkK/sgdl/Xh36s4h5pOl9e3ZVkBlUAEDYAdd/vzIFANJuRTrTrFbS&#xA;GhNZG3dh+oZTOVt8IUERNGJIXjJ4hlIJHYHIgsiLDG9QuI5JBFCONvCOKAHYnu305kQHe4s5dByQ&#xA;oJBqOuTYPQZvzSv7jyrNAZTb60HSNJYqjlH1Zx1Cn4aH57ZUIEHyZ8WzDtZ8wazrMyy6ldPcMgog&#xA;NAq/JVoo+7LAKYkt6Rp6XDGWT7EZHw9mPvkMkqbMcLT8AAAAUA2AGY7kt4q7FUK8DzXoaWMGCJT6&#xA;dd6sab09qZO6DAizuy3/AJx6/wDJ3P8A8wlx/wAQTMvT9HX6rmXiWRVXaynFsLpRzgJozrvxb+Vv&#xA;A4L3pPDtahhQm3lfXpNC1y31NU9T0uSuvcq6lWpXvQ5DJHiFMoSo2XudjrZ1CzivLacvBMvJGG23&#xA;v7g9c1kjIGi7SMYkWFcXl0P92t9+DiLLgHc59UuIkMkk4RF+0zcQB8ycRIoOOKV3XndEQi3k+sNQ&#xA;8XULwr8/6ZaIy6sOGPRh+p6rPNOJ7pmmlmcID4E9B4AZfGLAmloAHTAyU4YI4uXAbuxZ2PUk4SbQ&#xA;BSpgSl+sXfo2xjRwJX2K9+JrXLMcbLVllQY9mQ4zsVdiqK0+0M86lqCFGBkLbDr0+nIzlQZwjZZK&#xA;iIgoihR4AUzGtyqXYEtBlJIBFR1GFW8CuxVkn/OPP/k7ZP8AmDuP+IJmdp+jq9VzLxHIpRmm6pda&#xA;fMZISCjjjLEwqjr4MMEogsoyIZBrFvpl55cGqWlqlvIGXmFAFPi4EbUHU5VEkSot0wDGwGM2aQPd&#xA;RpOSsLtxdx+zy25fR1y08mgc2ZaL5sv/ACrTSb62E9mGLxSoSG4uakrWoYV3pmNkwjJuObkwzHH6&#xA;SNnpcN7bTWwuUcGHjyLeApXfMExINOeJAi2B+c72fU723trZybYcuK7gEilXYfTtmbp4iIJLi57k&#xA;QAstInhto4nILIKEr0wyNllEUFSSNJF4uKioP0g1GAFJFrsCXYq7FWOa0pF8xLhqgUXuop0OZOPk&#xA;4uXmgcm1uxV2Kp5YacUkHPkYkVXIP2WkO+3suUSm5EIJrlTcsmlSKJpH+ygqcIFoJpCaVIssUtwx&#xA;HORyX/yQOg+gZOYrZhjNi0XFKkqc0+yeh8fcZAimYNr8CWSf848/+Ttk/wCYO4/4gmZ2n6Or1XMv&#xA;Ecil2Ksk0CUXOg6lptay8TNDH3agqQo+ajKpipAt2M3EhjeWtKPh1Mta/UrwGW1G8R6vEfFCe3iv&#xA;6siY72GQltRZh5T1OaexlsJJAfRVVRkJ+OLt18KUyjLHe3KwzNUirkpbzxxsKvLURkDsNzkQLDbY&#xA;QtlNLNPcsTWEMFi8PhqDTJSFAIiSSUXkGbsVWSzxQhTIwUMwUE+JwgWgkBfUUr2wJYrdkyTyzAlo&#xA;2cgPSlf8xmVHlThy3NqGSYuxVM9K0yO4QzTV4A0VRtWnXKpzrYNuPHe5T4AAUHQZQ5KHvZ5I1WOE&#xA;VuJTSMHoKdSfkMlEd7CR7uarEr+iqzEO9AHPYnvgLIct0p1CWNCbCzT4pWrIVJO5O4y2I6lpmf4Q&#xA;nCKERVHRQAPoypuDeBLJP+cef/J2yf8AMHcf8QTM7T9HV6rmXiORS7FVS3uJreZJoXKSxmqMOxxI&#xA;tQaVb6WGeX6xGAjS1MsQ6K/fj/kt1/DABSZG90NhQrWl3cWk6T27lJUNQR+o+2Ai0gkGwzbTfMlj&#xA;qkSwTlba+/Y5boWpSqk/qzHljI9zlQyg+9FLbrY24jbZIlJLePcnATZbgAA3DKJYkkXo4DD5HARS&#xA;QbC/AlCanGrQCRhy9E8wnZiNqfjk4HdhMbKGl3pLfVJd5UBPLrU1qR9GSnHqxxy6FWmS1jh+qVAa&#xA;QMIUYdzWnb3yIsm0mgKSFrG7DU9Mtuyim9SvWmX8QcfgKJtdGuZCjSjhGT8QOzU+RGRlkAZxxEp+&#xA;iKiKiiiqKAZQXIAXYEuxVZNIscTuzBQo+0egwgIJoJdotsOLXbNyklqKeG++WZD0asUeqaZU3OxV&#xA;kn/OPP8A5O2T/mDuP+IJmdp+jq9VzLxHIpdirsVdirsVRL2FwLRbtB6lufhd134N/K47YOLek8Jq&#xA;0NhQnFvresx6eVcfWLGvpkyAmhpWnMEMNum+QMBfm2DJIDyTKw802IRIZYWgC0AIPNfp6HISxluh&#xA;nHIpjqH113t2tGPAn4ip23pQn2yMK3ttne1I4gEUIqPfK2xKbn0YbyNLaqS+qvrEd/U3plw3G7RK&#xA;gdlmsXsbMsQDJPC4PLbYU6gg/LHHFckuiYWsslyTMycIlasFdmIoQSfvyEhTZE3uisgzdirsVdiq&#xA;S3t99bnFktEjMgVpK1rQ5fGNC3HlPiNJtBBHBEsUYoq5STbeBSpgS7FWR/8AOPRH/K7n97O4p/wC&#xA;Znafo6zVcy8SyKuxV2KuxVc6FTQ+AP3iv8cUAovTNXvNNkd7cikg4ujiqn5jIyiCzjMx5Jlqd7b6&#xA;xpq3ARYr+0/v412Dxn9pfkfuyMRwnyZylxC+oQ2ia6dPElvNEJ7Kb+9iIFa0pUV/UcM4WiGStui+&#xA;903Trqs+jy8q7tYvtKv+oD9r5DAJEc1lEH6Vby3q80UyWEoZ45G4xbVKse3y/VgyQ6s8OStiy/0J&#xA;v5TlDlpJrtnOs8VxtHHQK0rfCFINQST88uxyFU05Rva/19Lka4Zr2GlwEDDmoPwih6nvkd9tk3Hf&#xA;fmil1HS1UKt1CFAoB6i9B9OR4Sz4496pDe2UzcY7iJvf1Fp+vBwleMd6H1nVrTT7ZuEyS3hA9OEf&#xA;ENyN2p02yUIEsMmUAeaSx+cZh/eWyt/qsV/WGyzwmoag9yq3m6J4XX0WjkIorAhgCe/bAMW7I6jZ&#xA;Q0lEuruMIQyqQz70NBvlkzQYYxZZVmK5jsVUrm4jt4WlfovQeJ7DJAWWMpULZF/zjbM835yeq4oz&#xA;2dyaf7FaZnYBRdZqDe7xjK2TsVdiqZ+X9TgsL1muk9WynjeC5iADVV12IB7q1GxLVlgZDbml80gk&#xA;lZwKAnYeA7DFnEUFmLJsMQag0O428DscVaxV2Kq9s181yrWxla6NeJjLGQ7b0479MeG9kxsnbmqz&#xA;ahq6yFJrm4WRNmV3cMCOxBODhHckykh5bieY1lkaQju7Fv14QGJNqeKuxV2KuxV2KqogegY7KUMl&#xA;euwJXf5sKYsSVIEg1GxHQ4skwttd1S3oFnLqP2ZPiH475EwBbI5ZDqmlt5wOwubevi0Z/wCNT/XK&#xA;zi7m0ajvCpc+YtKuHiEiyGFKsy8Ru3Qd/niIEJlmiWff844XkE/5zJLECI5bS4EYIpSka/8ANOZO&#xA;AUXD1BuyHjOQZOxV2KuxV2KuxV2KuxV2KpvpH6R02aPUo4g0JRzz2dacTseJ+E1HfJRlRtEM4idu&#xA;av5p0OfTHhmv50OpX4NxLZxqaRK5NOTE9a1FAPpyPFZthHP4hJA2SHFsXxRNK4RSoJ7uyoPvYgYk&#xA;qAmVtotq1DdalbwKeyt6jfcNvxyBmegZiA6lPbXVPLWj2DxW7m8kkP7yi7ue1agAKMrMZSLcJQiN&#xA;t0vGq+WbwkXunm1Y9JIDt9IHH9RyXDIciw44HmENLF5TUnhPduOwVU/4245K5eTEiHmv1GfSjo8U&#xA;enNV0+C49egm4cy68R9n7T78d+nvhBN7tRxi+IH4JHkkuxV2KuxV6z/zjB/5Nqz/AOYW6/5N5Zi+&#xA;pry8nk2VtjsVdirsVdirsVdirsVdiqaaLrX1AtFKhktpPtKOoPQ0r1ri4+bDxbjm15i1yfW9Vkv5&#xA;lEfIBI4xvxRRQCvfEBnixiEaSzFtdirsVdirsVdirsVdirsVdirsVeuf84uf+TXt/wDmDuf+IjLc&#xA;XNqy8nkeVNqtbWdzckiBOZXqKgdfniyjAy5LoLC7nLiKMt6Zo/QUP0/LFYwJ5Icgg0PUYsXYqqeh&#xA;NUjgaheZFOi0rXFPCVPFDsVVbe1nuGKwpzKip3A26d8UxiTybuLO5twpmTgHrx3BrTr0PvimUCOb&#xA;S20zQPOq1ijIDttsT/t4oETVqWKHYq7FXYq7FXYq7FXYq7FXYq7FXrv/ADi2tfzWhPhZXJ/BRluL&#xA;m1ZeTyLKm1HaSyJcNK0qxcUYKWJG7KQKUB6HC2Ytjdpk9zZPHMkU0cfrqzy8iaeo4AoNugofvxbz&#xA;KO9HmtM1k2nel60XMwqorQEOAPBa/jii48NX0Q99fBIoliMEpeLhK6r8Qbua0HjtiwnOgKrkqvcx&#xA;zPKWuIgslsqAEUPOnsvjXFkZA9RyX3c1lJp0kaTRlyilRsDVSCQKLXenjimcomNW6aa2eGVDNb8m&#xA;hC81FGMm1dwvTbFTIEcxyS3TzGUuY3kWMyRhVZ6gV5A9gfDFpx1uEZaiG3Qr9ciaQo4jr8UaMWUg&#xA;7r3p4YtkaHVfLLbNFcD14ubxwg02DNGQz0AHftikkUdx0VWuYPWBNxAU9dWjAUfDEA3IH4e42xZc&#xA;QvmOayS7hQo6GByJz+6iXdo2oKUp9rFBmB3c2r2WOC4FoSvBI5GZ2QCrOG4janQHFEzRpI8DjOxV&#xA;2KuxV2KuxV2KuxV69/ziz/5NWL/mBuf1LluLm1ZeTyHKm16P+TVpa3F1qnrwpLxSLjzUNSpatKj2&#xA;yM3X66RAFJf5s856Trtsmm2ulLZkXCn6yCnIqKrQAIKVr44gU2YcEoGyb2ZX5u07T086+V4ktYli&#xA;d5A8YRQrcSpFQBQ0yI5ONgkfDnumLr5Q1LXr/wArSaVEk8MIkaZIo0qGVG+FlAZWHqDHfm1/vIxE&#xA;7Yp5E8raXDqGv3N9CL9tEkeKC3IDBjGXq3AihJ4fDkiXJ1GaREQNuJIvMfnLTtVvNNurfR4rRrOT&#xA;1LiP4WEoDKQjMqpVaL3HfCA3YsBiCCbt6Bp/mLy/P5Uu/MiaJDELZyjQBY+TEFR9vgP5/DIVvThS&#xA;xSExDieR69qMOpavdX0FuLWKd+SwLSi7AdgPCuWB2eOPDEA7sv8Ayz0XS5bTVdavrYXzaclYLRgG&#xA;BIRnJ4nYk8aLXIyLi6vJIERBq0k84eaNP15rWS10yPTpIQ4nKFSX5Ecd1VK8QO474QKbsGEwuzb1&#xA;HUJvK9nqumaDcaVbyRanGeFx6UYAelFqvGvxeNdshu66ImYmQJ2SPyp5Z03T/wAwdZ04wpPaxW4k&#xA;t0lUScVkZGp8VenKmEnZuzZpHFGV0bRd3a+V/Nmg6v8AVdPSzvNNMipKERG5xglTyTqrcaEHHcI4&#xA;8mOY4jdpB5T0TQdI8qv5s1u3F4zkiztXAK7NwX4TUFmYHc9BvhJ3ptzZJSnwR2THTG8sefrO8tP0&#xA;bFperW6c4JYqdOgaqqnIA0DKR329huGufHhIN3FCfl7pdiPLvmFr60ilnteakuiuylImqFJG2+Mi&#xA;z1Mzxxo81H8stOsLvQ/MDXVtFOyRjg0iKxWscn2SRUfRhknVyIlGiifyx1nSLxbby/c6VDLPEssg&#xA;vXVGJHIvQhlJ/ap1wSDHV45C5AoXzTqmleYPMtn5disFshb6gbaa6TiGdefptxCgUrTvhAplhhKE&#xA;DO72TDzlr2gaCbny5FoEJQ237i5IX7cikK1CvJuJ/a5VrgAthgxynU+Lq8sybsnr3/OLP/k1Yv8A&#xA;mBuf1LluLm1ZeTyHKm16Z+Sf+9Wrf6kP63yE3Xa/kEq82efbfXI4rFdMS09G6WQ3PqByQlVIpwSl&#xA;a164RGm3DpjDe72Zp5wB/wAc+VD29SX/AI1yI5OJg/u5ptqy2dhFret6Taxz65FGEuWJYn4I0cA/&#xA;KPi1F+1TAGqFy4YyPpeP+VvOeo6HrEl+SbiO7Ym+hJp6lSTyr2YEkjLCLdrmwCca7uTJPzE8t6XP&#xA;pUHmzR19OC64NcwgBR+86SUH2TXZh4/Tgiejj6XLIS4JdFXSEC/k7qRH7crMf+RkY/hgPNE/8YDz&#xA;XJuwT/yb5uu/LepeugMtnNRbu3rTko6Mv+UvbARbRnwDIK6sk/Mby1pbabbeadIURW95xaeGnEH1&#xA;RyWQL+yezD+3BE9HH0uWVmEujMNfuvKOnX+l6rrM7pe2sH+hQqGYGo3biqnfwqaZEW4uMZJAxjyK&#xA;R+Q9aXXPP+r6qEMayWvCFD1EavGorTueIJwyFBu1OPgxCPmjvOssOieTp5PL1uiW+pSlbu4QklRN&#xA;UM29TUn4f8nAObDTjjyes8kj8wB7j8otHkgq0cM0frEdgvqxmv8AsyMI5t2LbPK0B+T0M7eaJZUq&#xA;Io7V/VPb4mUAffv9GGXJnriOD4sh8ouk2ledHh3SSa5aOm9QyORgPRozbSh8Eu/LD1I/LHmSYDYR&#xA;HiT0qsTn+IxlzbNX9cUo/KX/AJTCP/jBL+oYZcm3W/3aR+ZJpYPN2qTQuY5YtQneN1NCrLMxBB9j&#xA;hHJuxC4D3PRNKutM/MTQ5bPUYhDrVkg43SgDdqhXX/JJHxp93akTs4EwcErH0l5Rc28tvcS28opL&#xA;C7RyDwZTQ/iMm7MGxb1r/nFn/wAmrF/zA3P6ly3Fza8vJ5DlTazD8uvN+meXJ757+OV1uUQIYVVq&#xA;FCx35MvXlkZC3E1WA5AKYjKytI7KOKsSQvgCemScoPSvMXn/AMv3/mLy/e25l+r6bJK9yzJQ0k4A&#xA;cRWp+xvkBF1+LTSjCQPVbYfmNpdt511W+ZpG0bUUi/ZPISRRKgPCvsw+7Hh2TLSyOMD+IJTpeofl&#xA;1HearBf2ks1jcTCSxnCkNGg39McWDruae464TbbOOWgQd+qt5y87aPd6Hb+X9Bhkj0+IqXklqCVT&#xA;dUUEsx33JOIDHBp5CXFLmh7DzXpkP5d3mgyc/r8shMShfhKl0apb6DjW7KWEnKJdGG5Jy2UeUb/y&#xA;VFaXVr5is3leVleG5jBJUKPsgqVZd/vwG3GzxyEgwKYedPOukX2i2ug6HBJFp9uVLSS7EhAQqqCW&#xA;NN6knfAAwwYJCRlLmhPzB8y6Zrk2nPYFyLaD05ea8fiqDtjEUy02IwBt35ceZdM0DVbm41AusUsH&#xA;pqUXl8XNW3HyGGQtdViM4gBNfL/nfQ/0Nqui62ZDZXMsjWjKnMhJiWIp2Kt8Q9zgIa8unlxCUeaX&#xA;+TfPNrpVnPo2r2xvdGnJIUAFl5dfhY0Knr12OJDPPpzI8UTUk3v/AMwPLGlaZPZ+UrEwT3IIe5Ze&#xA;AWoI5VJZ2YV2rsMHCerVHTTkbmeSSfl/51h8uz3MN5E01heBfU4ULIy1FQpoCCG3yUhbdqcHiAVz&#xA;DINc/MTyzb+X7jSvLlo0RukdCRGIo0Ego7dalqdMiIlox6WZkJTPJinkLXLDRPMKX18WFuI5EJRe&#xA;Rqw22yUg5OpxmcKCFl1TTJPN02qXELXGnSXslw0BABeNpC4BB277jHoyED4fCOdM3s/On5e6ELm8&#xA;0Kyn+vXK09I8lTrWh5MQor/KMjRLiSwZZ0JHZ5ncTy3E8k8p5SzO0kjeLMak/fk3YAUKetf84s/+&#xA;TVi/5gbn9S5bi5teXk8hyptdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;17/nFn/yasX/ADA3P6ly3FzasvJ//9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:OriginalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</xmpMM:OriginalDocumentID>
         <xmpMM:DocumentID>xmp.did:2ccf4050-9462-1f41-bfe4-8de7d9c31263</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:2ccf4050-9462-1f41-bfe4-8de7d9c31263</xmpMM:InstanceID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:b9bc9149-6a20-1c46-91d4-63df7507f1f2</stRef:instanceID>
            <stRef:documentID>xmp.did:b9bc9149-6a20-1c46-91d4-63df7507f1f2</stRef:documentID>
            <stRef:originalDocumentID>uuid:9E3E5C9A8C81DB118734DB58FDDE4BA7</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:b9bc9149-6a20-1c46-91d4-63df7507f1f2</stEvt:instanceID>
                  <stEvt:when>2018-02-08T23:30:57+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:2ccf4050-9462-1f41-bfe4-8de7d9c31263</stEvt:instanceID>
                  <stEvt:when>2018-02-08T23:31:05+02:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 22.0 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Basic RGB</illustrator:StartupProfile>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>595.276000</stDim:w>
            <stDim:h>841.890000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Red</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Yellow</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Green</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Cyan</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Blue</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>RGB Magenta</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=39 B=45</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>45</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=28 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>28</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=241 G=90 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>241</xmpG:red>
                           <xmpG:green>90</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=247 G=147 B=30</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>247</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>30</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=251 G=176 B=59</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>251</xmpG:red>
                           <xmpG:green>176</xmpG:green>
                           <xmpG:blue>59</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=252 G=238 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>252</xmpG:red>
                           <xmpG:green>238</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=217 G=224 B=33</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>217</xmpG:red>
                           <xmpG:green>224</xmpG:green>
                           <xmpG:blue>33</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=198 B=63</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>198</xmpG:green>
                           <xmpG:blue>63</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=181 B=74</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>74</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=146 B=69</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>146</xmpG:green>
                           <xmpG:blue>69</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=104 B=55</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>104</xmpG:green>
                           <xmpG:blue>55</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=34 G=181 B=115</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>34</xmpG:red>
                           <xmpG:green>181</xmpG:green>
                           <xmpG:blue>115</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=169 B=157</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>169</xmpG:green>
                           <xmpG:blue>157</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=41 G=171 B=226</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>41</xmpG:red>
                           <xmpG:green>171</xmpG:green>
                           <xmpG:blue>226</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=113 B=188</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>113</xmpG:green>
                           <xmpG:blue>188</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=46 G=49 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>46</xmpG:red>
                           <xmpG:green>49</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=27 G=20 B=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>27</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>100</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=45 B=145</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>45</xmpG:green>
                           <xmpG:blue>145</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=147 G=39 B=143</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>147</xmpG:red>
                           <xmpG:green>39</xmpG:green>
                           <xmpG:blue>143</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=158 G=0 B=93</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>158</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>93</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=20 B=90</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>20</xmpG:green>
                           <xmpG:blue>90</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=237 G=30 B=121</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>237</xmpG:red>
                           <xmpG:green>30</xmpG:green>
                           <xmpG:blue>121</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=199 G=178 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>199</xmpG:red>
                           <xmpG:green>178</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=134 B=117</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>134</xmpG:green>
                           <xmpG:blue>117</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=115 G=99 B=87</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>115</xmpG:red>
                           <xmpG:green>99</xmpG:green>
                           <xmpG:blue>87</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=83 G=71 B=65</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>83</xmpG:red>
                           <xmpG:green>71</xmpG:green>
                           <xmpG:blue>65</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=198 G=156 B=109</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>198</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>109</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=166 G=124 B=82</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>166</xmpG:red>
                           <xmpG:green>124</xmpG:green>
                           <xmpG:blue>82</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=140 G=98 B=57</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>140</xmpG:red>
                           <xmpG:green>98</xmpG:green>
                           <xmpG:blue>57</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=117 G=76 B=36</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>117</xmpG:red>
                           <xmpG:green>76</xmpG:green>
                           <xmpG:blue>36</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=96 G=56 B=19</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>96</xmpG:red>
                           <xmpG:green>56</xmpG:green>
                           <xmpG:blue>19</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=66 G=33 B=11</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>66</xmpG:red>
                           <xmpG:green>33</xmpG:green>
                           <xmpG:blue>11</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Cold</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=56 M=0 Y=20 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>101</xmpG:red>
                           <xmpG:green>200</xmpG:green>
                           <xmpG:blue>208</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=51 M=43 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>131</xmpG:red>
                           <xmpG:green>139</xmpG:green>
                           <xmpG:blue>197</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=26 M=41 Y=0 K=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>186</xmpG:red>
                           <xmpG:green>155</xmpG:green>
                           <xmpG:blue>201</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Grays</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=0 G=0 B=0</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>0</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=26 G=26 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>26</xmpG:red>
                           <xmpG:green>26</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=51 G=51 B=51</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>51</xmpG:red>
                           <xmpG:green>51</xmpG:green>
                           <xmpG:blue>51</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=77 G=77 B=77</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>77</xmpG:red>
                           <xmpG:green>77</xmpG:green>
                           <xmpG:blue>77</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=102 G=102 B=102</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>102</xmpG:red>
                           <xmpG:green>102</xmpG:green>
                           <xmpG:blue>102</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=128 G=128 B=128</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>128</xmpG:red>
                           <xmpG:green>128</xmpG:green>
                           <xmpG:blue>128</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=153 G=153 B=153</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>153</xmpG:red>
                           <xmpG:green>153</xmpG:green>
                           <xmpG:blue>153</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=179 G=179 B=179</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>179</xmpG:red>
                           <xmpG:green>179</xmpG:green>
                           <xmpG:blue>179</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=204 G=204 B=204</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>204</xmpG:red>
                           <xmpG:green>204</xmpG:green>
                           <xmpG:blue>204</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=230 G=230 B=230</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>230</xmpG:red>
                           <xmpG:green>230</xmpG:green>
                           <xmpG:blue>230</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=242 G=242 B=242</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>242</xmpG:red>
                           <xmpG:green>242</xmpG:green>
                           <xmpG:blue>242</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
         <photoshop:AuthorsPosition>svekloid@gmail.com</photoshop:AuthorsPosition>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -841.89 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 841.89 li
595.276 841.89 li
595.276 0 li
cp
clp
595.276 695.25 mo
.000129395 695.25 li
.000129395 -6.05469e-05 li
595.276 -6.05469e-05 li
595.276 695.25 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.544488 .24976 .299229 .00210575 cmyk
f
464.551 -6.05469e-05 mo
464.551 -6.05469e-05 453.304 99.9999 595.276 144 cv
595.276 58.9999 li
595.276 58.9999 561 47.9999 562 -6.05469e-05 cv
464.551 -6.05469e-05 li
cp
.325261 .117769 .182986 0 cmyk
f
175.137 -6.05469e-05 mo
175.137 -6.05469e-05 172.42 191.057 398.71 243.228 cv
625 295.399 539.806 473.462 444.403 480.43 cv
349 487.399 536.135 480.43 536.135 480.43 cv
536.135 480.43 660.094 322.371 503.547 239.885 cv
347 157.399 322.308 75.6015 349.654 -6.05469e-05 cv
175.137 -6.05469e-05 li
cp
f
.8805 218.018 mo
.8805 218.018 19.6149 368.426 168.602 348.261 cv
317.589 328.095 339.327 456.788 333.261 495.098 cv
327.196 533.409 388.757 487.162 388.757 487.162 cv
388.757 487.162 437.368 331.672 258.985 296.886 cv
80.6012 262.099 26.4435 150.381 46.7726 -6.05469e-05 cv
.000129395 -6.05469e-05 li
.8805 218.018 li
cp
f
563.749 85.2885 mo
563.749 85.2885 535.224 70.7763 486.182 71.7768 cv
437.14 72.7778 404.612 71.7768 436.139 75.7802 cv
467.666 79.7836 491.687 76.7812 520.212 80.7846 cv
548.736 84.788 591.272 97.7993 563.749 85.2885 cv
cp
.189853 .202945 .211795 0 cmyk
f
397.606 66.2724 mo
397.606 66.2724 359.573 63.77 349.564 60.7675 cv
339.555 57.7651 317.037 53.2612 314.034 58.2656 cv
311.031 63.2695 259.724 60.7675 297.638 63.77 cv
335.552 66.7729 421.627 71.2768 397.606 66.2724 cv
cp
f
342.752 48.2568 mo
342.752 48.2568 306.527 44.7538 307.528 42.7519 cv
308.529 40.7504 357.88 49.9072 342.752 48.2568 cv
cp
f
161.569 37.581 mo
161.569 37.581 141.719 39.416 140.551 35.2455 cv
139.383 31.0751 137.381 32.5766 151.894 32.5766 cv
166.406 32.5766 176.082 33.7162 176.082 35.1484 cv
176.082 36.58 179.585 38.9155 161.569 37.581 cv
cp
f
.000129395 45.4604 mo
.000129395 45.4604 60.3151 58.2656 118.365 59.7665 cv
176.415 61.268 163.904 68.6752 225.458 71.7275 cv
287.01 74.7797 334.551 80.5361 334.551 81.1611 cv
334.551 81.7856 365.078 87.5424 293.016 81.1611 cv
220.954 74.7797 248.978 84.788 208.943 76.2807 cv
168.909 67.7734 159.901 69.7597 143.387 68.5165 cv
126.873 67.2729 104.854 65.6728 129.375 71.7275 cv
153.896 77.7822 129.125 77.2817 153.896 77.7822 cv
178.667 78.2827 198.184 84.788 181.42 85.539 cv
164.655 86.2895 132.211 84.6215 117.197 82.9531 cv
102.185 81.2851 64.819 81.9526 49.1388 82.2861 cv
33.4586 82.6196 22.7828 80.6181 29.7887 83.954 cv
36.7951 87.2905 56.6188 96.6318 .000129395 89.9594 cv
.000129395 45.4604 li
cp
f
595.276 116.649 mo
595.276 116.649 535.224 111.644 538.894 112.979 cv
542.564 114.313 595.276 124.656 595.276 124.656 cv
595.276 131.996 li
595.276 131.996 573.59 124.99 523.881 119.318 cv
474.172 113.646 505.707 119.6 546.234 124.656 cv
586.76 129.712 595.276 135.665 595.276 135.665 cv
595.276 155.016 li
595.276 155.016 588.603 154.682 584.6 150.011 cv
580.596 145.34 587.603 133.771 568.92 133.884 cv
550.237 133.997 529.886 132.329 519.211 129.994 cv
508.535 127.659 502.196 127.325 495.857 127.992 cv
489.518 128.659 490.185 133.664 471.17 128.326 cv
452.153 122.988 444.813 122.988 438.14 124.322 cv
431.468 125.657 433.559 126.324 423.672 122.32 cv
413.787 118.317 410.117 119.318 400.108 119.318 cv
390.099 119.318 381.091 116.315 355.736 114.313 cv
330.381 112.312 321.667 113.98 307.507 111.311 cv
293.349 108.642 259.987 112.979 245.308 108.976 cv
230.629 104.972 218.285 107.975 187.591 104.972 cv
156.899 101.97 74.8009 102.137 .000129395 104.972 cv
.000129395 99.3007 li
.000129395 99.3007 36.1276 96.9653 50.8068 97.6328 cv
65.4865 98.2997 63.4845 93.2953 90.1744 95.6308 cv
116.864 97.9662 174.58 100.635 179.585 97.9662 cv
184.589 95.2973 192.596 95.7143 162.57 95.0053 cv
132.544 94.2963 121.201 92.2304 121.535 90.5942 cv
121.868 88.9584 116.197 89.5615 135.88 90.5942 cv
155.564 91.6274 184.255 93.5649 186.924 90.5942 cv
189.593 87.624 189.593 87.5346 211.946 89.581 cv
234.298 91.6274 265.659 93.9838 278.67 92.3051 cv
291.681 90.6264 300.022 92.3159 312.032 92.3051 cv
324.043 92.2949 322.708 95.9643 336.386 96.6318 cv
350.065 97.2988 380.757 102.637 398.106 98.2997 cv
415.455 93.9628 412.452 98.9672 452.486 99.6342 cv
492.521 100.302 466.832 91.3149 485.181 92.3051 cv
503.53 93.2953 554.908 93.6293 595.276 101.302 cv
595.276 116.649 li
cp
f
595.276 276.12 mo
595.276 276.12 557.243 272.45 537.559 273.451 cv
517.876 274.452 487.85 268.113 479.509 270.782 cv
471.17 273.451 471.17 272.784 491.52 276.12 cv
511.871 279.456 510.203 279.789 523.881 280.456 cv
537.559 281.124 551.905 275.453 568.92 280.456 cv
585.934 285.461 595.276 286.462 595.276 286.462 cv
595.276 276.12 li
cp
f
595.276 296.137 mo
595.276 296.137 582.265 297.471 577.594 298.472 cv
572.923 299.473 577.26 295.136 549.57 293.468 cv
521.88 291.8 508.535 289.798 487.516 290.465 cv
466.499 291.133 460.827 290.148 461.828 294.477 cv
462.829 298.806 431.468 293.134 431.468 296.804 cv
431.468 300.474 457.686 303.143 474.269 303.81 cv
490.853 304.477 492.521 301.809 509.536 303.81 cv
526.55 305.812 544.899 309.148 557.911 309.482 cv
570.922 309.815 560.913 304.144 538.894 301.809 cv
516.875 299.473 493.855 299.14 492.187 297.805 cv
490.519 296.471 487.516 294.802 507.2 295.803 cv
526.883 296.804 518.877 292.467 530.887 295.803 cv
542.898 299.14 537.559 299.022 548.903 299.915 cv
560.246 300.808 561.247 304.144 572.589 305.812 cv
583.933 307.48 586.268 318.156 595.276 318.823 cv
595.276 296.137 li
cp
f
595.276 180.371 mo
595.276 180.371 571.255 180.871 561.247 179.537 cv
551.238 178.202 546.067 177.201 544.899 179.537 cv
543.732 181.872 540.228 182.223 525.882 180.462 cv
511.537 178.703 512.872 181.006 504.198 179.854 cv
495.523 178.703 496.191 182.34 478.842 179.854 cv
461.494 177.368 451.652 179.62 412.619 175.867 cv
373.586 172.113 344.727 172.03 364.411 174.365 cv
384.094 176.701 405.112 181.523 414.37 181.573 cv
423.629 181.622 421.627 184.374 434.637 183.623 cv
447.649 182.872 455.406 186.375 472.421 186.626 cv
489.435 186.876 488.684 189.378 505.199 189.628 cv
521.713 189.879 529.219 190.379 539.728 191.38 cv
550.237 192.381 569.504 192.881 576.76 193.882 cv
584.016 194.883 594.025 200.638 579.512 198.887 cv
565 197.135 538.227 195.133 551.739 197.385 cv
565.25 199.637 579.512 202.139 574.758 204.642 cv
570.005 207.143 560.747 200.388 544.482 200.638 cv
528.218 200.888 518.961 198.636 512.705 201.389 cv
506.45 204.141 513.456 196.635 486.682 194.883 cv
459.91 193.131 462.662 189.114 447.399 188.996 cv
432.135 188.878 432.474 191.13 423.672 190.629 cv
414.871 190.129 419.875 186.375 408.866 186.375 cv
397.856 186.375 375.087 186.125 368.331 186.125 cv
361.575 186.125 348.563 182.372 348.063 186.626 cv
347.562 190.879 351.316 189.378 333.55 187.877 cv
315.786 186.375 309.78 185.625 285.759 185.375 cv
261.739 185.124 259.487 178.619 237.468 178.619 cv
215.449 178.619 209.443 176.117 182.671 177.368 cv
155.898 178.619 152.144 174.976 129.375 172.794 cv
106.605 170.612 110.108 165.858 94.8449 165.858 cv
79.5817 165.858 64.569 164.607 60.3151 162.105 cv
56.0617 159.602 59.0641 157.351 41.299 157.101 cv
23.5338 156.85 22.7565 151.846 .000129395 151.346 cv
.000129395 157.518 li
.000129395 157.518 16.2775 154.849 28.7882 161.854 cv
41.299 168.861 41.466 163.022 52.6422 167.192 cv
63.818 171.363 69.4899 170.695 78.6642 170.529 cv
87.839 170.362 89.34 166.859 99.6827 169.861 cv
110.025 172.864 108.524 169.528 119.533 173.198 cv
130.543 176.868 134.88 178.536 147.057 179.37 cv
159.234 180.204 159.734 183.039 174.58 182.872 cv
189.426 182.706 190.26 186.375 197.433 186.209 cv
204.606 186.042 216.116 185.708 222.288 187.21 cv
228.46 188.711 225.958 189.628 236.717 189.128 cv
247.476 188.627 253.982 190.129 260.738 191.13 cv
267.494 192.131 274.5 195.884 284.758 193.632 cv
295.017 191.38 329.797 199.137 314.284 199.137 cv
298.77 199.137 292.515 195.133 287.761 196.384 cv
283.007 197.635 277.002 199.137 262.489 195.884 cv
247.977 192.631 243.473 193.131 225.708 193.131 cv
207.943 193.131 210.444 189.628 195.932 189.628 cv
181.42 189.628 169.409 187.126 146.64 189.378 cv
123.87 191.63 133.629 185.625 108.857 186.375 cv
84.0856 187.126 83.0846 182.872 65.82 183.873 cv
48.5553 184.874 39.047 175.673 25.2853 178.272 cv
11.5231 180.871 14.1657 176.2 .000129395 175.366 cv
.000129395 180.955 li
.000129395 180.955 20.2809 184.207 29.7887 181.205 cv
39.297 178.202 45.4689 186.375 60.6491 185.708 cv
75.8287 185.041 68.8224 190.045 84.6696 190.045 cv
100.517 190.045 108.524 191.547 116.864 191.547 cv
125.205 191.547 126.706 194.383 144.221 193.048 cv
161.736 191.714 163.07 195.884 177.416 196.718 cv
191.762 197.552 203.272 200.555 222.789 199.554 cv
242.305 198.553 242.973 201.722 255.984 202.223 cv
268.995 202.723 278.227 206.56 297.381 205.893 cv
316.536 205.225 312.199 207.56 325.878 208.394 cv
339.555 209.228 333.717 211.23 323.542 210.563 cv
313.367 209.896 311.865 208.728 300.522 208.728 cv
289.179 208.728 285.175 212.064 300.522 212.064 cv
315.869 212.064 316.036 216.902 335.052 215.567 cv
354.068 214.233 360.074 217.236 375.42 217.569 cv
390.766 217.903 383.26 221.072 400.108 221.906 cv
416.956 222.74 409.95 227.912 428.132 227.745 cv
446.314 227.578 446.898 229.163 456.907 229.163 cv
466.916 229.163 473.171 230.664 481.678 230.664 cv
490.185 230.664 495.44 227.661 486.432 227.661 cv
477.424 227.661 477.174 225.159 467.166 225.409 cv
457.157 225.66 456.156 224.158 439.892 224.659 cv
423.629 225.159 428.132 221.656 438.391 221.656 cv
448.65 221.656 452.653 221.906 461.411 221.906 cv
470.169 221.906 473.922 224.909 483.429 224.909 cv
492.938 224.909 494.689 228.162 505.949 226.661 cv
517.209 225.159 517.209 229.913 528.218 228.662 cv
539.228 227.411 540.228 231.289 548.736 230.664 cv
557.243 230.038 551.238 239.171 561.247 238.796 cv
571.255 238.42 575.884 239.797 582.89 241.798 cv
589.896 243.8 595.276 244.301 595.276 244.301 cv
595.276 180.371 li
cp
f
595.276 251.307 mo
595.276 251.307 582.64 245.927 567.127 248.679 cv
551.613 251.432 549.737 244.551 537.601 244.301 cv
525.465 244.05 518.961 242.299 510.829 243.3 cv
502.696 244.301 492.938 239.797 485.306 240.923 cv
477.674 242.049 479.676 243.3 492.312 244.301 cv
504.948 245.302 498.818 250.431 515.583 249.555 cv
532.346 248.679 530.22 250.431 541.104 251.307 cv
551.989 252.183 543.857 256.936 559.621 255.56 cv
575.383 254.184 586.143 259.063 595.276 259.063 cv
595.276 251.307 li
cp
f
345.631 117.65 mo
345.631 117.65 327.045 118.817 310.281 115.314 cv
293.516 111.811 280.005 116.065 264.741 115.314 cv
249.478 114.564 248.245 113.91 226.709 110.06 cv
205.172 106.21 147.523 108.559 176.356 110.06 cv
205.19 111.561 212.696 112.812 227.96 114.564 cv
243.223 116.315 263.74 119.608 278.003 117.837 cv
292.265 116.065 299.771 116.871 312.282 118.345 cv
324.793 119.818 361.965 119.234 345.631 117.65 cv
cp
f
340.973 171.363 mo
340.973 171.363 329.297 171.113 319.539 169.361 cv
309.78 167.609 298.521 170.112 309.28 171.363 cv
320.039 172.614 319.789 173.865 329.047 173.365 cv
338.304 172.864 354.24 172.24 340.973 171.363 cv
cp
f
134.88 156.517 mo
134.88 156.517 159.568 155.016 165.239 157.518 cv
170.91 160.019 191.428 158.852 201.27 159.686 cv
211.112 160.52 229.127 157.851 235.132 159.686 cv
241.138 161.521 252.648 165.191 258.319 164.523 cv
263.991 163.856 272.832 163.856 278.67 163.856 cv
284.508 163.856 296.018 166.525 285.509 167.192 cv
275 167.86 271.664 165.357 265.826 167.192 cv
259.987 169.027 258.152 168.861 240.804 164.69 cv
223.456 160.52 222.381 161.522 212.326 162.189 cv
202.271 162.855 209.944 165.524 196.766 164.19 cv
183.588 162.855 175.486 160.853 168.444 160.853 cv
161.402 160.853 157.9 160.353 151.227 160.019 cv
144.554 159.686 120.7 156.961 134.88 156.517 cv
cp
f
563.749 332.118 mo
563.749 332.118 535.224 321.896 486.182 320.182 cv
437.14 318.468 404.612 316.312 436.139 320.261 cv
467.667 324.206 491.687 323.506 520.212 327.306 cv
548.736 331.103 591.273 341.06 563.749 332.118 cv
cp
f
397.606 312.603 mo
397.606 312.603 359.573 309.26 349.564 306.94 cv
339.555 304.62 317.037 300.78 314.034 303.712 cv
311.031 306.644 259.724 302.664 297.638 306.315 cv
335.552 309.962 421.627 316.812 397.606 312.603 cv
cp
f
342.752 298.933 mo
342.752 298.933 306.527 295.05 307.528 293.867 cv
308.529 292.685 357.88 300.668 342.752 298.933 cv
cp
f
161.569 283.697 mo
161.569 283.697 141.719 283.878 140.551 281.249 cv
139.383 278.621 137.381 279.451 151.894 280.147 cv
166.407 280.843 176.082 282.01 176.082 282.893 cv
176.082 283.775 179.585 285.382 161.569 283.697 cv
cp
f
.000129395 280.832 mo
.000129395 280.832 60.3151 291.629 118.365 295.32 cv
176.415 299.009 163.904 302.98 225.458 307.782 cv
287.01 312.579 334.551 318.369 334.551 318.752 cv
334.551 319.136 365.078 324.113 293.016 316.787 cv
220.954 309.448 248.978 316.936 208.943 309.804 cv
168.909 302.662 159.901 303.459 143.387 301.908 cv
126.873 300.357 104.854 298.323 129.375 303.224 cv
153.896 308.122 129.125 306.64 153.896 308.122 cv
178.667 309.603 198.184 314.535 181.42 314.206 cv
164.655 313.876 132.211 311.314 117.198 309.575 cv
102.185 307.835 64.819 306.48 49.1388 305.945 cv
33.4591 305.409 22.7828 303.666 29.7892 306.061 cv
36.7951 308.455 56.6188 315.164 .000129395 308.369 cv
.000129395 280.832 li
cp
f
595.276 352.759 mo
595.276 352.759 535.224 346.887 538.894 347.875 cv
542.564 348.863 595.276 357.648 595.276 357.648 cv
595.276 362.13 li
595.276 362.13 573.59 356.839 523.881 351.048 cv
474.172 345.249 505.707 350.37 546.234 355.357 cv
586.76 360.339 595.276 364.372 595.276 364.372 cv
595.276 376.188 li
595.276 376.188 588.604 375.675 584.6 372.637 cv
580.596 369.598 587.603 362.857 568.921 362.056 cv
550.237 361.255 529.886 359.287 519.211 357.36 cv
508.535 355.434 502.196 354.933 495.857 355.046 cv
489.518 355.158 490.185 358.253 471.17 354.098 cv
452.153 349.94 444.813 349.597 438.141 350.103 cv
431.468 350.609 433.559 351.116 423.672 348.2 cv
413.787 345.283 410.117 345.725 400.108 345.257 cv
390.099 344.789 381.091 342.525 355.736 340.108 cv
330.381 337.691 321.667 338.307 307.507 336.003 cv
293.349 333.698 259.987 334.801 245.308 331.649 cv
230.629 328.495 218.285 329.764 187.591 326.473 cv
156.899 323.179 74.8014 319.422 .000129395 317.659 cv
.000129395 314.149 li
.000129395 314.149 36.1276 314.406 50.8073 315.509 cv
65.4865 316.613 63.4845 313.426 90.1744 316.127 cv
116.864 318.826 174.58 323.188 179.585 321.779 cv
184.589 320.37 192.596 321.003 162.57 319.152 cv
132.544 317.3 121.201 315.49 121.535 314.496 cv
121.868 313.502 116.197 313.606 135.88 315.173 cv
155.564 316.739 184.255 319.286 186.924 317.581 cv
189.593 315.877 189.593 315.822 211.946 318.138 cv
234.298 320.452 265.659 323.381 278.67 322.962 cv
291.681 322.543 300.022 323.976 312.032 324.536 cv
324.043 325.095 322.708 327.287 336.386 328.341 cv
350.065 329.395 380.758 334.116 398.106 332.271 cv
415.455 330.429 412.452 333.356 452.486 335.649 cv
492.521 337.941 466.832 331.229 485.181 332.701 cv
503.53 334.172 554.908 336.798 595.276 343.387 cv
595.276 352.759 li
cp
f
595.276 391.672 mo
595.276 391.672 571.255 390.873 561.247 389.598 cv
551.238 388.323 546.067 387.473 544.899 388.847 cv
543.732 390.221 540.229 390.274 525.883 388.539 cv
511.538 386.803 512.872 388.273 504.198 387.17 cv
495.523 386.067 496.191 388.324 478.842 386.005 cv
461.494 383.685 451.652 384.612 412.619 380.516 cv
373.586 376.416 344.727 375.036 364.411 377.376 cv
384.094 379.715 405.112 383.64 414.371 384.095 cv
423.629 384.551 421.627 386.146 434.637 386.283 cv
447.649 386.421 455.406 388.923 472.421 389.856 cv
489.435 390.79 488.684 392.288 505.199 393.197 cv
521.713 394.107 529.219 394.757 539.728 395.851 cv
550.237 396.944 569.504 398.132 576.76 399.076 cv
584.016 400.019 594.025 403.992 579.512 402.259 cv
565 400.525 538.227 398.077 551.739 400.072 cv
565.251 402.065 579.512 404.246 574.758 405.557 cv
570.005 406.869 560.747 402.318 544.482 401.728 cv
528.218 401.139 518.961 399.338 512.705 400.736 cv
506.45 402.135 513.456 397.862 486.682 395.565 cv
459.91 393.268 462.662 390.933 447.399 390.161 cv
432.135 389.389 432.475 390.785 423.672 390.075 cv
414.871 389.365 419.875 387.293 408.866 386.788 cv
397.856 386.283 375.087 385.085 368.331 384.775 cv
361.575 384.465 348.563 381.563 348.063 384.152 cv
347.563 386.742 351.316 385.992 333.55 384.255 cv
315.786 382.518 309.78 381.781 285.759 380.525 cv
261.739 379.269 259.487 375.163 237.468 374.151 cv
215.449 373.138 209.444 371.321 182.671 370.86 cv
155.898 370.4 152.144 367.98 129.375 365.586 cv
106.605 363.191 110.108 360.417 94.8449 359.713 cv
79.5817 359.009 64.569 357.543 60.3151 355.8 cv
56.0617 354.057 59.0641 352.804 41.299 351.828 cv
23.5338 350.851 22.7565 347.72 .000129395 346.355 cv
.000129395 350.174 li
.000129395 350.174 16.2775 349.277 28.7882 354.188 cv
41.299 359.098 41.466 355.497 52.6422 358.59 cv
63.8185 361.683 69.4899 361.532 78.6647 361.852 cv
87.839 362.171 89.3405 360.077 99.6827 362.408 cv
110.025 364.739 108.524 362.61 119.533 365.382 cv
130.543 368.154 134.88 369.382 147.057 370.457 cv
159.234 371.531 159.734 373.303 174.58 373.881 cv
189.426 374.46 190.26 376.76 197.433 376.986 cv
204.606 377.212 216.116 377.535 222.288 378.743 cv
228.46 379.95 225.958 380.4 236.717 380.585 cv
247.477 380.77 253.982 381.993 260.738 382.918 cv
267.494 383.843 274.5 386.472 284.758 385.557 cv
295.018 384.642 329.797 391 314.284 390.291 cv
298.771 389.582 292.515 386.835 287.761 387.387 cv
283.007 387.938 277.002 388.587 262.489 385.923 cv
247.977 383.257 243.473 383.359 225.708 382.546 cv
207.943 381.732 210.444 379.689 195.932 379.024 cv
181.42 378.359 169.409 376.266 146.64 376.611 cv
123.87 376.957 133.629 373.699 108.857 373.026 cv
84.0856 372.353 83.0851 369.68 65.82 369.505 cv
48.5553 369.331 39.047 363.206 25.2853 364.18 cv
11.5231 365.155 14.1657 362.387 .000129395 361.22 cv
.000129395 364.678 li
.000129395 364.678 20.2809 367.622 29.7892 366.201 cv
39.297 364.781 45.4694 370.118 60.6491 370.402 cv
75.8287 370.686 68.8229 373.457 84.6696 374.183 cv
100.517 374.909 108.524 376.203 116.864 376.585 cv
125.205 376.967 126.706 378.786 144.221 378.764 cv
161.736 378.743 163.07 381.375 177.416 382.545 cv
191.762 383.716 203.272 386.091 222.789 386.367 cv
242.305 386.643 242.973 388.623 255.984 389.526 cv
268.995 390.428 278.227 393.208 297.381 393.672 cv
316.536 394.135 312.199 395.372 325.878 396.509 cv
339.555 397.644 333.717 398.607 323.542 397.734 cv
313.367 396.861 311.865 396.075 300.522 395.558 cv
289.179 395.041 285.176 396.91 300.522 397.609 cv
315.869 398.308 316.036 401.288 335.052 401.332 cv
354.068 401.378 360.074 403.494 375.421 404.396 cv
390.766 405.299 383.26 406.902 400.108 408.179 cv
416.956 409.455 409.95 412.308 428.132 413.029 cv
446.314 413.751 446.898 414.748 456.907 415.201 cv
466.916 415.655 473.171 416.857 481.678 417.242 cv
490.185 417.627 495.44 416.028 486.432 415.62 cv
477.424 415.211 477.174 413.668 467.166 413.367 cv
457.157 413.067 456.156 412.102 439.892 411.671 cv
423.629 411.24 428.132 409.297 438.391 409.763 cv
448.65 410.228 452.653 410.563 461.411 410.961 cv
470.169 411.358 473.922 413.367 483.429 413.798 cv
492.938 414.229 494.689 416.3 505.949 415.891 cv
517.209 415.483 517.209 418.392 528.218 418.125 cv
539.228 417.858 540.229 420.275 548.736 420.278 cv
557.243 420.281 551.238 425.591 561.247 425.814 cv
571.255 426.037 575.884 427.086 582.89 428.625 cv
589.896 430.164 595.276 430.712 595.276 430.712 cv
595.276 391.672 li
cp
f
595.276 434.991 mo
595.276 434.991 582.64 431.136 567.127 432.119 cv
551.614 433.103 549.737 428.812 537.601 428.112 cv
525.466 427.412 518.961 426.047 510.829 426.292 cv
502.696 426.539 492.938 423.342 485.306 423.687 cv
477.674 424.032 479.676 424.888 492.312 426.071 cv
504.948 427.252 498.818 430.116 515.583 430.334 cv
532.347 430.553 530.22 431.529 541.104 432.553 cv
551.989 433.579 543.857 436.12 559.621 435.986 cv
575.384 435.854 586.143 439.318 595.276 439.727 cv
595.276 434.991 li
cp
f
345.631 341.684 mo
345.631 341.684 327.046 341.531 310.281 338.594 cv
293.516 335.655 280.005 337.637 264.741 336.46 cv
249.478 335.283 248.245 334.823 226.709 331.443 cv
205.172 328.062 147.523 326.803 176.356 329.081 cv
205.19 331.359 212.696 332.481 227.96 334.275 cv
243.223 336.068 263.74 339.055 278.003 338.633 cv
292.265 338.211 299.771 339.058 312.283 340.55 cv
324.793 342.04 361.965 343.421 345.631 341.684 cv
cp
f
340.973 374.454 mo
340.973 374.454 329.297 373.762 319.539 372.236 cv
309.78 370.709 298.521 371.728 309.28 372.993 cv
320.039 374.257 319.789 375.015 329.047 375.133 cv
338.304 375.252 354.241 375.603 340.973 374.454 cv
cp
f
134.88 355.797 mo
134.88 355.797 159.568 356.014 165.239 357.82 cv
170.911 359.624 191.428 359.853 201.27 360.823 cv
211.112 361.791 229.128 360.981 235.132 362.388 cv
241.138 363.795 252.648 366.585 258.319 366.437 cv
263.991 366.288 272.832 366.696 278.67 366.966 cv
284.508 367.236 296.018 369.408 285.509 369.333 cv
275 369.259 271.664 367.566 265.826 368.425 cv
259.987 369.285 258.152 369.098 240.804 365.731 cv
223.456 362.362 222.381 362.929 212.326 362.875 cv
202.271 362.821 209.944 364.82 196.766 363.389 cv
183.588 361.958 175.486 360.35 168.444 360.025 cv
161.402 359.699 157.9 359.229 151.227 358.714 cv
144.555 358.2 120.7 355.415 134.88 355.797 cv
cp
f
32.8595 277.938 mo
91.3595 277.938 li
87.3981 267.724 li
32.8595 269.492 li
32.8595 277.938 li
cp
.689662 .668086 .645533 .720363 cmyk
f
43.34 274.868 mo
47.1642 275.658 49.6242 279.399 48.8336 283.224 cv
48.0436 287.048 44.3024 289.507 40.4782 288.717 cv
36.6535 287.927 34.194 284.186 34.984 280.361 cv
35.7745 276.537 39.5153 274.078 43.34 274.868 cv
cp
.63476 .636408 .603296 .493263 cmyk
f
37.0997 277.766 mo
36.4855 278.498 36.0563 279.343 35.8243 280.275 cv
34.2711 279.889 li
34.5617 278.718 35.1012 277.657 35.8732 276.737 cv
37.0997 277.766 li
cp
36.2213 284.432 mo
34.7692 285.107 li
34.2672 284.029 34.0148 282.833 34.0372 281.65 cv
35.6388 281.681 li
35.6198 282.622 35.8214 283.573 36.2213 284.432 cv
cp
40.6954 275.64 mo
39.7706 275.822 38.8829 276.22 38.1276 276.79 cv
37.1622 275.514 li
38.1105 274.798 39.2243 274.298 40.3849 274.068 cv
40.6954 275.64 li
cp
39.1398 287.42 mo
38.4342 288.856 li
37.3717 288.335 36.4244 287.563 35.695 286.623 cv
36.9596 285.642 li
37.5402 286.39 38.2941 287.004 39.1398 287.42 cv
cp
43.6417 289.472 mo
42.5451 289.72 41.4254 289.73 40.316 289.501 cv
40.11 289.456 li
40.4738 287.896 li
40.6398 287.933 li
41.5241 288.116 42.4157 288.108 43.2892 287.911 cv
43.6417 289.472 li
cp
46.715 275.556 mo
45.7374 276.824 li
44.9806 276.241 44.1193 275.847 43.1779 275.652 cv
42.8195 275.579 42.4601 275.536 42.1051 275.524 cv
42.1578 273.924 li
42.6032 273.939 43.0553 273.993 43.5001 274.083 cv
44.6832 274.328 45.7643 274.824 46.715 275.556 cv
cp
48.0797 286.682 mo
47.3434 287.61 46.3893 288.372 45.32 288.887 cv
44.6251 287.444 li
45.4782 287.034 46.2389 286.426 46.8258 285.687 cv
48.0797 286.682 li
cp
49.5651 279.956 mo
48.0079 280.331 li
47.7882 279.413 47.3536 278.541 46.7531 277.811 cv
47.9899 276.794 li
48.7438 277.711 49.2882 278.805 49.5651 279.956 cv
cp
49.6198 283.374 mo
49.4884 283.929 49.2902 284.602 49.0197 285.172 cv
47.5734 284.485 li
47.7882 284.032 47.8883 283.524 48.0514 283.052 cv
48.1408 282.619 48.1842 282.177 48.1813 281.735 cv
49.7819 281.723 li
49.7863 282.277 49.7316 282.833 49.6198 283.374 cv
cp
f
60.7037 274.722 mo
64.6017 274.488 67.9518 277.458 68.1862 281.356 cv
68.4205 285.254 65.4503 288.604 61.5519 288.839 cv
57.6539 289.073 54.3038 286.103 54.0695 282.205 cv
53.8351 278.307 56.8053 274.956 60.7037 274.722 cv
cp
f
55.4352 279.147 mo
55.0328 280.014 54.839 280.941 54.858 281.902 cv
53.2579 281.934 li
53.233 280.728 53.4772 279.563 53.9826 278.474 cv
55.4352 279.147 li
cp
56.3248 285.812 mo
55.0997 286.842 li
54.3336 285.932 53.778 284.843 53.4913 283.695 cv
55.0451 283.308 li
55.2726 284.221 55.7155 285.087 56.3248 285.812 cv
cp
58.3517 276.157 mo
57.507 276.574 56.7535 277.19 56.173 277.938 cv
54.9078 276.956 li
55.6368 276.018 56.5817 275.245 57.6422 274.721 cv
58.3517 276.157 li
cp
59.922 287.935 mo
59.6154 289.506 li
58.4537 289.28 57.3375 288.782 56.3883 288.065 cv
57.3532 286.787 li
58.109 287.358 58.9972 287.755 59.922 287.935 cv
cp
64.8034 288.743 mo
63.8092 289.268 62.7306 289.57 61.6002 289.638 cv
61.3893 289.648 li
61.3336 288.047 li
61.504 288.039 li
62.4054 287.985 63.2643 287.746 64.0558 287.328 cv
64.8034 288.743 li
cp
64.1412 274.506 mo
63.5285 275.986 li
62.6456 275.62 61.7116 275.464 60.7516 275.521 cv
60.3864 275.544 60.0285 275.597 59.6827 275.678 cv
59.3165 274.12 li
59.7501 274.018 60.2008 273.952 60.6539 273.923 cv
61.8595 273.851 63.0328 274.047 64.1412 274.506 cv
cp
68.36 284.892 mo
67.8912 285.979 67.1691 286.964 66.2711 287.74 cv
65.2238 286.528 li
65.9401 285.91 66.5162 285.125 66.8903 284.258 cv
68.36 284.892 li
cp
68.0402 278.012 mo
66.6344 278.779 li
66.1832 277.95 65.5363 277.222 64.7662 276.673 cv
65.695 275.369 li
66.6622 276.058 67.4728 276.972 68.0402 278.012 cv
cp
68.984 281.297 mo
69.0021 281.866 68.9865 282.568 68.8742 283.189 cv
67.2985 282.903 li
67.3878 282.409 67.3522 281.893 67.3864 281.395 cv
67.3595 280.953 67.2863 280.515 67.1686 280.09 cv
68.7106 279.661 li
68.859 280.194 68.9513 280.746 68.984 281.297 cv
cp
f
75.0783 277.01 mo
77.695 274.112 82.1666 273.883 85.0651 276.5 cv
87.964 279.117 88.1925 283.588 85.5758 286.487 cv
82.9591 289.386 78.4874 289.614 75.589 286.997 cv
72.6901 284.38 72.4616 279.909 75.0783 277.01 cv
cp
f
74.4205 283.859 mo
74.7413 284.76 75.2526 285.557 75.9396 286.228 cv
74.82 287.373 li
73.9572 286.53 73.3156 285.528 72.9122 284.396 cv
74.4205 283.859 li
cp
79.7257 287.99 mo
79.5734 289.584 li
78.3893 289.472 77.2301 289.084 76.2208 288.466 cv
77.0577 287.1 li
77.86 287.593 78.7828 287.9 79.7257 287.99 cv
cp
74.4059 279.682 mo
74.0953 280.572 73.9899 281.539 74.0993 282.479 cv
72.5094 282.666 li
72.3722 281.485 72.504 280.271 72.8932 279.155 cv
74.4059 279.682 li
cp
83.7799 286.985 mo
84.6618 288.32 li
83.6744 288.973 82.5289 289.399 81.3497 289.553 cv
81.1422 287.965 li
82.0817 287.843 82.9933 287.504 83.7799 286.985 cv
cp
87.8278 284.14 mo
87.4869 285.211 86.9288 286.182 86.1696 287.023 cv
86.0265 287.178 li
84.8654 286.075 li
84.9816 285.95 li
85.5866 285.28 86.0314 284.507 86.3029 283.654 cv
87.8278 284.14 li
cp
77.3795 274.448 mo
77.9791 275.933 li
77.0929 276.29 76.317 276.833 75.6725 277.547 cv
75.4279 277.819 75.2096 278.107 75.0197 278.408 cv
73.6666 277.553 li
73.9044 277.176 74.1793 276.813 74.483 276.476 cv
75.2926 275.579 76.2672 274.897 77.3795 274.448 cv
cp
87.6666 278.9 mo
88.0949 280.005 88.2692 281.214 88.1725 282.396 cv
86.5763 282.266 li
86.6539 281.322 86.5148 280.358 86.1744 279.478 cv
87.6666 278.9 li
cp
82.6173 274.216 mo
82.1525 275.748 li
81.2492 275.474 80.278 275.408 79.3439 275.556 cv
79.0929 273.974 li
80.2653 273.788 81.484 273.872 82.6173 274.216 cv
cp
85.5934 275.898 mo
86.0045 276.292 86.4855 276.804 86.84 277.325 cv
85.5158 278.226 li
85.2335 277.81 84.8468 277.468 84.5216 277.088 cv
84.193 276.791 83.8341 276.53 83.4518 276.31 cv
84.2511 274.923 li
84.7311 275.199 85.1832 275.528 85.5934 275.898 cv
cp
f
70.7682 257.901 mo
74.3087 258.087 li
74.1549 259.726 li
70.068 259.669 li
70.7682 257.901 li
cp
87.8453 260.67 mo
80.5577 260.67 li
80.5577 258.415 li
84.11 258.602 li
87.8453 260.67 li
cp
76.3053 260.67 mo
74.9376 259.736 li
74.8742 259.735 li
75.0255 258.125 li
79.8405 258.378 li
79.8405 260.67 li
76.3053 260.67 li
cp
103.889 273.445 mo
103.189 269.492 li
97.9186 267.141 li
95.0499 262.071 li
88.9127 260.537 li
84.11 257.935 li
70.5856 257.334 li
68.1989 258.735 li
33.5451 258.735 li
33.5451 260.803 li
29.276 267.408 li
28.8424 273.411 li
27.4747 273.924 li
28.0084 276.546 li
29.276 277.28 li
32.0607 281.65 li
33.1115 281.65 li
35.1285 272.744 li
41.8458 272.744 li
41.8756 272.744 li
48.5929 272.744 li
50.61 281.65 li
51.3278 281.65 li
51.6608 281.65 li
52.3785 281.65 li
54.3956 272.744 li
61.1129 272.744 li
61.1427 272.744 li
67.86 272.744 li
69.8771 281.65 li
70.5856 281.65 li
70.9279 281.65 li
71.6364 281.65 li
73.6535 272.744 li
80.3707 272.744 li
80.4005 272.744 li
87.1178 272.744 li
89.1349 281.65 li
90.1857 281.65 li
103.555 277.814 li
103.622 277.074 li
104.79 276.271 li
104.79 273.511 li
103.889 273.445 li
cp
f
36.7008 255.307 mo
36.9669 255.307 li
36.9669 237.62 li
36.7008 237.62 li
36.7008 255.307 li
cp
.689662 .668086 .645533 .720363 cmyk
f
37.5524 259.057 mo
36.1149 259.057 li
36.1149 254.995 li
37.5524 254.995 li
37.5524 259.057 li
cp
f
37.3649 237.307 mo
37.3649 237.601 37.1271 237.838 36.8336 237.838 cv
36.5407 237.838 36.3024 237.601 36.3024 237.307 cv
36.3024 237.014 36.5407 236.776 36.8336 236.776 cv
37.1271 236.776 37.3649 237.014 37.3649 237.307 cv
cp
f
36.9669 262.245 mo
45.568 262.245 li
46.715 265.245 li
44.943 262.745 li
36.9669 262.245 li
cp
.579583 .585534 .548363 .296391 cmyk
f
49.1823 262.245 mo
57.7838 262.245 li
58.9303 265.245 li
57.1588 262.745 li
49.1823 262.245 li
cp
f
61.3981 262.245 mo
69.9996 262.245 li
71.1461 265.245 li
69.3746 262.745 li
61.3981 262.245 li
cp
f
97.9186 267.141 mo
92.1305 265.776 li
89.943 262.245 li
93.2868 265.557 li
97.3663 266.164 li
97.9186 267.141 li
cp
f
103.526 273.516 mo
95.1515 273.224 li
89.6515 272.099 li
103.526 273.516 li
cp
f
29.9845 273.182 mo
30.568 273.057 34.8366 271.016 34.8366 271.016 cv
41.8756 271.016 li
34.568 270.516 li
29.9845 273.182 li
cp
f
48.9816 271.266 mo
70.6515 271.266 li
68.568 270.766 li
48.9816 271.266 li
cp
f
75.4845 271.266 mo
88.568 271.266 li
86.1744 270.766 li
75.4845 271.266 li
cp
f
41.9088 276.948 mo
41.5431 276.948 41.1901 276.996 40.8473 277.073 cv
41.1417 277.014 41.4454 276.981 41.7575 276.981 cv
44.2951 276.981 46.3522 279.039 46.3522 281.577 cv
46.3522 284.114 44.2951 286.171 41.7575 286.171 cv
39.2194 286.171 37.1618 284.114 37.1618 281.577 cv
37.1618 280.637 37.4469 279.765 37.9308 279.037 cv
37.3873 279.82 37.0646 280.767 37.0646 281.792 cv
37.0646 284.468 39.2335 286.637 41.9088 286.637 cv
44.5846 286.637 46.7531 284.468 46.7531 281.792 cv
46.7531 279.117 44.5846 276.948 41.9088 276.948 cv
cp
f
61.1276 276.904 mo
60.7618 276.904 60.4088 276.952 60.0665 277.029 cv
60.3605 276.97 60.6647 276.937 60.9762 276.937 cv
63.5138 276.937 65.5714 278.995 65.5714 281.533 cv
65.5714 284.07 63.5138 286.128 60.9762 286.128 cv
58.4381 286.128 56.381 284.07 56.381 281.533 cv
56.381 280.593 56.6657 279.721 57.1495 278.993 cv
56.6061 279.776 56.2833 280.723 56.2833 281.748 cv
56.2833 284.424 58.4523 286.593 61.1276 286.593 cv
63.8034 286.593 65.9723 284.424 65.9723 281.748 cv
65.9723 279.073 63.8034 276.904 61.1276 276.904 cv
cp
f
80.3268 276.904 mo
79.9611 276.904 79.608 276.952 79.2658 277.029 cv
79.5597 276.97 79.8639 276.937 80.1754 276.937 cv
82.713 276.937 84.7706 278.995 84.7706 281.533 cv
84.7706 284.07 82.713 286.128 80.1754 286.128 cv
77.6373 286.128 75.5802 284.07 75.5802 281.533 cv
75.5802 280.593 75.8649 279.721 76.3488 278.993 cv
75.8053 279.776 75.4826 280.723 75.4826 281.748 cv
75.4826 284.424 77.6515 286.593 80.3268 286.593 cv
83.0026 286.593 85.1715 284.424 85.1715 281.748 cv
85.1715 279.073 83.0026 276.904 80.3268 276.904 cv
cp
f
.000129395 368.935 mo
33.3951 362.435 li
43.1451 367.435 li
43.1451 367.435 54.8951 361.185 64.1451 368.935 cv
73.3951 376.685 104.895 375.435 115.895 375.435 cv
126.895 375.435 142.145 372.185 150.395 367.185 cv
158.645 362.185 159.645 360.935 169.895 365.935 cv
180.145 370.935 190.395 376.435 206.395 373.935 cv
222.395 371.435 219.645 362.009 236.145 368.972 cv
252.645 375.935 257.395 379.685 271.895 376.685 cv
286.395 373.685 304.145 369.935 309.645 367.935 cv
315.145 365.935 315.645 363.935 322.645 364.185 cv
329.645 364.435 334.395 362.185 340.645 358.685 cv
346.895 355.185 350.77 355.685 356.895 352.435 cv
363.02 349.185 362.645 350.31 364.895 350.56 cv
367.145 350.81 370.895 351.185 374.895 348.685 cv
378.895 346.185 381.77 344.06 383.77 343.81 cv
385.77 343.56 388.27 338.81 393.27 341.81 cv
398.27 344.81 401.145 345.435 407.52 348.935 cv
413.895 352.435 415.645 348.685 419.77 351.435 cv
423.895 354.185 423.395 354.56 426.52 352.935 cv
429.645 351.31 433.895 349.81 440.02 353.685 cv
446.145 357.56 442.645 358.81 456.645 357.31 cv
470.645 355.81 469.895 355.987 474.145 359.273 cv
478.395 362.56 481.895 361.935 486.895 361.56 cv
491.895 361.185 492.729 362.602 503.062 366.102 cv
513.395 369.602 517.395 370.102 531.062 370.768 cv
544.729 371.435 553.895 371.602 554.729 373.102 cv
555.562 374.602 561.062 380.935 568.229 381.935 cv
575.395 382.935 594.395 381.935 594.395 381.935 cv
594.395 434.435 li
8.39515 434.435 li
.000129395 368.935 li
cp
.19144 .353674 .381689 .000122072 cmyk
f
44.8951 433.855 mo
180.594 438.793 li
453.395 443.187 li
594.395 443.187 li
594.395 622.793 li
218.395 638.793 li
25.3951 468.043 li
44.8951 433.855 li
cp
.234714 .54461 .767178 .0581979 cmyk
f
594.395 492.052 mo
594.395 492.052 536.421 494.385 518.755 500.052 cv
501.088 505.719 478.755 503.552 467.755 509.052 cv
456.755 514.552 418.958 506.406 395.189 525.062 cv
488.755 523.719 li
594.395 499.052 li
594.395 492.052 li
cp
.0535286 .181491 .407752 0 cmyk
f
93.797 453.847 mo
130.645 450.793 li
170.895 452.627 li
199.395 454.46 li
209.895 452.627 li
217.145 454.46 li
273.895 454.46 li
279.895 452.627 li
287.145 452.627 li
327.895 452.627 li
345.645 449.043 li
394.645 451.752 li
403.645 454.46 li
469.395 451.752 li
476.645 454.46 li
500.395 454.46 li
505.145 454.46 li
562.395 451.752 li
574.645 454.46 li
591.395 456.293 li
594.395 456.293 li
594.395 431.543 li
594.395 431.543 580.645 430.793 573.145 431.543 cv
565.645 432.293 543.395 426.543 534.895 426.543 cv
526.395 426.543 507.895 419.044 477.395 423.043 cv
446.895 427.043 430.145 423.043 419.645 426.293 cv
409.145 429.543 400.145 421.695 390.645 421.87 cv
381.145 422.044 369.895 418.294 361.895 419.294 cv
353.895 420.294 348.895 413.294 343.645 414.794 cv
338.395 416.294 323.395 408.044 302.145 413.044 cv
280.895 418.044 284.145 414.044 272.145 418.794 cv
260.145 423.543 244.69 426.043 230.543 429.793 cv
216.395 433.543 211.395 425.543 204.395 425.543 cv
197.395 425.543 185.645 425.543 172.395 429.793 cv
159.145 434.043 157.645 430.043 145.645 430.543 cv
133.645 431.043 131.895 427.793 119.645 426.543 cv
107.395 425.293 85.8356 418.737 79.3951 419.544 cv
45.3839 423.808 7.27601 438.997 7.27601 438.997 cv
79.5275 451.633 li
84.0416 453.492 88.9323 454.25 93.797 453.847 cv
cp
.236973 .378943 .579889 .0106203 cmyk
f
.000129395 279.307 mo
38.693 288.807 li
94.693 288.807 li
109.693 292.807 li
113.193 298.807 li
117.839 307.807 li
106.693 317.807 li
101.693 327.307 li
97.3663 356.307 li
105.943 367.557 li
103.443 377.307 li
98.693 428.307 li
97.3663 456.858 li
97.3663 456.858 109.943 468.807 109.943 469.557 cv
109.943 470.307 114.243 483.301 114.243 483.301 cv
64.693 493.557 li
27.193 440.557 li
.000129395 279.307 li
cp
.54403 .700679 .796811 .741817 cmyk
f
595.276 261.261 mo
595.276 658.412 li
97.3663 658.412 li
97.3663 658.412 105.456 639.382 107.295 622.972 cv
109.133 606.561 117.224 597.052 118.694 583.237 cv
120.166 569.42 128.698 573.053 129.397 562.962 cv
130.094 552.872 131.786 544.414 141.972 531.176 cv
152.158 517.938 151.605 495.138 158.868 494.403 cv
166.132 493.667 164.554 481.692 173.925 476.47 cv
183.297 471.248 199.596 462.391 203.273 463.503 cv
206.95 464.617 215.094 448.069 226.651 446.598 cv
238.208 445.126 243.356 437.987 250.711 432.179 cv
258.065 426.372 265.733 410.651 274.861 415.11 cv
283.99 419.569 293.919 422.879 293.919 422.879 cv
303.542 416.934 li
303.542 416.934 314.687 412.398 315.243 409.273 cv
315.799 406.147 312.857 400.815 323.154 401.183 cv
333.451 401.55 331.624 393.644 338.237 391.438 cv
344.85 389.231 359.007 389.231 362.502 382.245 cv
368.753 384.819 li
368.753 384.819 377.334 393.583 377.088 394.993 cv
376.842 396.402 377.394 408.098 377.394 408.098 cv
380.888 423.063 li
419.009 459.836 li
445.976 435.588 li
470.982 423.43 li
463.628 408.905 li
465.589 403.941 li
465.589 403.941 478.153 395.667 480.36 388.864 cv
482.566 382.06 485.876 379.604 493.414 375.776 cv
500.953 371.948 500.769 370.293 501.505 365.329 cv
502.24 360.364 503.159 345.288 509.411 344.184 cv
509.411 344.184 512.536 343.081 512.352 338.117 cv
512.169 333.152 510.146 326.717 516.582 320.098 cv
523.016 313.478 518.604 310.353 522.649 306.124 cv
526.694 301.895 521.932 284.152 531.943 287.232 cv
541.955 290.311 542.69 292.15 550.229 287.37 cv
557.767 282.589 571.741 274.683 571.741 274.683 cv
581.302 273.028 li
591.139 263.329 li
595.276 261.261 li
cp
.350011 .684688 .823667 .304601 cmyk
f
595.276 261.261 mo
595.276 261.261 584.612 267.88 584.612 280.015 cv
584.612 292.15 579.464 277.073 577.257 277.809 cv
575.05 278.544 572.109 285.531 573.58 291.782 cv
575.05 298.034 570.638 299.505 566.225 298.401 cv
561.812 297.298 563.651 300.608 563.283 303.55 cv
562.916 306.492 557.767 305.388 557.767 310.537 cv
557.767 315.685 550.045 314.214 550.045 318.995 cv
550.045 323.775 545.632 330.394 542.69 322.672 cv
539.749 314.95 545.264 311.272 540.116 309.066 cv
534.967 306.859 537.91 295.324 533.13 293.737 cv
528.348 292.15 527.613 284.795 533.13 287.737 cv
538.645 290.679 542.69 287.37 546.368 282.956 cv
550.045 278.544 554.826 282.589 559.606 280.015 cv
564.386 277.441 569.535 267.88 576.154 270.086 cv
582.773 272.292 587.186 260.893 595.276 261.261 cv
cp
.463478 .710079 .783902 .600763 cmyk
f
580.934 399.528 mo
580.934 399.528 581.67 409.456 576.154 413.134 cv
570.638 416.811 565.857 422.328 565.49 428.579 cv
565.122 434.831 552.062 438.14 562.269 439.243 cv
572.476 440.346 565.122 428.579 571.741 424.902 cv
578.36 421.224 586.818 417.914 583.877 408.721 cv
580.934 399.528 582.038 391.045 580.934 399.528 cv
cp
f
595.276 577.265 mo
595.276 577.265 572.476 594.426 568.309 609.871 cv
564.141 625.316 561.2 637.819 544.039 644.928 cv
526.878 652.038 527.123 653.018 527.123 658.412 cv
543.303 658.412 li
543.303 658.412 537.91 656.206 551.148 652.283 cv
564.386 648.36 568.799 649.096 566.838 643.212 cv
564.877 637.329 577.134 634.631 572.966 631.935 cv
568.799 629.238 564.386 621.638 571.496 614.039 cv
578.605 606.439 583.508 606.929 585.224 598.839 cv
586.941 590.748 595.276 588.542 595.276 577.265 cv
cp
f
502.24 485.761 mo
502.24 485.761 505.549 474.914 508.491 471.788 cv
511.433 468.662 512.536 471.236 513.456 473.075 cv
514.375 474.914 510.33 474.177 509.778 480.061 cv
509.226 485.945 503.846 490.91 507.916 495.323 cv
511.985 499.735 511.249 504.148 506.285 505.619 cv
501.32 507.089 500.953 504.148 502.24 500.287 cv
503.527 496.425 502.24 497.529 500.585 499.735 cv
498.93 501.942 498.562 504.331 496.908 501.39 cv
495.253 498.448 493.598 496.058 496.908 493.299 cv
500.217 490.541 498.01 491.093 502.24 485.761 cv
cp
f
471.717 508.193 mo
471.717 508.193 467.305 509.48 467.305 513.708 cv
467.305 517.938 464.731 515.732 464.179 518.49 cv
463.628 521.247 458.479 522.535 460.318 524.189 cv
462.157 525.844 464.887 526.948 465.821 523.27 cv
466.754 519.592 469.695 522.166 470.431 517.754 cv
471.167 513.341 476.866 518.49 477.418 512.054 cv
477.969 505.619 476.866 506.539 471.717 508.193 cv
cp
f
532.394 491.645 mo
532.394 491.645 521.914 499.919 518.052 509.112 cv
514.191 518.305 510.33 511.319 510.33 517.754 cv
510.33 524.189 501.872 523.638 502.607 529.706 cv
503.342 535.773 496.172 531.912 499.297 541.105 cv
502.423 550.298 495.253 544.783 493.414 553.056 cv
491.576 561.331 491.391 564.272 483.301 565.559 cv
475.212 566.846 479.624 571.688 475.947 577.265 cv
472.269 582.842 469.511 593.691 456.825 608.583 cv
444.138 623.477 448.183 629.177 448.183 634.509 cv
448.183 639.841 436.232 646.46 438.07 658.412 cv
460.686 658.412 li
460.686 658.412 462.074 647.196 468.735 641.864 cv
475.395 636.532 471.902 633.039 478.705 625.316 cv
485.507 617.593 474.476 614.1 481.831 606.561 cv
489.185 599.023 494.517 597.368 494.15 593.139 cv
493.782 588.911 499.114 583.762 497.091 579.165 cv
495.069 574.569 490.839 567.581 502.24 560.227 cv
513.639 552.872 502.423 545.885 506.285 541.84 cv
510.146 537.795 515.478 535.038 515.11 531.176 cv
514.743 527.315 518.42 527.867 522.649 521.799 cv
526.878 515.732 525.959 507.826 527.981 502.125 cv
530.004 496.425 537.358 489.99 532.394 491.645 cv
cp
f
484.343 388.864 mo
484.343 388.864 475.885 394.993 475.273 399.773 cv
474.66 404.554 473.189 402.225 473.801 407.986 cv
474.415 413.747 472.699 414.482 471.105 414.36 cv
469.511 414.237 468.531 402.837 465.589 403.941 cv
462.647 405.044 460.563 402.715 460.196 407.005 cv
459.828 411.295 457.008 412.398 453.332 414.973 cv
449.654 417.547 447.693 417.302 447.448 419.998 cv
447.203 422.695 441.931 420.856 438.867 420.856 cv
435.802 420.856 432.616 421.837 432.616 423.798 cv
432.616 425.759 428.693 424.412 428.448 427.476 cv
428.203 430.54 426.242 432.133 423.79 429.192 cv
421.339 426.249 420.725 423.92 418.519 425.147 cv
416.313 426.372 413.494 428.579 414.351 432.011 cv
415.21 435.443 411.287 436.669 412.145 439.366 cv
413.004 442.062 407.732 443.656 406.384 438.875 cv
405.036 434.095 397.681 429.682 395.719 429.192 cv
393.758 428.702 395.474 421.102 391.184 419.876 cv
386.894 418.65 385.669 410.928 383.83 409.947 cv
381.991 408.966 378.069 396.463 377.088 394.993 cv
377.088 394.993 373.901 395.851 373.411 401.244 cv
372.921 406.638 370.468 408.353 368.262 408.476 cv
366.056 408.599 358.089 407.373 357.965 418.16 cv
357.843 428.947 353.798 421.347 352.94 429.192 cv
352.083 437.037 346.689 434.095 346.321 439.366 cv
345.954 444.636 340.927 442.675 339.825 450.153 cv
338.721 457.629 332.961 454.933 333.451 459.101 cv
333.941 463.268 334.676 468.539 329.773 469.765 cv
324.87 470.991 324.503 472.584 325.36 475.281 cv
326.218 477.978 320.58 477.732 321.805 483.003 cv
323.031 488.274 322.173 490.848 328.915 490.358 cv
335.657 489.868 328.67 491.706 325.483 495.751 cv
322.296 499.796 320.825 501.635 321.07 504.577 cv
321.315 507.519 318.005 506.906 317.883 510.093 cv
317.76 513.28 324.012 511.564 320.335 517.325 cv
316.657 523.086 314.206 520.757 315.676 526.641 cv
317.148 532.525 324.748 539.756 322.786 535.344 cv
320.825 530.931 319.109 530.686 320.825 528.112 cv
322.541 525.538 325.85 526.396 326.095 523.086 cv
326.34 519.777 331.612 520.389 331.367 522.963 cv
331.122 525.538 330.508 527.376 335.167 527.498 cv
339.825 527.622 339.702 528.97 339.702 533.872 cv
339.702 538.776 339.212 544.905 344.115 543.434 cv
349.018 541.963 343.747 552.259 346.689 552.627 cv
349.63 552.995 346.566 550.42 349.263 547.234 cv
351.96 544.046 354.901 542.944 356.25 546.13 cv
357.598 549.318 357.475 559.614 359.927 560.595 cv
362.379 561.576 360.663 558.143 360.418 553.24 cv
360.172 548.337 357.475 545.395 364.217 547.847 cv
370.96 550.298 374.024 548.214 375.25 545.885 cv
376.475 543.556 377.334 542.331 381.379 542.944 cv
385.423 543.556 389.468 545.028 389.223 539.756 cv
388.978 534.486 395.597 536.202 395.597 531.912 cv
395.597 527.622 402.585 526.396 404.177 519.164 cv
405.771 511.931 408.222 510.46 414.719 508.131 cv
421.215 505.802 422.074 502.983 421.707 498.816 cv
421.339 494.648 422.932 486.803 426.364 484.229 cv
429.797 481.655 433.841 481.533 431.39 486.435 cv
428.938 491.338 426.609 495.138 430.042 495.261 cv
433.473 495.383 433.718 491.829 436.783 485.332 cv
439.847 478.835 445.854 475.894 444.629 472.584 cv
443.402 469.275 442.667 470.423 439.48 474.813 cv
436.293 479.204 431.88 481.164 431.635 477.855 cv
431.39 474.545 432.476 469.397 437.878 465.475 cv
443.28 461.552 443.77 458.61 443.77 454.32 cv
443.77 450.03 450.144 450.275 450.88 448.069 cv
451.615 445.862 454.557 452.727 457.008 446.72 cv
459.461 440.714 458.724 434.585 462.157 433.237 cv
465.589 431.888 468.776 430.786 468.653 427.476 cv
468.531 424.166 474.66 425.147 475.518 422.328 cv
476.376 419.508 475.518 416.076 477.846 414.237 cv
480.175 412.398 480.544 412.031 480.911 407.618 cv
481.279 403.205 484.957 404.063 484.343 398.302 cv
483.73 392.541 484.343 388.864 484.343 388.864 cv
cp
f
381.624 598.471 mo
381.624 598.471 374.636 602.516 373.901 609.687 cv
373.166 616.858 375.005 615.571 369.672 620.351 cv
364.339 625.132 361.398 627.89 363.053 629.913 cv
364.708 631.935 363.789 632.119 369.488 627.338 cv
375.188 622.558 377.211 621.086 380.52 617.593 cv
383.83 614.1 384.381 611.342 382.543 611.342 cv
380.704 611.342 375.372 613.732 379.785 607.113 cv
384.198 600.494 385.078 595.685 381.624 598.471 cv
cp
f
321.315 631.257 mo
321.315 631.257 306.606 636.348 311.938 639.658 cv
317.27 642.967 317.27 647.379 309.732 650.138 cv
302.193 652.896 300.354 653.998 308.629 654.183 cv
316.902 654.367 318.741 651.976 321.315 646.092 cv
323.889 640.208 326.539 629.064 321.315 631.257 cv
cp
.687465 .665187 .642481 .70486 cmyk
f
316.167 621.455 mo
316.167 621.455 307.71 627.155 306.606 629.177 cv
305.503 631.2 299.619 634.509 301.826 629.177 cv
304.032 623.845 310.835 620.167 316.167 621.455 cv
cp
f
319.109 571.259 mo
319.109 571.259 322.97 567.95 322.97 580.453 cv
322.97 592.956 325.912 596.817 327.751 590.748 cv
329.589 584.681 326.095 577.695 330.508 578.246 cv
334.922 578.797 338.598 576.958 337.863 584.314 cv
337.128 591.668 334.922 592.956 340.989 586.336 cv
347.056 579.717 341.172 579.453 347.608 574.896 cv
354.044 570.339 355.698 566.846 354.227 563.72 cv
352.756 560.595 351.286 562.066 347.976 566.111 cv
344.667 570.156 340.07 574.385 340.621 567.398 cv
341.172 560.411 343.195 555.814 339.335 556.182 cv
335.473 556.549 339.702 546.437 335.105 546.805 cv
330.508 547.172 325.545 547.172 328.302 551.585 cv
331.06 555.998 334.186 558.573 332.347 562.985 cv
330.508 567.398 334.922 569.104 330.141 570.181 cv
325.36 571.259 316.351 565.375 319.109 571.259 cv
cp
.463478 .710079 .783902 .600763 cmyk
f
259.352 571.626 mo
259.352 571.626 265.42 561.146 259.352 558.021 cv
253.285 554.895 250.159 555.63 249.423 564.824 cv
248.688 574.017 257.258 576.623 259.352 571.626 cv
cp
f
283.807 520.328 mo
283.807 520.328 280.129 518.857 279.578 527.131 cv
279.026 535.405 279.578 543.863 283.807 534.854 cv
288.035 525.844 292.264 524.557 288.035 524.557 cv
283.807 524.557 286.781 518.82 283.807 520.328 cv
cp
f
291.345 529.399 mo
291.345 529.399 288.771 535.974 288.587 538.723 cv
288.403 541.473 283.909 533.75 284.593 543.679 cv
285.277 553.608 282.887 559.123 286.565 552.689 cv
290.242 546.253 290.609 547.429 293.919 542.428 cv
297.229 537.427 295.023 523.209 291.345 529.399 cv
cp
f
297.413 539.634 mo
297.413 539.634 297.714 546.417 295.541 546.795 cv
293.368 547.172 292.632 548.643 292.264 553.976 cv
291.897 559.308 291.19 560.595 297.427 558.021 cv
303.664 555.447 309.18 551.402 307.341 548.643 cv
305.503 545.885 298.148 533.58 297.413 539.634 cv
cp
f
311.019 557.286 mo
311.019 557.286 301.826 553.608 304.032 562.618 cv
306.238 571.626 306.106 584.865 303.69 578.43 cv
301.274 571.995 303.243 566.713 299.868 570.181 cv
296.493 573.649 294.287 577.055 298.332 580.133 cv
302.377 583.21 298.086 588.848 301.335 593.568 cv
304.584 598.288 302.805 609.32 308.751 601.045 cv
314.696 592.771 317.087 594.978 316.167 588.359 cv
315.248 581.74 310.467 580.304 311.57 574.126 cv
312.673 567.95 314.55 558.025 311.019 557.286 cv
cp
f
214.857 541.662 mo
214.857 541.662 210.995 548.459 214.857 551.402 cv
218.718 554.343 204.744 568.285 205.48 560.762 cv
206.215 553.24 208.054 544.057 214.857 541.662 cv
cp
f
193.344 562.962 mo
193.344 562.962 199.779 565.375 188.932 577.878 cv
178.084 590.381 190.954 564.595 193.344 562.962 cv
cp
.687465 .665187 .642481 .70486 cmyk
f
197.389 582.107 mo
197.389 582.107 198.676 598.471 193.896 602.149 cv
189.115 605.826 193.158 624.948 189.942 625.316 cv
186.725 625.683 187.093 613.18 186.725 603.711 cv
186.358 594.243 188.564 594.426 188.564 589.83 cv
188.564 585.233 190.703 586.704 192.115 583.027 cv
193.528 579.349 198.309 578.246 197.389 582.107 cv
cp
f
165.397 658.412 mo
165.397 658.412 173.487 647.717 169.442 642.584 cv
165.397 637.451 159.88 629.729 160.616 644.07 cv
161.352 658.412 165.397 658.412 165.397 658.412 cv
cp
f
169.442 584.62 mo
169.442 584.62 174.59 595.407 167.726 599.33 cv
160.861 603.251 160.861 618.942 159.39 609.871 cv
157.92 600.8 159.635 595.896 163.558 593.568 cv
167.481 591.239 167.806 579.213 169.442 584.62 cv
cp
f
167.726 612.652 mo
167.726 612.652 171.648 622.619 167.726 623.845 cv
163.803 625.071 165.029 640.313 164.048 630.975 cv
163.068 621.638 162.577 619.187 164.048 618.942 cv
165.519 618.697 166.678 609.381 167.726 612.652 cv
cp
f
195.239 504.7 mo
195.239 504.7 199.708 514.015 195.239 519.164 cv
190.77 524.312 191.074 526.518 189.942 530.441 cv
188.809 534.363 185.627 533.76 184.644 541.662 cv
183.661 549.563 178.512 544.52 178.267 552.312 cv
178.022 560.105 173.639 574.814 171.295 571.136 cv
168.951 567.459 168.812 564.289 165.082 572.125 cv
161.352 579.962 159.327 584.717 158.868 574.126 cv
158.41 563.537 163.418 562.556 163.12 553.24 cv
162.822 543.924 166.064 532.402 169.469 525.538 cv
172.874 518.673 175.836 515.977 178.032 517.693 cv
180.229 519.409 172.468 533.382 177.329 535.834 cv
182.19 538.286 184.646 535.712 184.644 529.399 cv
184.641 523.086 188.318 524.557 188.564 518.428 cv
188.809 512.299 193.964 501.115 195.239 504.7 cv
cp
.463478 .710079 .783902 .600763 cmyk
f
189.942 470.868 mo
189.942 470.868 178.777 470.868 178.032 473.075 cv
177.287 475.281 173.639 475.036 171.295 479.939 cv
168.951 484.842 172.688 489.99 170.574 500.287 cv
168.461 510.583 178.267 489.745 182.925 489.745 cv
187.583 489.745 191.26 489.745 188.564 483.371 cv
185.867 476.997 189.942 470.868 189.942 470.868 cv
cp
f
347.179 409.825 mo
347.179 409.825 351.838 421.102 347.179 423.553 cv
342.521 426.004 339.335 436.791 338.353 429.927 cv
337.373 423.063 342.876 418.65 343.801 417.179 cv
344.727 415.708 345.405 403.705 347.179 409.825 cv
cp
f
371.94 390.212 mo
371.94 390.212 365.811 370.354 363.114 377.219 cv
360.418 384.083 356.25 384.819 357.475 390.212 cv
358.702 395.605 358.702 406.638 361.398 401.979 cv
364.094 397.322 370.714 395.851 371.94 390.212 cv
cp
f
303.542 416.934 mo
303.542 416.934 287.425 412.031 284.451 415.953 cv
281.478 419.876 274.123 413.402 270.936 414.433 cv
267.749 415.463 278.781 428.211 270.936 429.437 cv
263.091 430.663 262.723 431.153 262.049 439.979 cv
261.375 448.804 270.936 433.114 269.71 439.979 cv
268.484 446.843 262.846 460.572 267.504 455.914 cv
272.162 451.255 281.478 439.733 285.89 439.733 cv
290.303 439.733 304.032 424.779 303.542 416.934 cv
cp
f
242.743 438.997 mo
242.743 438.997 247.646 445.862 243.724 447.824 cv
239.801 449.785 240.782 441.695 242.743 438.997 cv
cp
f
234.653 463.513 mo
234.653 463.513 230.485 468.706 233.672 474.813 cv
236.859 480.919 234.408 481.945 229.505 474.813 cv
224.602 467.681 225.827 463.268 234.653 463.513 cv
cp
f
152.526 542.133 mo
152.526 542.133 156.693 552.014 150.319 557.653 cv
143.945 563.291 139.533 566.464 143.7 556.542 cv
147.868 546.621 149.829 535.929 152.526 542.133 cv
cp
.687465 .665187 .642481 .70486 cmyk
f
142.965 542.133 mo
142.965 542.133 134.875 554.801 135.61 560.762 cv
136.346 566.724 137.081 566.004 131.933 572.125 cv
126.785 578.246 126.295 583.556 129.972 580.289 cv
133.649 577.02 142.893 578.982 142.071 567.95 cv
141.249 556.917 134.875 561.29 141.004 551.626 cv
147.132 541.963 146.905 535.08 142.965 542.133 cv
cp
f
141.004 579.69 mo
141.004 579.69 135.61 578.736 135.365 586.827 cv
135.12 594.916 128.746 593.936 133.404 600.31 cv
138.062 606.684 129.236 608.645 128.991 614.774 cv
128.746 620.903 128.746 623.109 131.443 617.961 cv
134.139 612.813 141.249 604.835 139.288 600.244 cv
137.326 595.652 141.249 589.033 141.004 585.601 cv
140.758 582.168 143.3 579.361 141.004 579.69 cv
cp
f
127.579 600.244 mo
127.579 600.244 132.423 605.458 126.295 610.116 cv
120.166 614.774 118.449 620.183 119.185 625.324 cv
119.921 630.464 111.83 631.69 113.792 639.044 cv
115.753 646.399 106.437 649.973 108.398 654.193 cv
108.398 654.193 109.813 658.412 108.125 658.412 cv
102.269 658.412 li
102.269 658.412 104.966 651.547 108.398 645.664 cv
111.83 639.78 104.625 635.783 111.83 629.328 cv
119.036 622.873 115.998 616.984 118.204 611.956 cv
120.411 606.929 124.695 595.275 127.579 600.244 cv
cp
f
91.7286 480.9 mo
96.3951 476.223 li
130.645 489.807 li
139.895 504.079 li
147.895 514.557 li
158.395 527.258 li
173.895 550.557 li
153.395 566.807 li
153.395 566.807 58.3951 512.057 59.1451 511.307 cv
59.8951 510.557 91.7286 480.9 91.7286 480.9 cv
cp
.54403 .700679 .796811 .741817 cmyk
f
98.0031 480.9 mo
143.949 527.258 li
91.7286 527.258 li
98.0031 480.9 li
cp
.344244 .618585 .792904 .228031 cmyk
f
374.396 602.518 mo
416.729 588.89 li
422.395 607.557 li
379.895 617.057 li
374.396 602.518 li
cp
f
260.062 600.223 mo
313.159 601.642 li
313.159 617.057 li
265.645 620.307 li
265.645 620.307 245.645 617.307 245.895 615.307 cv
246.145 613.307 248.145 600.223 248.145 600.223 cv
260.062 600.223 li
cp
f
230.543 570.561 mo
206.145 560.057 li
181.645 539.557 li
181.645 539.557 165.645 517.307 161.895 515.057 cv
158.145 512.807 130.645 489.807 130.645 489.807 cv
137.895 508.307 li
142.395 510.557 li
145.895 523.057 li
187.145 562.807 li
230.543 570.561 li
cp
f
.000129395 235.653 mo
7.72864 249.557 li
7.72864 282.224 li
14.3951 289.557 li
14.3951 289.557 11.0621 314.89 14.3951 318.89 cv
17.7286 322.89 35.7286 364.89 36.3951 376.89 cv
37.0621 388.89 51.0621 448.89 51.0621 448.89 cv
96.3951 476.223 li
103.729 497.557 li
147.062 529.557 li
147.062 529.557 191.395 559.557 198.062 560.89 cv
204.729 562.223 232.395 570.223 233.729 572.223 cv
235.062 574.223 260.062 600.223 260.062 600.223 cv
254.395 608.557 li
254.395 608.557 291.395 608.557 300.062 607.223 cv
308.729 605.89 310.062 601.223 314.729 601.557 cv
319.395 601.89 377.729 602.557 377.729 602.557 cv
400.062 604.557 li
413.395 598.223 li
416.729 588.89 li
416.729 588.89 431.062 591.557 446.062 592.557 cv
461.062 593.557 463.395 594.557 485.729 602.557 cv
508.062 610.557 555.395 622.89 555.395 622.89 cv
595.276 622.89 li
595.276 841.89 li
.000129395 841.89 li
.000129395 235.653 li
cp
.54403 .700679 .796811 .741817 cmyk
f
194.895 573.057 mo
241.895 607.557 li
205.895 592.557 li
194.895 583.557 li
194.895 573.057 li
cp
.344244 .618585 .792904 .228031 cmyk
f
7.72864 282.224 mo
21.443 289.307 li
38.693 288.807 li
7.72864 282.224 li
cp
f
97.3663 356.307 mo
97.3663 364.307 li
105.943 367.557 li
97.3663 356.307 li
cp
f
94.693 288.807 mo
105.943 295.557 li
113.193 298.807 li
109.693 292.807 li
94.693 288.807 li
cp
f
91.7286 373.307 mo
79.193 382.307 li
82.193 448.126 li
87.693 386.432 li
91.7286 373.307 li
cp
f
59.1408 308.307 mo
74.193 314.807 li
74.193 328.307 li
64.193 315.807 li
53.193 308.307 li
59.1408 308.307 li
cp
f
332.193 654.193 mo
374.396 642.584 li
383.742 631.257 li
427.193 642.725 li
457.193 642.725 li
466.693 654.193 li
449.693 647.129 li
419.693 649.807 li
398.395 642.584 li
381.193 651.307 li
332.193 654.193 li
cp
f
135.431 567.625 mo
153.864 579.69 li
167.693 580.289 li
180.594 607.557 li
160.549 587.591 li
151.026 587.591 li
135.431 567.625 li
cp
f
122.193 385.307 mo
138.943 379.057 li
138.943 379.057 142.956 379.057 143.949 379.057 cv
144.943 379.057 150.693 375.776 150.693 375.776 cv
143.949 381.557 li
138.193 381.557 li
122.193 385.307 li
cp
.255955 .412329 .640284 .0239872 cmyk
f
159.318 387.057 mo
159.818 386.807 162.318 380.541 162.318 380.541 cv
166.068 379.807 li
167.693 377.432 li
167.693 373.307 li
171.193 376.682 li
171.193 379.182 li
171.193 379.182 173.818 383.682 174.443 384.057 cv
175.068 384.432 181.193 392.182 181.193 392.182 cv
172.443 385.307 li
169.568 380.541 li
169.068 378.182 li
166.943 382.182 li
162.818 383.682 li
158.693 392.182 li
159.318 387.057 li
cp
f
210.755 383.807 mo
216.005 378.307 li
220.943 377.995 li
224.193 372.557 li
221.693 381.557 li
217.068 380.932 li
217.068 380.932 210.693 385.495 210.318 385.995 cv
209.943 386.495 210.755 383.807 210.755 383.807 cv
cp
f
231.443 373.807 mo
232.318 378.37 li
233.193 378.37 li
234.88 383.057 li
234.443 376.495 li
232.63 376.057 li
231.443 373.807 li
cp
f
238.818 380.541 mo
239.943 386.057 li
244.193 386.932 li
253.068 391.307 li
253.068 393.557 li
257.068 396.432 li
254.193 392.182 li
254.193 389.932 li
243.136 384.557 li
238.818 380.541 li
cp
f
346.321 367.807 mo
353.943 363.557 li
358.818 363.557 li
361.443 360.932 li
365.818 358.932 li
373.818 356.682 li
366.568 360.557 li
362.068 364.557 li
360.07 364.057 li
357.255 366.182 li
353.318 366.182 li
353.318 366.182 343.419 370.932 343.743 370.932 cv
344.068 370.932 357.255 369.432 357.255 369.432 cv
361.818 370.932 li
373.818 367.182 li
379.568 361.307 li
373.943 369.432 li
366.318 371.807 li
356.443 371.807 li
350.068 374.557 li
339.193 372.682 li
330.943 375.776 li
336.568 370.057 li
346.321 367.807 li
cp
f
397.818 361.557 mo
395.818 368.807 li
394.443 370.307 li
394.443 372.807 li
392.318 373.682 li
391.443 367.62 li
390.818 379.057 li
387.818 379.807 li
384.943 382.182 li
394.193 379.307 li
404.443 380.932 li
406.568 385.557 li
411.943 384.557 li
413.068 386.682 li
413.068 382.307 li
408.193 382.307 li
406.693 378.182 li
404.693 372.307 li
405.318 379.182 li
396.193 377.182 li
397.568 374.682 li
396.318 371.182 li
397.693 370.432 li
397.818 361.557 li
cp
f
413.068 357.182 mo
417.318 359.182 li
419.443 361.557 li
423.443 359.932 li
428.818 359.37 li
431.193 357.182 li
429.943 361.557 li
424.443 361.557 li
417.943 365.182 li
415.943 361.182 li
413.068 357.182 li
cp
f
447.318 371.182 mo
452.693 365.182 li
458.443 366.229 li
461.068 363.682 li
464.443 363.682 li
470.693 362.432 li
463.943 365.182 li
460.568 365.182 li
458.193 368.682 li
452.693 367.932 li
447.318 371.182 li
cp
f
45.5534 267.953 mo
46.2692 267.953 li
46.4992 267.953 46.6823 267.769 46.6823 267.539 cv
46.6823 267.414 li
46.6823 267.185 46.4992 266.996 46.2692 266.996 cv
45.5534 266.996 li
45.5534 267.953 li
cp
47.027 268.689 mo
47.816 270.074 li
46.6823 270.074 li
45.9718 268.82 li
45.5534 268.82 li
45.5534 270.074 li
44.5192 270.074 li
44.5192 266.134 li
46.5201 266.134 li
47.1002 266.134 47.5704 266.604 47.5704 267.185 cv
47.5704 267.769 li
47.5704 268.166 47.3512 268.506 47.027 268.689 cv
cp
.365484 .781277 .662684 .328313 cmyk
f
50.7911 267.644 mo
50.7911 267.377 50.5719 267.158 50.3053 267.158 cv
49.9498 267.158 li
49.6784 267.158 49.4586 267.377 49.4586 267.644 cv
49.4586 268.533 li
49.4586 268.804 49.6784 269.024 49.9498 269.024 cv
50.3053 269.024 li
50.5719 269.024 50.7911 268.804 50.7911 268.533 cv
50.7911 267.644 li
cp
51.8048 267.362 mo
51.8048 268.831 li
51.8048 269.51 51.256 270.063 50.5768 270.063 cv
49.6784 270.063 li
48.9938 270.063 48.445 269.51 48.445 268.831 cv
48.445 267.362 li
48.445 266.683 48.9938 266.129 49.6784 266.129 cv
50.5768 266.129 li
51.256 266.129 51.8048 266.683 51.8048 267.362 cv
cp
f
54.5656 270.063 mo
53.4318 270.063 li
52.1202 266.129 li
53.254 266.129 li
53.9962 268.365 li
54.7433 266.129 li
55.8771 266.129 li
54.5656 270.063 li
cp
f
59.3385 266.123 mo
59.3385 267.158 li
57.5411 267.158 li
57.5411 267.634 li
58.9313 267.634 li
58.9313 268.485 li
57.5411 268.485 li
57.5411 269.029 li
59.3385 269.029 li
59.3385 270.069 li
56.5065 270.069 li
56.5065 266.123 li
59.3385 266.123 li
cp
f
61.0016 267.953 mo
61.7174 267.953 li
61.9474 267.953 62.1305 267.769 62.1305 267.539 cv
62.1305 267.414 li
62.1305 267.185 61.9474 266.996 61.7174 266.996 cv
61.0016 266.996 li
61.0016 267.953 li
cp
62.4752 268.689 mo
63.2643 270.074 li
62.1305 270.074 li
61.4196 268.82 li
61.0016 268.82 li
61.0016 270.074 li
59.9674 270.074 li
59.9674 266.134 li
61.9684 266.134 li
62.5485 266.134 63.0187 266.604 63.0187 267.185 cv
63.0187 267.769 li
63.0187 268.166 62.7994 268.506 62.4752 268.689 cv
cp
f
67.8864 266.139 mo
67.8864 267.174 li
66.9196 270.069 li
65.7911 270.069 li
66.7575 267.174 li
65.462 267.174 li
65.462 266.139 li
67.8864 266.139 li
cp
f
70.192 267.79 mo
71.2213 267.79 li
71.2213 270.069 li
70.192 270.069 li
70.192 269.274 li
68.5153 269.274 li
68.5153 268.433 li
69.7584 266.139 li
70.8561 266.139 li
69.7062 268.433 li
70.192 268.433 li
70.192 267.79 li
cp
f
73.5275 267.79 mo
74.5568 267.79 li
74.5568 270.069 li
73.5275 270.069 li
73.5275 269.274 li
71.8502 269.274 li
71.8502 268.433 li
73.0939 266.139 li
74.191 266.139 li
73.0416 268.433 li
73.5275 268.433 li
73.5275 267.79 li
cp
f
76.6437 267.278 mo
76.6437 267.158 76.5441 267.054 76.4186 267.054 cv
76.257 267.054 li
76.1315 267.054 76.0324 267.158 76.0324 267.278 cv
76.0324 267.691 li
76.0324 267.817 76.1315 267.916 76.257 267.916 cv
76.4186 267.916 li
76.5441 267.916 76.6437 267.817 76.6437 267.691 cv
76.6437 267.278 li
cp
77.4899 266.98 mo
77.4899 266.98 77.4899 267.696 77.4899 268.104 cv
77.4899 268.506 77.3019 268.82 77.3019 268.82 cv
76.6119 270.063 li
75.4835 270.063 li
76.1364 268.831 li
76.027 268.831 li
75.5617 268.831 75.1857 268.454 75.1857 267.984 cv
75.1857 266.98 li
75.1857 266.51 75.5617 266.134 76.027 266.134 cv
76.6437 266.134 li
76.7741 266.134 76.8995 266.165 77.0094 266.218 cv
77.2911 266.353 77.4899 266.641 77.4899 266.98 cv
cp
f
104.387 621.822 mo
104.387 621.822 111.19 609.958 110.356 593.292 cv
110.356 593.292 110.106 606.542 103.69 621.042 cv
104.387 621.822 li
cp
.709499 .416724 .798032 .319493 cmyk
f
104.387 621.822 mo
104.387 621.822 99.2687 619.894 98.7658 615.224 cv
98.2628 610.554 96.5577 608.33 94.1115 606.329 cv
94.1115 606.329 99.9684 605.676 102.488 610.628 cv
104.676 614.928 102.13 618.263 104.387 621.822 cv
cp
.530938 .149783 .636347 .00494392 cmyk
f
100.205 609.776 mo
100.205 609.776 101.949 611.73 101.08 615.224 cv
100.21 618.718 102.259 620.644 102.259 620.644 cv
102.259 620.644 103.563 621.562 104.387 621.822 cv
104.387 621.822 103.952 621.061 103.693 620.246 cv
103.693 620.246 101.765 619.579 102.006 616.744 cv
102.247 613.908 102.667 611.758 100.205 609.776 cv
cp
.640925 .289036 .746273 .100618 cmyk
f
262.943 668.546 mo
262.943 668.546 259.943 652.421 240.568 652.171 cv
240.568 652.171 245.494 654.463 249.573 662.463 cv
253.651 670.463 258.184 672.046 261.126 671.796 cv
264.068 671.546 262.943 668.546 262.943 668.546 cv
cp
f
261.621 671.642 mo
261.568 671.495 256.351 656.761 259.523 640.586 cv
260.504 640.778 li
257.387 656.673 262.51 671.158 262.562 671.302 cv
261.621 671.642 li
cp
.698695 .364385 .802548 .223636 cmyk
f
261.49 671.796 mo
261.49 671.796 270.122 668.546 270.97 660.671 cv
271.818 652.796 274.693 649.046 278.818 645.671 cv
278.818 645.671 268.942 644.573 264.693 652.921 cv
261.004 660.172 265.298 665.796 261.49 671.796 cv
cp
.530938 .149783 .636347 .00494392 cmyk
f
268.543 651.484 mo
268.543 651.484 265.601 654.78 267.068 660.671 cv
268.535 666.564 265.078 669.811 265.078 669.811 cv
265.078 669.811 262.881 671.359 261.49 671.796 cv
261.49 671.796 262.225 670.515 262.662 669.14 cv
262.662 669.14 265.912 668.015 265.506 663.234 cv
265.1 658.453 264.391 654.828 268.543 651.484 cv
cp
.640925 .289036 .746273 .100618 cmyk
f
261.862 628.838 mo
261.862 628.838 261.87 627.016 259.298 628.246 cv
256.726 629.474 254.798 632.62 255.695 637.327 cv
256.591 642.034 262.285 641.377 263.506 640.438 cv
264.728 639.498 261.862 628.838 261.862 628.838 cv
cp
.417761 .709529 .400214 .110811 cmyk
f
240.568 652.171 mo
240.568 652.171 254.245 654.359 260.531 666.359 cv
260.531 666.359 262.428 668.935 263.154 671.022 cv
263.154 671.022 260.219 673.999 254.55 669.273 cv
248.881 664.546 248.818 657.359 240.568 652.171 cv
cp
.709499 .416724 .798032 .319493 cmyk
f
260.068 641.084 mo
260.068 641.084 264.943 642.588 265.86 638.505 cv
266.776 634.421 267.243 629.963 266.135 629.588 cv
265.026 629.213 260.068 641.084 260.068 641.084 cv
cp
.309972 .892699 .380224 .0607309 cmyk
f
264.745 630.116 mo
264.745 630.116 266.397 628.069 264.15 628.215 cv
261.903 628.361 258.25 628.899 256.695 632.955 cv
255.141 637.01 256.795 641.052 260.068 641.084 cv
263.341 641.118 264.745 630.116 264.745 630.116 cv
cp
f
265.744 628.649 mo
265.744 628.649 258.316 629.317 258.156 635.854 cv
257.997 642.39 261.12 641.248 262.393 640.472 cv
263.666 639.696 264.345 637.84 264.37 635.163 cv
264.395 632.484 269.186 627.643 265.744 628.649 cv
cp
.417761 .709529 .400214 .110811 cmyk
f
456.589 642.26 mo
456.935 642.394 457.249 642.555 457.532 642.738 cv
459.929 640.031 467.044 631.119 470.01 617.671 cv
470.01 617.671 466.352 630.099 456.589 642.26 cv
cp
.709499 .416724 .798032 .319493 cmyk
f
456.308 643.403 mo
456.308 643.403 453.187 637.439 455.659 624.335 cv
455.659 624.335 454.37 635.019 457.343 642.343 cv
457.343 642.343 462.415 641.027 466.001 634.066 cv
466.001 634.066 463.538 642.262 456.308 643.403 cv
cp
.530938 .149783 .636347 .00494392 cmyk
f
30.693 463.503 mo
50.693 476.223 li
69.0265 479.785 li
75.6085 521.515 li
91.7286 546.795 li
66.693 520.076 li
58.9196 489.807 li
43.0265 477.64 li
30.693 463.503 li
cp
.344244 .618585 .792904 .228031 cmyk
f
40.7604 788.293 mo
40.4894 783.239 40.8507 760.581 40.8507 754.261 cv
40.8507 750.56 40.8507 746.859 40.941 743.248 cv
41.0314 738.645 41.3922 738.915 45.0934 738.915 cv
47.7111 738.915 58.6339 738.915 61.3419 738.826 cv
64.0504 738.645 64.6823 738.645 67.3903 738.554 cv
69.0153 738.554 69.3761 738.826 69.5568 740.269 cv
69.9181 742.887 69.5568 745.595 69.7369 748.213 cv
69.9181 749.929 69.3761 749.838 67.5709 750.018 cv
54.8429 750.109 li
53.4884 750.2 53.2179 750.47 53.0368 751.914 cv
52.6759 755.435 52.4054 759.317 52.6759 762.836 cv
52.7662 764.01 52.9469 764.191 54.2111 764.191 cv
58.0924 763.92 61.7936 764.461 65.6749 764.191 cv
66.5778 764.101 65.6749 764.01 66.6681 764.01 cv
68.2028 764.01 68.7443 764.552 68.9244 766.086 cv
69.0153 766.99 69.1954 767.892 69.1954 768.795 cv
69.2863 770.69 69.0153 770.781 69.0153 772.676 cv
69.0153 774.573 69.7369 775.836 67.8419 775.565 cv
54.6622 775.565 li
52.9469 775.565 52.6759 776.198 52.6759 778.092 cv
52.6759 781.614 52.6759 786.037 52.5861 789.467 cv
52.5861 793.709 52.6759 794.071 52.6759 797.049 cv
52.6759 799.125 52.5861 799.848 52.7662 801.563 cv
52.7662 804.903 52.7662 805.715 47.8917 805.896 cv
45.9962 805.896 44.1002 805.806 42.2951 805.354 cv
41.3019 805.174 41.1212 804.903 41.0314 803.911 cv
40.8507 801.022 40.7604 798.133 40.6701 795.245 cv
40.5797 792.897 40.6701 790.55 40.6701 788.293 cv
40.7604 788.293 li
cp
.530938 .149783 .636347 .00494392 cmyk
f
91.2243 783.509 mo
91.2243 787.842 91.4952 804.362 91.4044 804.994 cv
90.9533 806.166 90.0509 806.438 88.9674 806.528 cv
85.9884 806.619 83.1901 806.619 80.2111 806.799 cv
79.4889 806.799 79.2179 806.348 79.1281 805.896 cv
79.0377 804.632 78.9474 803.369 79.0377 802.105 cv
79.2179 798.495 78.8571 782.065 78.7667 778.454 cv
78.6764 774.843 78.9474 749.838 78.9474 740.992 cv
78.9474 739.276 79.6696 738.826 81.3849 738.915 cv
84.0026 738.915 85.1759 738.915 87.7941 739.005 cv
89.5993 739.096 90.9533 738.915 90.9533 742.345 cv
90.9533 745.504 91.1339 748.935 91.1339 752.094 cv
91.0436 762.295 90.9533 773.218 91.2243 783.509 cv
cp
f
111.626 764.823 mo
111.626 764.823 111.716 767.622 111.716 769.066 cv
111.807 771.232 114.335 770.781 115.688 770.42 cv
117.945 769.788 119.931 768.614 121.105 766.628 cv
123.542 762.385 123.903 754.803 119.389 751.734 cv
117.855 750.651 114.335 749.387 112.619 750.651 cv
111.355 751.643 111.807 754.352 111.716 755.706 cv
111.626 764.823 li
cp
111.626 800.029 mo
111.626 803.549 112.348 806.799 110.362 806.799 cv
107.745 806.799 106.21 806.889 103.682 806.889 cv
103.05 806.889 102.328 806.799 101.696 806.799 cv
100.613 806.799 100.433 806.528 100.433 805.354 cv
100.433 801.383 100.613 773.76 100.613 763.289 cv
100.523 756.428 100.342 749.477 100.523 742.527 cv
100.523 741.443 li
100.613 739.909 101.516 739.096 102.96 739.096 cv
106.029 739.096 107.745 739.096 110.182 739.186 cv
112.98 739.276 115.688 739.005 118.487 739.186 cv
123.09 739.456 126.972 741.534 129.951 745.053 cv
133.833 749.838 135.187 756.337 134.284 762.295 cv
133.472 768.343 129.59 772.315 125.257 776.198 cv
125.077 776.467 123.722 777.1 123.903 777.461 cv
124.084 778.274 129.5 788.745 130.312 790.55 cv
131.485 792.897 136.631 802.466 137.353 805.174 cv
137.624 806.166 137.353 806.889 136.18 806.889 cv
126.25 806.799 li
125.708 806.799 125.077 806.979 124.715 806.438 cv
124.445 806.166 123.451 803.278 123.001 802.286 cv
119.75 795.424 116.591 788.383 112.98 781.342 cv
112.89 781.072 112.71 780.891 112.348 780.891 cv
111.987 780.891 111.807 781.433 111.716 781.705 cv
111.626 782.877 111.626 797.682 111.626 800.029 cv
cp
f
161.278 738.645 mo
163.715 738.554 165.972 739.005 168.319 739.638 cv
170.305 740.269 172.291 740.721 171.839 743.158 cv
171.388 745.325 170.305 747.129 169.673 749.387 cv
169.402 750.38 169.222 751.372 167.958 751.282 cv
167.236 751.282 166.694 750.921 166.152 750.651 cv
165.25 750.109 164.437 749.658 163.444 749.387 cv
160.104 748.393 155.681 749.387 154.869 753.269 cv
154.056 756.879 155.049 760.851 157.757 763.378 cv
162.18 767.441 166.965 770.69 170.756 775.385 cv
174.277 779.717 176.624 784.592 176.263 790.37 cv
176.263 791.092 176.172 791.723 176.083 792.446 cv
175.721 794.432 175.089 796.328 174.187 798.133 cv
169.583 806.889 158.931 808.514 150.085 806.438 cv
148.099 805.987 142.772 805.174 142.863 802.375 cv
142.953 799.938 143.766 797.862 144.398 795.606 cv
144.578 795.064 144.758 794.432 145.119 793.89 cv
145.752 792.807 146.835 793.078 147.737 793.709 cv
149.272 794.793 150.897 796.147 152.702 796.779 cv
156.223 797.953 161.548 797.411 163.805 793.799 cv
165.701 790.55 164.708 784.592 162.09 781.975 cv
160.285 780.168 158.209 778.816 156.403 777.1 cv
154.418 775.385 152.612 773.489 150.806 771.593 cv
148.82 769.426 146.473 767.17 145.119 764.552 cv
143.856 762.115 143.585 759.317 143.766 756.608 cv
144.036 753.088 144.848 749.567 146.835 746.588 cv
149.091 743.339 152.432 740.811 156.133 739.547 cv
157.848 739.005 159.563 738.735 161.278 738.645 cv
cp
f
193.146 796.959 mo
192.964 788.834 193.417 758.595 193.417 752.094 cv
193.417 751.824 193.326 751.553 193.326 751.282 cv
193.146 750.289 192.513 750.018 191.611 750.018 cv
190.167 749.929 185.021 749.929 183.757 749.929 cv
181.591 749.929 181.681 747.401 181.681 744.873 cv
181.681 740.902 181.591 739.096 183.847 739.096 cv
186.827 739.096 189.263 739.186 192.243 739.186 cv
198.291 739.096 213.005 739.096 214.54 739.096 cv
216.706 739.096 215.984 742.527 215.984 744.512 cv
215.984 746.769 216.435 750.018 214.54 750.018 cv
206.595 750.018 li
204.79 750.018 204.339 750.47 204.339 751.824 cv
204.068 802.375 li
204.159 803.911 204.519 806.799 202.804 806.799 cv
194.68 806.799 li
193.417 806.799 193.326 806.619 193.326 805.354 cv
193.235 802.556 193.235 799.758 193.146 796.959 cv
cp
f
266.088 738.645 mo
268.524 738.554 270.781 739.005 273.129 739.638 cv
275.114 740.269 277.101 740.721 276.649 743.158 cv
276.197 745.325 275.114 747.129 274.483 749.387 cv
274.212 750.38 274.031 751.372 272.767 751.282 cv
272.045 751.282 271.504 750.921 270.962 750.651 cv
270.06 750.109 269.247 749.658 268.254 749.387 cv
264.914 748.393 260.49 749.387 259.678 753.269 cv
258.865 756.879 259.858 760.851 262.567 763.378 cv
266.99 767.441 271.775 770.69 275.566 775.385 cv
279.086 779.717 281.433 784.592 281.072 790.37 cv
281.072 791.092 280.982 791.723 280.891 792.446 cv
280.531 794.432 279.899 796.328 278.996 798.133 cv
274.392 806.889 263.74 808.514 254.894 806.438 cv
252.908 805.987 247.582 805.174 247.672 802.375 cv
247.762 799.938 248.574 797.862 249.207 795.606 cv
249.387 795.064 249.568 794.432 249.929 793.89 cv
250.561 792.807 251.644 793.078 252.547 793.709 cv
254.081 794.793 255.706 796.147 257.511 796.779 cv
261.032 797.953 266.359 797.411 268.615 793.799 cv
270.511 790.55 269.518 784.592 266.9 781.975 cv
265.094 780.168 263.018 778.816 261.213 777.1 cv
259.227 775.385 257.422 773.489 255.616 771.593 cv
253.63 769.426 251.283 767.17 249.929 764.552 cv
248.665 762.115 248.394 759.317 248.574 756.608 cv
248.845 753.088 249.658 749.567 251.644 746.588 cv
253.901 743.339 257.24 740.811 260.942 739.547 cv
262.657 739.005 264.372 738.735 266.088 738.645 cv
cp
f
300.572 769.517 mo
300.481 770.51 300.481 771.502 300.481 772.497 cv
300.481 773.127 301.114 773.85 301.745 773.85 cv
304.815 773.85 307.162 772.676 308.967 770.781 cv
311.495 767.983 311.946 762.747 311.585 759.226 cv
311.133 754.352 308.155 749.747 302.919 749.387 cv
302.016 749.296 300.842 749.296 300.572 750.289 cv
300.481 750.921 300.572 751.553 300.572 752.094 cv
300.481 755.706 300.572 767.532 300.572 769.517 cv
cp
290.191 750.921 mo
290.101 748.122 289.83 740.089 290.552 739.547 cv
291.184 739.096 292.087 739.186 292.809 739.186 cv
295.968 739.186 299.308 739.096 302.557 739.096 cv
321.335 739.096 322.96 754.442 322.96 762.747 cv
322.96 771.955 318.806 782.787 303.731 782.787 cv
303.009 782.787 300.481 782.516 300.481 783.78 cv
300.481 784.954 300.842 806.257 300.211 806.528 cv
299.669 806.799 298.587 806.799 297.954 806.799 cv
294.885 806.889 294.885 806.799 291.816 806.799 cv
290.461 806.799 290.281 806.528 290.281 805.174 cv
290.281 801.473 290.281 756.247 290.191 750.921 cv
cp
f
343.181 764.823 mo
343.181 764.823 343.272 767.622 343.272 769.066 cv
343.363 771.232 345.89 770.781 347.244 770.42 cv
349.501 769.788 351.487 768.614 352.66 766.628 cv
355.097 762.385 355.459 754.803 350.945 751.734 cv
349.41 750.651 345.89 749.387 344.174 750.651 cv
342.911 751.643 343.363 754.352 343.272 755.706 cv
343.181 764.823 li
cp
343.181 800.029 mo
343.181 803.549 343.904 806.799 341.918 806.799 cv
339.3 806.799 337.765 806.889 335.238 806.889 cv
334.606 806.889 333.884 806.799 333.252 806.799 cv
332.169 806.799 331.988 806.528 331.988 805.354 cv
331.988 801.383 332.169 773.76 332.169 763.289 cv
332.078 756.428 331.898 749.477 332.078 742.527 cv
332.078 741.443 li
332.169 739.909 333.072 739.096 334.515 739.096 cv
337.586 739.096 339.3 739.096 341.738 739.186 cv
344.536 739.276 347.244 739.005 350.043 739.186 cv
354.646 739.456 358.528 741.534 361.506 745.053 cv
365.388 749.838 366.742 756.337 365.839 762.295 cv
365.027 768.343 361.146 772.315 356.812 776.198 cv
356.632 776.467 355.278 777.1 355.459 777.461 cv
355.639 778.274 361.055 788.745 361.868 790.55 cv
363.042 792.897 368.187 802.466 368.909 805.174 cv
369.179 806.166 368.909 806.889 367.736 806.889 cv
357.805 806.799 li
357.264 806.799 356.632 806.979 356.271 806.438 cv
356 806.166 355.007 803.278 354.556 802.286 cv
351.306 795.424 348.146 788.383 344.536 781.342 cv
344.445 781.072 344.265 780.891 343.904 780.891 cv
343.543 780.891 343.363 781.433 343.272 781.705 cv
343.181 782.877 343.181 797.682 343.181 800.029 cv
cp
f
411.792 763.289 mo
410.709 758.324 408.542 753.449 404.389 750.47 cv
403.668 749.929 402.855 749.477 402.043 749.206 cv
400.869 748.664 399.605 748.484 398.431 748.484 cv
397.257 748.484 396.085 748.664 394.911 749.206 cv
394.008 749.477 393.287 749.929 392.564 750.47 cv
388.321 753.449 386.155 758.324 385.162 763.289 cv
384.079 768.795 383.717 774.391 384.621 779.898 cv
385.523 784.864 387.328 791.543 392.022 794.071 cv
394.008 795.154 396.175 795.876 398.431 795.966 cv
400.688 795.876 402.945 795.154 404.931 794.071 cv
409.625 791.543 411.43 784.864 412.334 779.898 cv
413.236 774.391 412.875 768.795 411.792 763.289 cv
cp
423.437 773.309 mo
423.437 778.274 422.534 783.057 421.27 787.842 cv
419.645 793.53 416.937 798.674 412.062 802.014 cv
408.452 804.632 404.66 806.348 400.237 806.799 cv
399.605 806.799 399.064 806.889 398.431 806.889 cv
397.89 806.889 397.348 806.799 396.716 806.799 cv
392.293 806.348 388.502 804.632 384.8 802.014 cv
380.016 798.674 377.218 793.53 375.684 787.842 cv
374.33 783.057 373.517 778.274 373.517 773.309 cv
373.517 767.35 373.968 761.302 375.864 755.706 cv
379.204 746.046 388.412 739.186 398.431 739.005 cv
408.452 739.186 417.66 746.046 421.089 755.706 cv
422.985 761.302 423.437 767.35 423.437 773.309 cv
cp
f
432.468 753.9 mo
432.468 750.018 432.558 746.046 432.558 742.164 cv
432.558 739.998 433.281 739.367 435.447 739.186 cv
437.704 739.096 439.961 739.367 442.217 739.186 cv
443.842 739.186 li
445.287 739.276 445.106 740.63 445.015 741.714 cv
444.925 743.79 444.925 745.866 444.925 747.942 cv
444.654 758.956 443.842 770.239 444.383 781.252 cv
444.654 786.307 444.383 794.883 451.605 795.064 cv
454.494 795.064 456.932 793.078 458.015 790.459 cv
460.813 783.329 459.82 775.024 459.91 767.532 cv
460.001 758.775 459.82 750.018 459.73 741.352 cv
459.73 740.269 460.543 739.367 461.535 739.367 cv
463.972 739.186 466.411 739.096 468.847 739.186 cv
470.834 739.276 471.464 740.36 471.464 742.345 cv
471.464 754.261 471.194 765.274 471.013 777.1 cv
470.923 785.315 472.097 795.334 466.139 801.744 cv
462.619 805.354 458.105 806.619 453.23 806.979 cv
446.099 807.431 438.697 804.542 435.357 798.042 cv
432.739 792.988 432.829 786.758 432.739 781.252 cv
432.558 772.226 432.468 763.018 432.468 753.9 cv
cp
f
491.96 796.959 mo
491.779 788.834 492.23 758.595 492.23 752.094 cv
492.23 751.824 492.14 751.553 492.14 751.282 cv
491.96 750.289 491.328 750.018 490.425 750.018 cv
488.981 749.929 483.836 749.929 482.572 749.929 cv
480.405 749.929 480.496 747.401 480.496 744.873 cv
480.496 740.902 480.405 739.096 482.662 739.096 cv
485.64 739.096 488.078 739.186 491.057 739.186 cv
497.105 739.096 511.82 739.096 513.354 739.096 cv
515.52 739.096 514.798 742.527 514.798 744.512 cv
514.798 746.769 515.25 750.018 513.354 750.018 cv
505.41 750.018 li
503.605 750.018 503.154 750.47 503.154 751.824 cv
502.882 802.375 li
502.972 803.911 503.334 806.799 501.619 806.799 cv
493.494 806.799 li
492.23 806.799 492.14 806.619 492.14 805.354 cv
492.05 802.556 492.05 799.758 491.96 796.959 cv
cp
f
539.625 738.645 mo
542.061 738.554 544.319 739.005 546.666 739.638 cv
548.651 740.269 550.637 740.721 550.185 743.158 cv
549.734 745.325 548.651 747.129 548.02 749.387 cv
547.749 750.38 547.568 751.372 546.304 751.282 cv
545.583 751.282 545.041 750.921 544.499 750.651 cv
543.596 750.109 542.784 749.658 541.791 749.387 cv
538.451 748.393 534.028 749.387 533.215 753.269 cv
532.403 756.879 533.395 760.851 536.104 763.378 cv
540.527 767.441 545.311 770.69 549.103 775.385 cv
552.623 779.717 554.97 784.592 554.61 790.37 cv
554.61 791.092 554.519 791.723 554.428 792.446 cv
554.068 794.432 553.435 796.328 552.534 798.133 cv
547.929 806.889 537.278 808.514 528.43 806.438 cv
526.445 805.987 521.119 805.174 521.21 802.375 cv
521.298 799.938 522.111 797.862 522.744 795.606 cv
522.924 795.064 523.105 794.432 523.465 793.89 cv
524.098 792.807 525.181 793.078 526.084 793.709 cv
527.618 794.793 529.243 796.147 531.048 796.779 cv
534.569 797.953 539.895 797.411 542.152 793.799 cv
544.047 790.55 543.055 784.592 540.437 781.975 cv
538.63 780.168 536.554 778.816 534.75 777.1 cv
532.764 775.385 530.959 773.489 529.153 771.593 cv
527.167 769.426 524.82 767.17 523.465 764.552 cv
522.202 762.115 521.931 759.317 522.111 756.608 cv
522.382 753.088 523.195 749.567 525.181 746.588 cv
527.438 743.339 530.777 740.811 534.478 739.547 cv
536.194 739.005 537.909 738.735 539.625 738.645 cv
cp
f
585.276 831.89 mo
9.99964 831.89 li
9.99964 9.99994 li
585.276 9.99994 li
585.276 831.89 li
cp
.000129395 -6.05469e-05 mo
.000129395 841.89 li
595.276 841.89 li
595.276 -6.05469e-05 li
.000129395 -6.05469e-05 li
cp
.54403 .700679 .796811 .741817 cmyk
f
85.3009 122.848 mo
85.3009 127.967 81.151 132.117 76.0324 132.117 cv
70.9132 132.117 66.7633 127.967 66.7633 122.848 cv
66.7633 117.728 70.9132 113.579 76.0324 113.579 cv
81.151 113.579 85.3009 117.728 85.3009 122.848 cv
cp
.232212 .215213 .312322 0 cmyk
f
78.0265 129.992 mo
72.9074 129.992 68.7575 125.842 68.7575 120.723 cv
68.7575 118.805 69.34 117.023 70.338 115.545 cv
68.1657 117.241 66.7633 119.878 66.7633 122.848 cv
66.7633 127.967 70.9132 132.117 76.0324 132.117 cv
79.2335 132.117 82.0553 130.494 83.7203 128.026 cv
82.1486 129.253 80.1754 129.992 78.0265 129.992 cv
cp
.333654 .308965 .407294 .00527962 cmyk
f
45.401 727.07 mo
45.401 709.213 li
40.63 709.213 li
40.63 704.876 li
52.7389 704.876 li
59.8234 724.648 li
66.8717 704.876 li
79.0172 704.876 li
79.0172 709.213 li
74.2457 709.213 li
74.2457 727.07 li
79.0172 727.07 li
79.0172 731.408 li
65.8961 731.408 li
65.8961 727.07 li
69.9083 727.07 li
69.9083 709.286 li
62.0285 731.408 li
57.6183 731.408 li
49.7384 709.286 li
49.7384 727.07 li
53.7511 727.07 li
53.7511 731.408 li
40.63 731.408 li
40.63 727.07 li
45.401 727.07 li
cp
.365484 .781277 .662684 .328313 cmyk
f
86.9713 727.07 mo
95.5382 727.07 li
95.5382 723.239 li
86.9713 725.118 li
86.9713 727.07 li
cp
103.165 731.408 mo
82.6339 731.408 li
82.6339 721.648 li
95.5382 718.792 li
95.5382 716.84 li
86.9713 716.84 li
86.9713 719.081 li
82.6339 719.081 li
82.6339 712.503 li
99.8756 712.503 li
99.8756 727.07 li
103.165 727.07 li
103.165 731.408 li
cp
f
123.047 719.696 mo
123.047 717.274 li
114.408 719.19 li
114.408 727.07 li
117.734 727.07 li
117.734 731.408 li
106.781 731.408 li
106.781 727.07 li
110.07 727.07 li
110.07 716.84 li
106.781 716.84 li
106.781 712.503 li
114.408 712.503 li
114.408 714.744 li
127.384 711.852 li
127.384 719.696 li
123.047 719.696 li
cp
f
134.326 716.84 mo
131.001 716.84 li
131.001 712.503 li
134.326 712.503 li
134.326 707.334 li
138.664 706.358 li
138.664 712.503 li
141.953 712.503 li
141.953 716.84 li
138.664 716.84 li
138.664 727.07 li
141.953 727.07 li
141.953 731.408 li
134.326 731.408 li
134.326 716.84 li
cp
f
148.858 706.358 mo
153.195 706.358 li
153.195 710.696 li
148.858 710.696 li
148.858 706.358 li
cp
156.521 731.408 mo
145.568 731.408 li
145.568 727.07 li
148.858 727.07 li
148.858 716.84 li
145.568 716.84 li
145.568 712.503 li
153.195 712.503 li
153.195 727.07 li
156.521 727.07 li
156.521 731.408 li
cp
f
164.474 727.07 mo
173.04 727.07 li
173.04 723.239 li
164.474 725.118 li
164.474 727.07 li
cp
180.667 731.408 mo
160.136 731.408 li
160.136 721.648 li
173.04 718.792 li
173.04 716.84 li
164.474 716.84 li
164.474 719.081 li
160.136 719.081 li
160.136 712.503 li
177.378 712.503 li
177.378 727.07 li
180.667 727.07 li
180.667 731.408 li
cp
f
195.235 731.408 mo
184.283 731.408 li
184.283 727.07 li
187.609 727.07 li
187.609 716.84 li
184.283 716.84 li
184.283 712.503 li
191.946 712.503 li
191.946 714.816 li
204.85 711.96 li
204.85 727.07 li
208.176 727.07 li
208.176 731.408 li
197.224 731.408 li
197.224 727.07 li
200.513 727.07 li
200.513 717.382 li
191.946 719.262 li
191.946 727.07 li
195.235 727.07 li
195.235 731.408 li
cp
f
249.963 731.408 mo
226.287 731.408 li
226.287 704.876 li
249.384 704.876 li
249.384 713.768 li
245.047 713.768 li
245.047 709.213 li
230.624 709.213 li
230.624 727.07 li
245.625 727.07 li
245.625 722.226 li
249.963 722.226 li
249.963 731.408 li
cp
f
266.483 716.84 mo
257.916 716.84 li
257.916 727.07 li
266.483 727.07 li
266.483 716.84 li
cp
270.82 731.408 mo
253.579 731.408 li
253.579 712.503 li
270.82 712.503 li
270.82 731.408 li
cp
f
277.726 727.07 mo
277.726 709.213 li
274.436 709.213 li
274.436 704.876 li
282.063 704.876 li
282.063 727.07 li
285.389 727.07 li
285.389 731.408 li
274.436 731.408 li
274.436 727.07 li
277.726 727.07 li
cp
f
301.909 716.84 mo
293.342 716.84 li
293.342 727.07 li
301.909 727.07 li
301.909 716.84 li
cp
306.246 731.408 mo
289.005 731.408 li
289.005 712.503 li
306.246 712.503 li
306.246 731.408 li
cp
f
320.814 731.408 mo
309.862 731.408 li
309.862 727.07 li
313.187 727.07 li
313.187 716.84 li
309.862 716.84 li
309.862 712.503 li
317.525 712.503 li
317.525 714.816 li
330.429 711.96 li
330.429 727.07 li
333.755 727.07 li
333.755 731.408 li
322.802 731.408 li
322.802 727.07 li
326.091 727.07 li
326.091 717.382 li
317.525 719.262 li
317.525 727.07 li
320.814 727.07 li
320.814 731.408 li
cp
f
354.685 716.84 mo
347.42 734.697 li
350.094 734.697 li
350.094 739.034 li
339.142 739.034 li
339.142 734.697 li
342.72 734.697 li
344.094 731.408 li
342.937 731.408 li
336.973 716.84 li
333.756 716.84 li
333.756 712.503 li
344.347 712.503 li
344.347 716.84 li
341.672 716.84 li
345.829 727.106 li
349.986 716.84 li
347.275 716.84 li
347.275 712.503 li
357.866 712.503 li
357.866 716.84 li
354.685 716.84 li
cp
f
361.482 722.985 mo
365.82 722.985 li
365.82 731.408 li
361.482 731.408 li
361.482 722.985 li
cp
365.82 720.925 mo
361.482 720.925 li
361.482 712.503 li
365.82 712.503 li
365.82 720.925 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 22.0.0
%%For: (User) ()
%%Title: (Martian Colony. First Sprouts.eps)
%%CreationDate: 2/8/2018 11:31 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb"-6CTf&)E@(He!<9t4@R-A"SZ.!:B'N\2E#sEiSnj;hae&%<(_H(H>OF6!9f/@5ec#/"eliYg<Ms%ZWJ:objHdln@oq531F(qb
%@ca6[ao/hihgY+XmB?!9rP(S/8\*XS[&82%s/0*dqpD&6aa\a1bLbW65O,[n*Cl.E2G1P`J+ueG%3OK@qY$uADa40ZrOZ.7^\R$N
%h3[TeJ+L"9LYoalHh6iq^U@KUhYaS/?[hh=T5O)3I/3%LXNfRn[EkK%I/3X'h>=B^I^n'L2[[akD#@Al==ZH6rhd>Xrb#T+kZ=rP
%I'@t(F5uaSH2.48qL?fB2">FdZfbkKm!Ya6q8[)&qdXNC[XRi.^\R!W?bcF!_u#cBhRn44^OLhkh>Q$0/-"o-f.ZfL?-?Q)I=>us
%hE8OO]9hE(q*DK3Eu\b@Ie_"o:@TEEro.]a^1")@An,>_'E@9#)G:X6T-jL)3:,\?n9;Sq2c\K*`@i9PNN<6UmA;f=3I?DNd01Zg
%0lI[Xpb-!(p%=Y)5J1S5f:6^`3]PH*RqDIe&<3clc6FNK8F4HR`1B]!htH;ON`#?C+5aa1Vk;fCf@M[jGl?J\s6fi@?bQ:8XHVCT
%\%1rdUY;!2s8'oW^O6"ZYMR"h?uIi"2Ut#VJ+pqJ0C:ZXZTN[3Oos_9nG%2InWtods8)Bn)qaVnr"e,[Z^\4:rnDr&p8^E-q4#tQ
%X3!$c(LOq+qj6dN#OhDbA)D3&)Al2Zh5"*;btL"kYRc*?\0-.P:Q';P$ut]qDYo+shnOF9k1=P.rlc;Z[*@P3qbQ+aq;N7Cp)8_c
%`A?D3e,O(Yhs]*er54<ADr]tYrqta<V\uerrqoj-nr'ta4M:Ou4n/uqhV6t<CU<0HGJEiYO"^FU:@[`'r[8J.rnlU9K/[^gim3)G
%ht>b!r"i^hCHqg_qfgqHrF^'KmbMM?qXNAXn,E%Rc(Darqt`cHhXK-hh#*PFQg[0:e%>AS?sis#Mq9VCfminic.>2U(Jah-IsCqN
%e_`SUX\4/9'E@(RLVGdMo_RqkhcP6Io[PV7]Doq'P's5a>,QlKqUGgdo_a1<`</k"I@!Si]_q?D2nshAo'=&?oBPK;rO:\^rQS]`
%HhZX5dO0KN%s@l25G@1_lAFJHosaD(I.PTalS<+p0<?td]__3lYC?)fLY#m]Qh1.dHeru89c&1so+uoRJ*[R>&_d6H0AjNlARj$"
%Y@G:VQ[X2Xrp=(*<Sr9'>5Wp6Do@lsg3g*UnZR;Ie`p(7Z60*0?,cHfqq&k[pbi'JSHe((^=c<<j7T<m#oA*+iVp$$Po(c"^3F,i
%rO;!MJ+f7:rR4EgKn'*aDnhL!14.#?jJ`A5II["Q?[qn>lVj_F\F9%m?bUpbo)5n!rc@A7QaV&WVo4.i5Q(1=IngEL^O,S'm"Lp9
%IJ`0ElU.M^qs%saW&MKfqj1[)VS\07Is%9eI;\B)H/8>]:]L5*D;O'_4Wj3lmpCP6`g4i@h>I'IbAXZbr5R$0r,%@5^:F:'ZQK.j
%B0Y*fgRc!E8fRb)H/FDWS]f5ka'YT[D*WJ1o;p&MRX4QQTARCJT7@;5S+A9j^599WdF9f(biID7S,b);kJ(g0qepqmC]AibeogF'
%O,f*arED>@:Z$Tr`QdGPhg@["*+/&#27h`Grp3.#ZVU-&r[IQ_\_<t7B@!eZnJV%grjc7*Hi#qXkKuIHn?Fc5jeoE's5Vu_nc,TL
%of<%NrSRH.rnmbSfoPq&Y0U`FqCfGK(H`ebK&:kljfU_uk='ZraZcQP]%:7YSb9/Bf8'3s5..L=4'?F&m;84"IFfP,o@TWuqpD#%
%@EZCRI@pDmI_S,80D;;]c<;m7p==R4IJ1:%h]M`RZ&N:tUl75*dDm5Nj*j+L(ZT4Ip57#"qjqZu3To52T9$YR`*;-5mm$'GI'PqZ
%7f9`#5*_b[cb;U:1n3=s2YjnicTOK'p3F$k$[qB#:YQO9@fO@sJ'mUmDt/OpA+k')`u7'(g#n';oZr/<md5(.T4sq6O1hqkH`)qu
%[N@"`TDduYfEYn6fnVNUn78.-p;'>mcb4bplne$=Dtp$tZeG_5BDq\BI`El7lphT.55$]):\RY)h`M7\-d#fKXZbIshr!89qf1N^
%p\T,@mu*1dFMHWph7^&II^m#)]=XPVj0%;,GO;Qi'cZQ)DOXGNhMsbKK6?IL_`E%ODQ_RLfc90l4P:9j[+i7&!AVX!Ts<>`WA[SY
%%@F7^ob[<G*c)DDfjG^VW:k*r`<KGL=dJomlb9hqe_)172`:PTkF_YEGrU3nrU]$DcVo/\nZp,lg!*IMRuR6VVtOZ7qp=bJ:(3U2
%eRhBj>CEgV^:3noCbD,#B5/TT-gUefEaP]g\XbP.ju-iNmlnVgfmiWXbf_#2R6:Ls0qW:O-L6k)IFG9Y](OU\5.e;<HaGtaZ=0<+
%=0)#^DS806\*pEM+0>3DgcsI/8N%cMNJnXVj4Oj`^ZG(AAn1\U?(\^tGC4Y[o<MsajtPu$SP_1FF4[94DZY6t,h$eU<gY`'g$Ug;
%miMCJa3d';X^QTY+5bbkpC$k+FQ;Q#Z&R.JA(sNI4\)oZ@2mb97WbpJrFhsOE[4^*_`!*`RbsSA*IkF>J_0eTNmcrPl(8dkTtYiI
%Y'IVAa6*?LjN!k`ae%b=T&Rj=`KO#I-QDVP=Oo0_9JaDe.;Gcs5L=]e05O%iYVCoWpL:e>)?.L=NYcJ=g!hWZ6a2G)HVJkU>YVSs
%?q#WAHUPdN`0Ec,MbQ9??\Z8f=CZ/!nTAG"Kn-S.=sr^7MMA;m&(ZFff!,/:s7u'"q%HEGBt8Ng\PA`:)?)JDE_9QXLb,F:,(+-T
%DYr(,;uCXQDmnY<KHFdsb\;Zk:Nk4UE>"[V.CV3SOM,-CY7WF^DS[cJDKSFtZ/=7t)Q2p$:<dqCD73VeG@j^JUcX@[kiWWGC$lp6
%5?iF1hK5@?nD'qRpq9JB4(=:qbj=`+Xlr`lD0+nYk%uo>F1,>g:S[AmYl<2-[kGLBrPd$b?"Cr59\3'sc[H"Op^>e+p]oNVLA%t"
%*>cd5>l55ZgIef\]/^64p>J).Q&d<<q;8V9`6,d8?BT'5F/?+iH7H:k2VLe7[#l\PURbF_Te3Y!#'sOsl`?8FPRb*C-mi"ir4G!<
%Vh`X9Qe@aP7T:IX=@^XD"Q*\Pi/;k%(rtl>:=JrSl(c"]!mD6]&'r8pki_!PfD2R$Ic""'5<6gM7q4)r?)qtH`PX9Af[)9b1M[D.
%'P\%O++l8mT%r-O80.LcSF/qaJV'qekm2uA1X49m0JaSac/rn<F2pafc(d?YVO1/^bqRc3hG!;QB(jEQWH<!34#[\n]n(g"h8S&C
%:6$ns[WKK?P^Pi4^*$iU\r-^ub7PPd7/p'k;CkCCP^HW.mEB_$/\"3\UX5$R,mRXlVd0@^:,^oKmCIYuFq8K4@(gu?Q"QWu(P\7F
%8+S^AVm)feeRs*_BC^>bf86)7QbL)@l17083r8<U*ha?P4d`km.pZ3Kin_!aD)UO;q@YsUI0ktdqm*i/HLJ$%MtY(QNF$Je=#9$e
%Zg(c`?$BYZ]o2kq4\VX2CiU4K3NS:dbSW0!d*(_;USl$%3;P[^)uUd?N]r4QU-:NBM7q2`ruLtdB%U84?Y5`!e`5*PkFOa,]g<Is
%Sr24pM4U^Q3YgtYk<3A`fZ`^+IepRP*`"qa)7`R>rQBU(]li`ro[`sg9gnG'lRU6&riF.HS9f"H#8o<srME`O0>7(`Aua2-he@N:
%%fcI-T(,bAloA7tesO(.3]lB^1C`kZ5>X;K?GKZq:67r\-p*#[dcU78b6uq`(fM8Kd,IhBRbFaQ)3hG3;f'r++GFda'15V&6qnU.
%#XKX3e<0`!kfN[f@Ai5X]V(I0:Y04*IV?),?nZ?'')j0bjmfQP55Wa*XV=6<mMMGXN6-J1=GqI$h]^_5Z'N#j&oFoJn=APjk@fdu
%]gnQEn5lNe^!;^1<D[58HXpOFOeIn!#"Q8t;"FZYndrp<ocV*sdsA?IW2(P<;E'>'*Z6ZB6cd2l^Y;jUE3oJh=$Q?-%t4+@lDoiT
%ZVM5JhdkHNdQPma%)@j:UU3Lpb52,c]Un$N"R]rqi%E@SS59+YqmnWOP:fT,$*Wj3>ai]__6n_S]@Q,mI)<F[=mW<98*8CkBj.=i
%p4Jq+igTbZZiBq#4Yt_00rsEMrrFJCj4VD\M>k2dq'CK8NEdNEbI\LuHlaW5^F`-ppuTsRL<2[]j-Y^77P&U#n]Xd_&UpX?D%e1a
%_42C3g6ReLgHC8o`8TM#VkXd[]BScGQhF5#V>^3p66t>u7\p3TD748:`ZPr6fjl#Mjq_Q2j_.:A9%C[9hHRWX(<fsur'\/fm4-j*
%+1^.4f(jF,n(68<<Rh<ADV]+uUilXL%>@:k(f*%hCu3%VJU7GW!\Uqk^.0,(/&1drf(u-"2^H^"_nga:6q=_(Dl%c1[\blFnV8=,
%[j0Q=F:#2NhC&1PRf>.35Q13B4(?5X8*kIAcoPG%Q-M%t,nP,-`S@(P0bK@Q5fV$.(D2sAqJD3fC4Ancr0(2iA7o)!0a(_!mgHJ<
%a=T2l9aF(fbi3-k8,@mFCV@'GLWf>*S3@t`X6'WK^t,#G>C5f*Z)4Wmh,^@a-Npk$fedrZFmIEp[sNK"adLmCG<_Zh2N-q7h<0pH
%h0:\;-(e77I\bWaBmN4:NKGtl[dAIOc'*%a'5pM._K=OsL@Rafj!TJgqm?*MN(:.bXXceS%q1dTVtK1rDB]P'gUl1)k@eQD5<=dd
%$Vn!+c[I?Yq`Pnt^12S?EidUE3I(EA6atr/FS-Z,N5*85^I(!I^O/h0ju`Glhod,<[m019rDC&76a%j?h-eOg2/WJ)RBNm'q2%="
%Pn!Qf:@taL+8jI"J+MXlIo6jbk0)l`%r%&RGA.Qa&9rEFA^_Y!8skN#45hf_OI&8c975==IF!E0N5ScQ5H`=jom&S#W4oT-qB;F#
%DjF//=E)khFrk:Kp.1.N_j^1XfcL`sp`*>kit#jnIm7WdfTBrsHtn=6[mg&al-DP:9/\,WEH<0_GK6ZX+[,Jd,s=Xanq25ARuN,:
%4[,tQ+)Q^'[ZWHdY1&[@>6u@ZLMRIOrm5Lah:XRRnF1+_q=^3"8HX(D4mo2_VQ#5q1UJ4Ji-GG/&agSXqB*T9s*hiH2?MA%p6isB
%YF2'RMr4He]]L<U`"-A;LGA>:R.t=7`5Q$^Qg"h;-%Ects5$KM-nb>iXK*QZJ4e*e]kCaMIs^dJYMm1d^GiQqL90&KceH,UUt1tt
%crP(*R^Y2BMJi)^s7tu1_LK>NQf'q"legq'J$ZoiO%KAnc?AgNS%ndVgW^P,Z.1LI5[5d6I.J)K+'n?tcS+:#@t/qka/>cc;kTlS
%oDa44rkmcc=5Y-Eq>N<35NB:mrq$*#G@,r*_I(LL.dHs0roL21Ya7ksL!P7j@d*iF(B53M[@[:\I&jS9lEU@UhmQa10n<roD@sKk
%5i9RlXh1V(g)(^FVCK[ef.YgY[+ij&e4m-UdjCEr'1gAR\EW]oRoVHZfX/j6@.I11-`%rPRoaE-a))a.6(1:K&]Wt2+1F,PB``WK
%/Pfcsbnmp9@'`#Pg77If,Mh(3[BnK`[\V0n1[XOUZ-2gpT%e]Mb3`6MnB76L?@/Pk,5c5.LANkp:3IHXUZ-VLq`Hgl.':R8oBZIe
%S"Q$!_'j_(;"F-u/TmVt<]dDUgQXtTYhq@Nlb-C:fXmO(?LmSuC]!L8,saNd#+@\k*B1=^Ai#_Fh/o7uWI/L(/"Z,ZY'X'a;Pte"
%]jd.^W_5rX'-Bpfc>6Cm*XMV.ZAr_.9@@p";nC@/hccp(<#Wu8K6BH!*7e+OqpKR6I^N6^^!0mNSQOL3`j'`lUPCoA93\Yo1^L1`
%9>Op%\)#hsBXulZ16%U.@EK&$:-2OGh3t5.2ALR/(`<-@4!cI]&&4"lU;qeO*O[>F8LB"li=_Y*Tq()O?\jKUF/t!"2O6V(FLr^n
%b,\^<8WmpsHddAsbtk5sAaaQM7=O]M;O]:d)/,CL2!fC>/aMQaAcosUd;@'RjX[S>B2CAZ!*d#T29"da).E9:*\LsTWCO;Pd6!iB
%=PW;Zqo0`4:j;6"&<A;\cXl9j9j]n<LJJs`p3!\gmUbtl)\97i^$>5!DZpcCqinHC;`#K'H,FGba6O*+P^P&%)gsO0ObSiLbXWWM
%q_6"]YZfVJ0sWk'eZ?4`QkU2BN;1%/*0%49'<^bPX,q@fRrk.5o<@"e!)7g.:j*O\%%=tJN-oAAlt;N*HN?6UZ&(E5P6Sd?2YcsY
%`q)pRFN%4F8^3:#pGo?[Vqmp"XY'Ns3dZlq-fbfcL"X&)D[BKt$8^`%[U>P,:R8PZ+RN&1qtYY<MQ.ASEelubiNsr9aanWD7%"ui
%_4F9+CO0]Vg:P/pDPuTA0_-[.CW>J%d`ACkYO9oiALi"n_c3boA[T6>\(Y&p'kH72Taq"Z9GM%'QqB3aVm-ttZIA/M6@c?fqkN0t
%VmmY@p(eh5S:dK-LMVCCH`@cF:#c&ahMDP;*g>%3br-gkNb61NQecPLpf6qef9$Q6@h48GhGF8a$V^!8h:@G=/6iIZ_u9+gY1L9T
%W"!]E;5V2k<icaKa]>FtqV6/nVtR\C-_Et)0bbX_"jI0T7sRTa&Hq9/"G<(\j23]*auH>Y:'#*LH/?+R/t8.V'otHab,D135`BW.
%g9"ghg:^L6[f`b!67^_obdd7^D[_PVN<_"dB)(^5.`m.t<R&*8.5ON^>dcujL#Y7u%`&@?CjMY,P6p/+*88,N)rm$?RC"Hre^+_g
%6*#YJ>8'\0i%1GB<R^q_G-@IMD_`&DI$l!Rq/@5:*I?+6C2"CS1O,u*<b,MG"(l3?[LNa_QcnT1>6):73FAi!%j"q#Y]AEKQtt_U
%OfGK@8uJd]GlO/9DAS\IW,Kj;GuQ[`L>CLU-r$pS7E#j8A':C0_oDnE)?j6+E:sKb.0pPuWgPO6erIpjdhIqH2J*:2Spm&FKLsNL
%h=ebtp)(DEHiA!X@PphQMJb:!akCN4TF?l>*i?$,Jiab1=3D;r6ZhOC_5"N[Fk7EO=cdInG;;l7Q]7)@*oFh/EuWT(2PharX_ROT
%Qn%eEs5iul:Ma$D53raRAront:p;6Z6ars9i"Si4fA=f;hS<;OI'qb7`o)F7^H'IIE8slK=5a?sh2T>=jmr*+->f9Afna5oh@t>9
%'MB>l&_<,ES&*IGH'GQHV*\sTIq1Z<MRRG#N^/e_EO%l#T>''9hq9K]V&/h]f"E%-PR.[DA&_dbfgiSrT!t"$F4gsaY!</Od,]Q$
%`3c5cGh;J6W!AY\4&TrT'm;")dHkN3URP^g4&Jo_D.kObhMD]JA[W<oDpkc(9JXGEiuoh@VD_d?H`:[kRdauL2k)^ep9&SFRYig#
%[49q)QV,e3l&TJdALfQ9b(^sh@%+71Z2_D`ajMB#i%X7&V8J,r;[Lno!d!iR(_\]JLS[,CVTsV#,EUpQD'&Q6A1`BE1n)eb`b*U1
%gL7:0NA8mR;EOSS`Q#Csd12_e#nEH/JSNO!q]X12^?t(>P<!55<Gd]4*Mnq"d'9H2X%ac/s.Z'dI<`<p-]6DI1Hu'NV.@f410cWN
%N:##@70WpK*D^>*9qUXJL7)G$`'ng4bHmY*)p/n@[*ih;J1`a\0Yug=401Die)S!-9:?2m..#bi2aj*[-NcQ+%6qQRbfEqQR^8^7
%B%7e,ojl>F0#n/<dAB0E2C_%dX4dF5._#sE6_\$-UKSSAUH)B/fp5#GT\:O!YqG$pJY'["?^n6[i^pLPYof8T")6)Y$EJA."LQl*
%i6Y0ErUpju:grFeFqYP4V!;CpG13154'9IAU-9lR(%1JE::%[tmA?+n^XO7M[M`DKSHl_EH:fj>9[;IY45Mu5dWs^jX1`l(Af]"n
%a#\Z_9p>-gOE,s8TbRufJMeo%+OHa_p(3tAmHb.GePV`dS1t:g*a<V4)!c%-;PgtB5_a'352P6`g(:1$EsQT(ltZc2dc#)>SXpK0
%XtK?[g"^DmG9>1L?EJk8c&$,L+irTg$nW5m`&?i!Q_]gH\;+1L@Utr$m9'D%lc^c.Z"Ht;hf(1K%"\8GaW9SrV$o!\S`1l8aP/Ue
%#mZLi$3W%!35e=b^>S<]m7PtLL>0N4!0O!S?jfn0GM.\*&kbfNYaGT)@oo'Y;7!A*mThPXKUIX`$qgC=U<bja$Oh3<Y\[V[<_c@3
%Rph700U/mrLO#4\Gp&CT'aFb,:(Yd"Ks*0h>n2q/g253POCn,+"M9XA'9lW7fjct,XqRtYlbeZqlSN@*gh5k*7%2/(1."r`T/IMs
%:B8'\&"n\PQP;Qf[o!ajW3A!nD6a-3`a"F1.D\B<;!$&q[WZ8DE+'G]bT&E[Aj)2LF1,as%?A]-?Ert4iq9#`%-e6OE19?R>%TV*
%0ZJ';]X/[;&e')FXism:W+_S*\O^q?g2o"A$>.:E>nL7RZida(X+W=IUI9n>lP/2\nuh"7_VNq`Q5.e$.0l)/lV9N'adc,^Ppce!
%MD"(.2:M,Pkm>P6-B2@GBN<(C\7;I])-br-p)F,do#[%(G:JLR(W*<NSX*oS&%P_Bbt>U7h?K`gnF.o:E\om7U.+DFEf].:*='EW
%YgqqQ$2D'FS(=HgoL:HL$9Q$<)dLafO1"/*pL0M'>94Y`8k$Yc.nNSA";<'J$ngWG,@%"W@aWHM-;^sp=mg2o.VA`n3SaX>4TkjE
%0PHn5O!E_*MB>0tA,W&A_#&`%N!Dq#Z,$\PW6cgCipe2;E%iq>F0%uN+)8rl^m/G)'4-;7:4#u&*6!l1N#30C7P8u>ApWnelK@H*
%7kM4f%s3;t!Y(+!QAZr"fec2n(r!L7S4aZPL4L);a06]g8P[e^AB6:!Q&dXjDsGLk`JD9-_C:40`@.A^IZbJkrH(p5/Qa6kol6MG
%52L4p\a2lp/1O?/1"ZB$PAObZJk[HT>YH.$BJde,IP<=t-*nc(_C\^mI'0QER;HZ5<l]&2DN_W8$E!!I(i.Da9.!\G#5ZS31l[5m
%D\?6k\R:M2Y+KeIrGFP)g-Q4%$AmcMGS$6qPi/uBP1RHPdR&Vs_6N.5kTUhU&1g;\-=S*^fYEO%XmYbHXL&0e5hukc"P,B+#o5V8
%m/c6n7GBZ&Yh1W6M(fgAMQ(=Z+LFV]/F?'?]S_6/F<ng%cGLPp*/4]&Q\>*jp`S_WC0AS(0gf\<0I-A3Lg\dkGHUH_iOi94.<Vt2
%Mi#"jghu.RcG5rt0uBaE#s<UdI;7EnVT.tVK#@p\!X-4Ba3mYa!:U3$PoW*u[CR(7#R$$L,>uU:H7">/\b+33O-X[fS!YPmF@1t%
%4X.V)nEM^mk??2nP<fbAGnE.mj,8=ek(GrB$<pZ%[8Ar>#/hI2inTF.$LCSad"j;!:<.mf]`Z:)Np*#Om$)*M$55;cKFaLKqZ-<a
%@!LX1`$K%dJDBc$oeat2+S/up"9f*WOQd+iLY\h8lteF-1@4h:'FuN$-8Z`Bp(%Q:4^H?:lL6Kd3FQ1AA"JL;Cj7V&Q@PCbk,f#7
%KYej+>`"Q7Z0=C,BqkYO=VEWnZ`DoB3!W>qE$]cR=CW[+HS#pcl:sW+c)]5)gLZ%bn:2K1dkcU&9lr;\`b1-Q%Ak_Ibdi"h2fG.F
%A!<(rHa0VpT7&p#Rp8%=66Y;L:n7HD`#/^%eNeYa\XLXj/:&&nfdK&3OYO`j_\)$H6?!9\S$EoD@NeB:2]k'p2`Eka!enn\Aet46
%hKLjhEB+.mi>?1,\ZQKYBj.^/Y-h.Q&E+Oh_OAeZBB($\^G<?ThfCfcU&b=0gFEeE7+2;);@&_6ZNp)*N=e(#$=KABUC`_+#?RTp
%OPuftUWk!`=NqBdWTr1<T+D((0bZ6W8jPgnAh,)HXls$7Wq7N3"7*c+1uig<KVp"%jmDQD%9W%"J<>e`$jIb/#DEp(Esih!4^r!b
%\Ch7q@6JgGa"j/OG1(>&WS+4Y(2GD3m$C(!]2:/eL3*jo#_P](-E1qa#PM+^rFgrML_MIC&Y+7pjl!W[6*`9laY_W>I*"2A-3e(M
%%g9r^<RHOo_Vm=?Wsi*@mpQ#I`4csnIp17-Tj4!F0XY9rE0i5uaI4`lk6OQ8hCpr%+4F]-.DAAFUj@)f,7S*oRn_*d0Mf\F#':jB
%&?a16-R?`4&H^qYdA=`kYAR1(7b<`XnDbJq=M!VG4JBI!^Oq8KMKBr.p1F'G-HuLpoJJDiM?_c+5p-8^Cbc`qWfkDJG9;bZk_t3,
%i\kJ(AYlI`US^_KBA"Ick$`[(daqS,3!,o"a\e6!2OHE"a:1+S#Z0_B4CoJXndo1G@$oTVhR9S'@R7f2\RB+]c38Pb\78nB4NWIJ
%0McFJBpKkp[!Oke=M'X*eS^"r!bq4:#4Puk?4Q8_3O8VEj.IE`%)dLs)BgcT!EH2E0P1<IFb)]jY?\17GcN?bX=1;e>1jjbarukk
%0JWp;bAgXfH6N/TQO\:!#6#O(i%$8aWAu5cEpOq]"V*qZ:5gnQAY:2,>5+d(=,aS5OO++=a8&TVks9+CX9W^<,8jno#=oLG:WBD8
%'aJ@SCVZ,hh;I2H(b.:Kih-U;`2N4]p>\4S_Y#ZNQ37:^dhc`i3G?Y;42=sYJ+m#HA@*=HAOVEWDj]0\Jr7Y?4Pm`(=S&4llnPrb
%c9laVl$,tP3fat*KQuC92:'rS)^8qHq(@EYELl8H%]"('Val`$6\2I>@9>h2!=lpX_]H7"$j:dO"rlFs858VQU3eq1+UA<t:..AN
%^nmq$<"1LA!o2q"M30i:cYO*lH*D%/:Qm$15s"3dR=O70;a?<&Vs_k;_(rJBAa24d44C*JH<dP7DK@#aJnEd&!Mg@;b!aUZ5YU4=
%LTefJn(<l'JU)skr=J"o@T8^D[d.t'_G9Tp\6'mf?u$80aoYsIQmh#^b@X:LR3:sG\4t@(#j/*(f6'L4)7]_[!FPmIeasSr+e87j
%0AKu^9Ea8fUI'-Oi0@?>ReUXNj)B!>iXa*O/7hLG1!&EN(+^T>/[unXD)DuUXPak4b!m5RX(>A,RjO:=k('>.>SBU(;Uq"@2)?IF
%:*0VC>Up%k4eJZmh=KrX!YP5spr7Ouk*WSE*Gg;Qg#NsY>><)dR!A:XH-ANY8`6&1b#;Q#R;YOoD#f]N":OQAGZ9AHX<(Q#+e0_a
%OPao#Ya;<(eFZ-5Qf+,AT>:3[*>eO7duf%^_%/*;0T!%U'KQUp`?CE#3aXp;KNr/rS=ps:/;4(<S\A@;&5EHfdX@hnmNEfZ.^WHk
%%e\@`;ed964h:n_@Q,AALO%%R$9<cA-#D#ke1_!%L`=&@=MabYP.\kA$!)5lRUT\@S1Uh2'O]4hAUoBL--A^J=REBqe-O#A1f6M4
%bh8s,)=^Gpg'TUtXW:1r3`E9*CLa)<*Q>/`mRcPK&_+h6R\W&,Uf\Z]OJh6T(@b;l/9+'ap*sO?nDCOk%hGFm7%f7<WpJq?jNc/@
%hJSOF=uL*_*'#W-ml3^!141./:%TP,MZ:E+D\5[d;`q@aFh/1u+N^7&D<-'"Ob">:(5LBII$qf9R"i[8_LD8p8X]8,*DaW[@H(^Q
%4sTJ#lS\mh=epKOL(g7?Ft6@lWPVu\n>KSK,@Ub%X2nD:Dmc+cQIY0&N>W2-QWU=\\\M3u)rR;(cdpY^Sudg=ek:+j.emL?`b]mC
%+:0/u\fij*'T>t@OUsF@Sa`n;A.quf7"A^7,I[h<YtQ;@+(A!l2M5FhS)TMDG(V:O7Y_%MoCc"HB.;CHIRf>=kRL$N2[sK<4`WTP
%&[[cchua#9)[Kif;ZKOD+=Gt2<tUB&/0jsn&YDE9ZP:B9cqX/NCeCRY><o^Crao7HSgFH33%0!io!bLK*0;[@`"eXq)UcS6H?a:'
%'*neXJo(!CLp3kV:f=4IXq3L(%0Kt?'R0V1K:>ci7l(5+*8-`BCl:5CXb3Zo)K(G0qcur`Omtp:#]R;X]M\_k*U,Gh=a(/$C#e,*
%mh817CiV+JF2nj./)KksIqlN`Gi$`kAF9jc<XdZo$V1T)DA'KZ:4YMu:&e)%&\nP1jBe5rR`l<Q9G.gOL%JEX<cV4GA0-F[(4N0m
%KqME=&7>*F[[DcehIWc/\BL?kqHkl=J;IA7S"]h1=RG%tPT7k6VbLH[j.X(T%P]oOG!ZT5\TS&F]8%[ecai+Z[g\u1a"jD4`QJ6P
%Cm1@+,][n,!s,1i'WcCYn$F=%0kLiA+@p1(KBYFJT?Ur7*<:^d'2HjXO;Cq'S;_'+gU%_=kDlo6P&X0i"(DKuU!#_/Rfk]4Aiu0]
%6aVcMcDl&Tq)A@4heGW&!i.Ys)iVNafI&Iq&A[WZluO&MXUBg4MND\.]"uNToRKdJplGuPi.UjF)p/5u_4`e"\A3h63]er#/jBp6
%-W!rHi,DJPYD-FW+@m!X1=1XbN&ANZBZpQV`mYQOM*Tgeg/2eYbQhg&QO5ErP7pN:!am8cnEF4OF)sM<&FK\)f;dS,^m6/OM6nNa
%SU6QM%W$2jDD@rX0PCVdG$hQUE2GJrA"Mj$kG1%S'?YAt"9@?D+=slI"C87uAO"Oh-Wh<emRYUr+fgWC4?>Vm+bhlilYp(W',eF&
%0VP'UEWJcKq.*rm&I#:gQadZDdP9*$9]'\]f7t!Ui.6CZE!TL'GlotSVC.$*<G`f0a*AN*kA$Zj_$"%YQ75Gae!M55]E/.:iD^J=
%KiC8Xhc8f6e$K1V;O!2LrWN3FU0q5;0YlC)jiV!UCA:2]I?U#/nBT];;U>SLT3k#FJmS!8ck2WI)h9^UaCHhqNoBke+$rNe&lPl/
%fWZ-B!t60&gF9'^nVV%^F7$!J_::%;+?MDh<Q^AbiI+X8f>I%R)CI;8R89Co(0S@;f1U!ofE(A$A3M-tkmNidk)k1Tbet`8pSh&s
%+9*&5iac?pPFMUMWt4[V]`%NJO72Q+?G64/X'`U<^eKc[f9eR7Qf\EJ(s0rN^'_,!$4tD3lLIUt+TuCu*#6At$X1Ik*"a/%6dJT7
%q_a2(V.B1\+6M18'I<2O8@1+]c`8gV$I<a=#a+O^8DN:YKnVOIRiM:GEU@eY4:ATulK]U^alPq<'Km-i?;/u*e7ElY_+k^O!Z[Ai
%_j28EKibe+?5&>$K&dPQ_k4?l[&cSfS.?nspZYNZP#RtR$2)hhpJed_2"#>_1hr*_,m)0&"#(8aZ7KIf5tE3I^ISk,5sDGs?SYB-
%R[rP$6V<\hG2WoS@&t?"jBYEG%be`U?gX5=T3^\F$<T,tcNe\@"eFP](AlRs)712>4N3TmBJ``:,IS'3"g*]Zm!tF=?B>Hr08j0q
%\$WCC@d[0F';2pPKk"e7ioVE7)#(lJ5^I.UDp#uUJ@4sqkJ`>+*6R-'@milkY7BBNPXXV)pTRn1]K3u6R.JR*`?>>6B8friASh^u
%9s3u#7qZU^7Y>Rj6fZBrAmi'?EVAc>;D4&qhD\N%`KP:$N*XQt7j7/[-N3McW6;I8Z!N`8lpgRH5rtSBbPgkP\2W1?KfAa3!l<Fg
%@tXjjlPjaK5t>$crbt6p=0BhIH;G4DWITK$5*nUoWKs\ts#LPr0%NNK-Bq,Wd=RL4$AN-YAG3dk(l7?"Qe6"N+DJu0[hV?B=B;mP
%Y'IkILrfseNg$Pk=rcrg*1bJ7&6Cq3L^8cWI=qS1nE=&tfT+K_]:=YA]VG]jP*VWnVL4oJ3In<%!%6J^j(<V(8GNjbD9oX,V<F;d
%LGOGd:e'pf`=K0hb&YgDn]OouT-7#?=I$1c!!YI-L]dZU4_kI]LM.tT2CW#Uo#t&p<T+7&f;S"/6^]m^fY`N)_tn#oaM45;8?:Sd
%\^1G6GSL"h4io\/"Hj/HI8nSoa$m=O*EJWWDV[UpLLA8?pNA/0:#e#c-Xio#Fo_+V`[-ciZ`_M'OP[cu,Y*^Y.`K,Q\]@r43#g4)
%F9n3[6N410][NrOq@>3>#oL'[%M(H4*QNG?7m@Dpj"[&5k`Mr<!Ak+omEf1,n$&sWhi/MN+Rp5P!8&jd^rb7)6hE:=/0"i^[UE"K
%>":"l-P,??;oX7!%k(gJ2R;q%$Id?=_>$cHR+5-'QT?V?1Hd05l^:8^GHO;5[N#H="]W#Lld=pATV<.\%s^Gf8B_8L64J`s(2^jY
%DF]B&0iV9HM>MiE7jHR@;F.Gp)NG1\!oYg\>^oHpo&fEZ%a:?Hi[E6kgFZ`UMlc\5N$Q?==P3h^7V7mU,]/,[$)*$nP:oFeB4U*U
%$o($[LB\,4I*U`Z3g?/-IS(`$_]rFUKntKW1,!,5nGHP\(Ug+B(s:5N`5E?C]2h-30;9e$El$3Jf%<Seekj.E6Lp3[>7umJY]r0)
%-6Ap-fF.im4YUS*<Y$MXdRO^J3nLYL^rZ!Gbm?#(Q-'1Xng)O)#<K^044[:[corXsHn=4EL_0cQEE<-67I)Qc_J95IqdGtH-k`e;
%odkY=0up8pe&Ap8mU?GKAbe1t5I/Z9nBM$7#$="LM,G)WV'OCr9O_HT!0_$EamCiG*]4FRTJ&eilH]aj5TaSKnIW1Hnsj"JJ_#>W
%5@ju,-h93ci%,/R@>#HZ'I4Obh*_fONcpAA*UVXaMUP569[R9,noCg?O:!2sP:=Q:@hcup-6'7"EdBd>k4*4g%Nh)L6rF7:!-+os
%:+MoBd`#<J3,qS1UIVDa6l;kA[]@?0g$1o-C))u?8;/?M"=Urk(+_!5NpdCO@HABib98Xt\9s+T"1I<2QU@,JbhtW`"J2!H!Pft6
%p/d@u7-PgDHO<8pTV1.V-jVrK8-6"-biD5>PZ]cWJ7*!9@l<k>-$UpYM_qc%E#T4">dc!(@'WNIV0ga4+"0gEpBGS$.J:kh"W/6+
%9FDs7"V>0T@raR+'f%5eG<o91#J%(8?TkFg&<0%Rl),KKUWAWa7E9X>#plc*=!7@B`H4C'.FPnggp'c+dFhC"&&?H,O=/WG,GZ*K
%2:O#ejQ\'5"h74d%!jtBe+diO3h&<!$N7oq(]`7$`r$EPA$>SKo>le*,qmfcP@t\0aOVT$<?j_@2[/-:iTYo%<(q]R#><A*8D`!P
%'8Da^HJg(VL.@Qa843JT_YI(9!@]KXE`N>Y"cXZG8*f2'F>f@TnQ9+_EK*N(?@H"Jdjm/B=/rd5IYc9J#]D]`N4'->mu0akjUP(`
%jHId2'L1.c8-uRK&tgq:doE+$C:n'\,*%I(&:Pq+XE)k,QO*J3VoL2SNgocK;D>WInfj,ejeCL.I4,c)1_o\*e]jHo">gD)_Gr5r
%LQXt-3kPk]K'R0!od't:GIJHJ]6-4;#n=[5qs:5(=A[35HL0IG<?NF2!l`B>2A]/I*C4f";e7uoYIOs;4QFLDH-?lLDiD__kBS88
%C*8??LGQ,Zd6D$"a>>fY>P2.5bPu@q,<9l_Au,s1\fj>)W-K!AC*mk@7.JZ"k(]b'*5>snCeh.lXh'BiR\QNYMaZo%THUB-<tqQ-
%nZL%b\#cU?iDE^c(qkVa/KX:rr>auj;?nf`DMjmc3",fh(3Vuoj:2;CYQegl;)1q*gYf1UQ_Q<O?)YeFYtEHrX@(*3</G:=%J$b8
%,`.:+c:jpDYh?ZAO6]k>?KY-c5gjWi`C!J&*>dJ/+/Am0"3P]g5:qiBiVVk[>pKb'!fr<;$DjW0,@K7GcU72"[r@5ar.#HRJ-?^`
%(@Mm$]fWL[!'@<]%#mA;b`U:a#sB%*Nr&+11'fkRP>%FqNe%Da-!%2WiSD;FYPM!r5k,1H2fOr",J4XlUWm4>fu]VeMT[1I\'-cd
%cEI^kW*5DMS$bZ7&\]4Sq<-iE5Sl^]49G`f@nk'H*=BC#$dV85MC#EGNMur=X>:lfc-];>"!['qL,-KS?.s5(pB+d?;Y;N!M4sD3
%gTFtFnn!uKi2$lD-Z6B0>\3Usd6R/Ql.O&7Bua2#[Hbt2+.Q!qCf)@/3cp^X6G13]]r$<C'JLi7Bt0TDfmp(RRa;TGG`mYKlab.:
%8+6kYUm'SQ`0-Z_c\<>BeL5kk_0sm=E.`!;Tl"7Zn0MJkP9<7aoJ]*qYcd`cAT,1^HBM[:T4l#"K-5;W%#0pbp(d^Ao\.DM_V+0"
%,4Wq94W$PJQ9_O2-8+kSaP!6c?t!Q4m+fQ<a+m-11..Q!;+H=*/Duj<nBBduEm?^^G(2*DV+#-\_$C`u["u1<6MLdGn[RN8-k'k/
%rf@cun/kSH,R'K7/$?J$$Se&nA>mfbUB$_ek?.cmAFSNgFS@ZAFMMSa'QY06_sS<nRQbE\XJ=,`Be#h`0r@;llD9nA!O^jAa5+/G
%Eh^j*c%3O*SKJ&Qk7,\JFkGI`K:W+J?\7YJ10`23qbi-`.gFpfK"'^_,9rgZ`;#`_6I+=O!>)FZMr98?N+h"sN\)G2)@j>NS.^g:
%WU(5KlhM*:].U/nUd4LUl4'$Zn.$_W!0@di@VS\u9@,haK.@daVS`s2Mb)`a2-H-*bQE_i.4-;9MV;gf[Hg#\n=:Vp$2.l;:+m@G
%Sj``*'@2L'/0L?e!f-@e,ZS`d+O@u6+fO2[q&nP6F`I9MAM@`T$8F:>2F(m$/**'"_Ed7PJ`u0tTK<7ZI`3T"2gjFo4/aG.lg\'g
%csdu$:qkZR<C;XtS>C>;*Lqq>R9>e16(k[g4fj/;9q&(4X6`?X^uV$Dqc2"\i=Gp<:='3MS>-tI)'fL*W@EuUd/+.<X]n0E0cVs5
%YU;u"&h[Ik>kA$<4S!GT?5$7b;(3/Y\YmnuAZNN5,Cp6pjK=Uk#V73Vq+q_Jn4-.n:JmNAk9F:^l:bdW@,<1<hN57AkjF,*"-L!b
%*b4PV3&KFt(lmT"6J*1="K)JfnK,m=.PgGP.'#N4`lCq[/IqtfDKGXdR7l?D-@*gd#jMbtX#oNNMaT:H;0dObkG!fpAO^SD(mie2
%cU7UfC;<q`KGghWM?FjLU!4StdL/(]#FVQC)[#WZ5#1Sl07L,(4+&JsAQEAb8P)=@^_gj(7oT-=_C:-/7(#Q\;o:u$nc8)kLGS5B
%%Rc1S>J3i*!X`;F=qftnK%Y4M5S@#rC&m+_*']^_!gb&oeZA>D"b7aVP'B9I$HXHbQ*@f+8#D%#4=C?3GtWf1[WHiqW8%su5kg]%
%I!&j]J(`gH]Bm[m8BFBYD*$,/\_6WE#<0k[;#WhQmC/\R'+Dm1p<Dd8I/Wa(QQKO`n[Z's;gnMXT>,dFp@F&`?iT9[GCN-Jj$.tl
%mb=q;?[^f/pa8"MrBKi8a0`n%,N&$4dV&c0Z1$4srYVt#+_9bdH"bJC>fVY'JS>/W=D.'^!fL^XMu'q05I3-f_kmTTj\1%1^O29N
%G`Uh;g6EKA0mk\;nBS,U!$RQqcq0;g*HrHma7rD.j32em7PY8e2T(r0&0,oQS`_fC@pgfa2AUDTLuj6*;/F8^#W#03'A5+ehl2p\
%Fc:q"9ct$W;HQ3LI)Q?@nQAHshcdN?l9TMsM\GG`G`HRd0F,pDKn5i=6$$:hMX%?,a414":32BhD8T)*k.(4ZH_EG(*`Sq%c>q,s
%Hqajh0u?3(#\T<16pbq9#KJRaF."5.C_?1<Gs#Rr"rnbnE=a*Kd=a,u@t*=-OW.4YkJ;"odu\\sW/Yf)[b#09`XN55WdbU""1MFk
%^BLks*'99XS9^(re@K=QGA$q^XN(-VT[fIZ(qr=V>SWUWhM%C-7UrOK?9Wbh='X&FH-dH'H(pA>KT"!]/"^f\BfV_=$KQrJ)jAOV
%#IE*;bSV\3Ej3i#gkYcS6"SiPQ_^7AN4T<ZK#lT7(kudWa*;p8hM&rdAYhaR.>F&Q46'O2@Z9bi>UbWZL;i%Z0V2T!huq'([U?:G
%pl!1qP\AD[@ogKm%JF8d4$8K1Gqm*FE&<0YR!$8B&A_Yr7?TKQ(G=pr/_T&7juV`P`8iOWYdY!a0i;k",4q>Q9l'^ML#>%tQfGpd
%[`cW!l=.DTKOf_HfR+1+][+g@dt',;>ca>&7T_#jjslD,fnHq<dTIC$0Ea3Rp;L+AW?UfJ>g.2?&;Lo8e&^4_V%obp(Z+09J^g>E
%#1j$@99,`8@7'9]cJkf9n6ddWmjSO#VoP_gI)QY+EWo`'!YgHi#?rqNUH-6ZC=?bR3`e&u!Beq`mK2998FD>6Gf#qfD%RM(&D8IT
%Smj7K0Tn(G`F+OV2\ms`D2Q_"=GiS(TNk$FRmRsDU_jdVR&%Pq%#,#Rf5RE3DB;jeL18Xqj%@-aN:37g6k@F,j@0=Rb0EdV!.>`C
%SeuVS/H%@d0kn5I=QIE416b(!N#4Xrc\7gTFiJb<An&QRHlct_o9t^J06-ZbV;NX(Kj7]i!g+@r);N8tPo(s&.Y_H5-u^EtXY*@X
%I.-(,52nRg=;["8bcLm:-UQfr`C#%3,;-,YK8pe"mooEm,DOIn9YjuTM!7sb&mWB.Q_g?!IW!@MEDM?H@i6A6^Ch-Rp]CLAd1CqB
%K8ILQ;#LI(S6:Z#<$OqiR3iW!*FD#LAc7(B'K69,"p6T_7)j^h(2g)4a3o(l+(ds_4BRJDfh>j5<D=Zc%L;&g5)bBsdc]U27VTKk
%(3,F,J7Utccc!`Gh/DHo`k<?C`%Y,jfRsd`@?=/-eet!qpqDrF9sFhKB=[;qE>[qi:rNXt0P;sE?UQ0L^7OSD;)!e0/(fU$pEK!+
%O:=-:$<;=sE"+&X%P&^$L-]@_M_S?,$r,LW(SY?j4YSgIB,E[aW=u0I`p`,M$d3K&bsQFY,@q,/4Xc%(Wi0sM1(6P6lPfF1^-h]$
%^G*#e]oic@7O(-uEsi(FM"qY4_P!e-GL2%H(`?0*YS.BH?9(qj]Y`4nV7=kZ'5=`%`@;;GK@>WS4b3bRb59%)$kc3t]*>)c>mK/e
%1CAa:P`tu<-k+m9WHf'_POYue`@$W5BpL9?E1UO]$T?tF+Cf?sUJ5H(-K.iZ[[fr+Bl$]sMat8k]p/tb0X>n*h!?$!]8-V+47I.]
%\R"X?+cPbX/kZE,#i3C+&DfAZb'_2OCnm>],9d]=;Q-a=]>.J.>+`&)UO&[-K01!R_q#@di(a$s.s3O*m<V!aK=T%u_&L$arEWNX
%Z$%;W'r8[]DdjkmUqr>a_M'`^`4oD5(1Zj2il+>'4@RhCjU4NnDsN<6(j/)dE<TuF&mc>[A6%$V5o%Ur8j8VoVr4@PU>RXE[<R:#
%eHb7hBS,:AKdA^35nZ9p*H:j^n?9]A5>q][^iYl2,E1hq;1>'\Y4_b;%iiHZ#=aghcF__[IE5^8JL<8,F`@M9D?'l8:]kWXW&8o4
%m,c)N"Z7uQ.'+0pC>b(*[kb,9^mM=bZ?C-DTAm.cYB=mDNCCdb>fhOo&PJciE!*uf.t(7s1GmqAPo1F'P+ZH.@UL-6e;]A&Ql^Nu
%7LO%='f.&db!82.*(R476YeB_Ea]-k/#D2;2$P#Q\V1?_M7PG6nVe/aFCj^p"Q#ZT0.;A`^+&*b#`L/h-rGR-(oX%.Q/Db!2VMu+
%>j-^ChuMUJCqsFf@'NZF#pBj[b*<>oq]9'="jEubdMiGsJFB^I01<V/ZYmS]N-)P]R2gh4'K/"Y!5ibCD/QQXj&HK7XY;f/OpLM]
%3.O@5'YqMhN0+kZ0]*5j928T6^nNN!JcHWi"XqFLs2FH&,!5Dr(6>^(rGV3epL+")!e;,f;\:(M\rdMCmU)%]9X9^M%SC0`HY;JJ
%fI,$262V+M#KGucoPFj[T^eHFQc=J7KZnh9Lk"I^L%oiuSbT[&l)8[nr]W8^%m(U?BdZ,,oDWL"PHeeN;tXV*`VU%Y`"Z>9`;?$]
%-^PY<090PV+F&C@Q'sVr\FBJq9RqDMpHkUU9^r$.(.dlh)=K4T)XNEXjmM^nBR_Jim9F=S;[F*)T`#UDX#$Y&6URdW0NT(E?S]G*
%A0fl9ZrDc*BRe-7gOmZDJDidF#$@f%`?3"h9=/:*#I@YOemFR<eoJ"onc=SU$J&S`Paj?$+:?<0b6WanQW^Ppc%G\U*CN>B@JrWp
%8i\V=rPcBH![Uru2$B:u41"oA77TnLPQ$_YQ9c]BrT3GJ%$FpfIrPX#Z%MZb\"lu/OT+gH%/+"0Io?hh_-m3f9T*/`_>6e2a8CYb
%QV@WfF4stn#XJmQ?V";4EM`U[?`oFjZMl%#b-J4iqoeaY1PTPr?Y8R[YFP?Ri?KZ/HtL[d^tK1b0:45HUVPejK8#JMd9uplmUY$#
%mnER>>85jRk:[A3m@aBrM-*Dj-N$:pL`II_^C5IgNl3ArnL.#a>pt3coTpVX^G@m5+UER[Q:T<-J+3C\)QD!A]M*c6oOcML69o;^
%$et-k%`Sm^?O0'AkZklb41S8fU5ZeYKBSZl\`0)*H6D*rS6)Fl4uYdA_=Yo'*$3SX5&s*>cO8.hA8S3Mr#ucn^m_V-i]F7(1W_:\
%7GPP7E8^qY`B(skBhu3]Ab\uh1U[J)08&j9=-9c-l6mRo1W;$?)VMEKig4ST;/<*)jibLo(Q)RSnU"CI^\eS*0c5?gE+\$\iE%J$
%eec6-E\oR*L0nP4^tNa9pr-Ofp'HI\()gU)%u+FRM5XA!%):Si!ca'ipk?`Nb]/MI^),?0SiM6K`=hVZ^FUR!]K8*%+^k$'_XS"J
%:]p0TJ6e(5E;WVL/a:P#^I2uQ!9>-7gu"qWL+W<*=:DE7>Y'<tkHsOYaY+07@AoCfVP#9InGGVq]LMDg#4,8F^POd<j3$p#+]4E=
%nk0!ap0d]mJ6W#CBmuc!`F%sg^Y4KPmQpH&X?(LVL#s1L3XnCH$NWh%K'&C$<k=o[IO2C'&OaAr&M#Q+kSF;$]Ng8A\VUK],)C\J
%)1kOpFfk,%*F+DL[@>lV(==cn,3#=<7))!0(['pDLjk3R(>lST*n?[FS`c?s3P<[#^Q^4q,cY,o`f'BnZ8QG/s'KGg"VK)'G7[Ea
%D4P&>"O6C%IpZl<B`Mn>3mTHcPXc@Vk80BbqW#Ha$aDBm_=J%k043#r9*sV\(S9Nkp7H;m?_30TP<ndJh#EmN"F&5ji^%.8"jJ]%
%CZUJF&J$3"1PHX:?_XlWD$cY<1fS$nd/;m7L^E'-o*^r"dhb*j08>hoN^<9+RVsEsV>4\j:oG[+WtDWO"NP5*BtTXMk"PA>.;cbk
%q3Am:6Uos'B)ft!J=>9sLHg$474s_Wiq\;b-'m81IPhPrIc^C%'S]i]r8R&GBEuj:"C/Af4MOSK%riDA6t^S\q;D(6T[t^?0<W>(
%GOYNNQAEbKAf'#.-[[uUG=_D#+sg??R4$6n;><IDNP/SRI\GOZd7GKPLA';Qk')UKfufTA(W+G]G__;fL.<5uJ/uPM4B)/u=$hV'
%)9U^)qob&:f@eW<hfnN>Tg2r)mL6d(gl%_WgHkN`o>fOm>R%,Obe2m-NULLth^*>]hr1VWOS4:IQ;pOiC>\HeeE\7)9a@l*Im(.7
%L<)B'mH07pE),;qnNUYUhr//@_<<s=c]gC/?oS85L!Osf20A?`ik.h>"eG,71lO)(^>3ul$8UN,(uX?C"U>./$I;\cjE7S91&:Be
%Wf+q7_/:ZW$]cro)"^,SMshK;_;^B/3,*if,ee]ubc$a#+pO'D=E+$j-D&\O_KU3>+rG\^s$0[+%)+k_IQ/#9JsL2EAb#M(7jFi#
%K"cHTJejm0HRTWS0iQb=K+0Sg],,9U9cMh=,URcVb2*nT09WB8="!D>k?-'tb1fS1,Kb;&[MS1;m;XQ&'BU'&^QS;2j'*;WMR+,l
%!s@'2:>(R&aOgdmbh1+.!N2>!p?q?)#%'#4fRSN6e+L$!%I2'gH<Cl9ETUfFa%9$2]kcq3Vs99/`4%V3SZ!@s*fU-oFq3cTaua&C
%PVYrcY\5L)on0-3Y2JMd9!Jak0<%1Oi$X5<Y:s=9TJm-E0)WB"aaf#9(Z9b.E]H99#`#+m0C6>MZ/e@!$eLX_GBiY"Hp:R$/t"Ne
%JhMmiZj.eH!VnN'mrYk+@-*),kPPG-9gra)p'3Z]Gp*o9=og@P:tib.91QtcG#*IQJoch2*+=I"0:'TF.roeQ5tLC2PnsfK<HGD8
%_AFl!EF_r.nGN3<P8>8VP(g`obBqrbPje4/<J,DPjJ@9U#7aL8R24d<Fs*/j0mqs@?.MG`nj:,+=E*h/^iJm"-SJ1NhRmq#P(nSc
%`]5F87n1Y=Z=!TuS@jg16#BjdGq!=Yh`5rs^FO_0n1lI`UAcqr04QUgH%M6HX;O.63-hE#-!VjDn`]WBK9CHSQ;Pb]n/?_m$RMu7
%`KZYJ;+*&[X=JJ(bAaDHd%N7F"=7shmt-[gAWO@5$R7=B<u@RGaNNcKgpUVOATWUYoJ7`\1+SoXQNIkA//WYnD(j1n]P"4\<utQO
%7UC+G[!j=^-,dMIZRkMSOs9)'#^Hq%O>A%5@?4O<K90/FCi(^i?M#LkV@+P#$<5rM"sYd9X@OV7inp_p;_E1)5ZKfh30bTPfrQHZ
%c]%3P'V3?j),+JdM6l^Z8up4E<G2D!HUc"*+fU'I:ZQf>MAC?'fluI=ZgfL`aANkYT%[Y_2UV%MN0VkWNu*?gGV;A'4']N()_W^3
%o":.U3ZFDAnb*RM5giG67;E\\?HA!r2MoWC?<A-t]\TL)KnL6B4#0JY'%*8c1amTqCoqkmi9e6s:D!$hmKL3d=:i=mjntNq(L(lE
%hZiuG%KgcFMg^rYTQ@l2mt0JS*$n@o$O3Q`g>^s8,?2E5n*[HYL5:%t`cH`SGP<BCKliYh'J],5]8mt)ZHE0SM,b5Dc@p;*>?<%V
%kD[#(:etR5mT)i'?2/T""dj_cm:,f\5Y?WF(Gqj<5@`H%,Du+sOR9n0fZ.6%]D)lCqLrZ#!#Y-/i(Uc<*\!(;ZjU?qH=bbuFXV:0
%6*f6A>e1bq!Q+s'rBd^r@;l&&f*-Q"[D$<p!UkS<F(*[;N$ce<Y1p>>kc'Qtpp`*FU5kf^F_C`Ioa^H;H$)t^6bN,\<Yp]8gt]kO
%Fdqh-*2L.o#6L%[Ki8dSK[PHN(Nsp6`&j=eFHSGT0$s"dpH#!#Egtn\F^_S+:n_S&S:gbEcT>cFFLpt&0Q)M;(F?I[B3`N"Vu'!#
%V)s*<VP)?@>ab51B.@10@1f[R-=,Q1iQqgl0(@Huo::/K"/m4s]$k0P_4lkVEM:@GbCfj:0N`EAEZZR<_a42:%UBc%dZ8M\h<Aa5
%6(pA'J:(eP75f`7Ys!]k?K`FagdRcV@F1hb'0d=U'<+^t>R\1PU1XpcK0kp:Ur/c2$=,4[N;*R1DMh^Ic4mk1anD[qF.F-f\u]"!
%d.P8L9+D0G>b"0Ja]\&JmMrg\("[cnd%u<5I6IF("3<?rST[`@(j8D3ljq=74$DqL-./9g>J*nu,1p*^c:NWkl[EkHh#i0`SLACG
%kKXrLHoZU-g+eM,@F&N<AlV*XjLN`TGCpN0;)pQf&*dC77C7G'&GpW*\JsV?7tU!LSkBIJ%1uSI_Hl/EQo19*K"^<`JBNIO@/[]-
%!_3hImKsD\p$AH.g1)S1F&a#5e'6mtV1`qU([bP:^a'6S>Wt*j8a"B)h_3cqN$FPT^q"MdaunhGc=JW1MTkc^"LP^@)Vhk7!(OB+
%F(m._'DGIR#pTh4@Sl53ps5Ks"'CKaMO8]#l<N1FWJ`bq`O6>oSBHKfW7VK!/u>*'X$8LD29q^b22Bk-@Et]d.%]3HZel5B+O5[k
%GB[K@V.Y[4GNrG-0AoG,FY6\6aB.M/3i[FE_46DacK-jLF-Z,Do?*RrJdumP0]sq_T$u]E7;@?+otm7mQ5!@W3-QtXF9."U="/j3
%?b(67[6PQY\8s)Iil^)WB-Q&p3>X\=^$lfjpaM7SQud78o2>L=3>\V&L(o8#Q`34)A5M7e[Sopp\t6POb+,Z1?tGG/_MN>rHf76#
%&EcC&FIl0KYV+?&%d%#lM&:NL0^"Vn%6eP]k<csdAh`CG!.3hES4b3)WfXXX%\uRGU#=/*Cr^:_1NRFX0"[FgS;VFGl3<#e%H&l.
%Lh<6GF-T2Kb$rZXI5b:<g,l8nce=(5(K+PaR<);@?A%=_\J2is].iD78t]HDkOL=@"_Z-BR?R6Y*]-+^h(`m9"D6k,ia.7!G6on_
%\VJ\fF)cNG2M)]'&NsFBPs#qo>R&I(@G/>d@*^t=BD1+,%JJQk'PYCT)e8J+St##ZG]R#!%50,SF.#nS:'Lr&OMWG^:(nQ11q5>-
%S'.=(;$?Khm,4P?l@>`5DT(t52OD1q^qB1!P#;_;06hQ+*n7'fiO3C&.Qd1_P+H[R.RDor$nWVZJiB#pb7iXnm6`@_#:Ig9=&K;.
%E@qC$M(Z`WO:iHNbdeG_rj@>S6,5ncR5pV;)[;rkk;)?BnP*-fAbUV]0?gujC;m6*3L;9&?2MYLb`oe;n\Ueh/412:]r$$t-K%=`
%MrD_$^TQ(s&@Yb)KEs-#l<DcKPV>CPU!Da;8Os`K\O??M5p"OdO9ijL0^$k.APUgEF(qtD)((_lM2NSd^kk'q#o@Y8=/tLhg8ZCf
%^.A9I@EsR/UW]'H+^dob1$A*=dB]@3F"(]s"`piFf7nA2MU3P?%:6#TM#q3/32gm!<=qf'`6;*n.:'K*)&;;7&+3\gLCuZ0Upuoq
%I.f@?/j5eJ#\T5o"<6A6>_mG3WH/qsEt[@r<tr[#D=ToCp!9opP'<F0F&e?p(2GO]I!TKmRYu,>_VH$Rgg)Xn7@Caq5e\(VL[+oC
%KXiGrU;ted!Q]n-)5kXuYta>J/Jm:%IW!V;BGFLWNaKItje>?[<=o_M^_SDoGk#(8ZLXP&U0PLV5uHQ.\Ho70\i:O?5lo28@a?mA
%&-B$V/@gQ;DI[\IU4`Nc65PMa5gTm_Ntar6^/&VS.>D)T7qpY1+I?'F2E-40(Ee't/_8_Y4%qm!7-;KG$j"E&"EF/CHEVAl7GoFG
%pPBk+L`nHP8_Y!`3)FGSbd_6I7dF\j>aQEIIYP2gE\"l+/5f_,%+]8Xj2<N<J;$FK$cIB:DhaU05_/XZPn=g1j<B3f(ZtgjI1bJ)
%U+L&^I(0>!&7i')+uP96YS])cJt"'4jhe-i"`mQ"1;l)o@`!ij:KE*(&ME&`oq9,iToBh$V$0-Y^6,AU`'O_QBKLeJ(QBbE=Zg6"
%C"q)E""pT3flKo=9<JEm29p[Z?j;A<RJms5REVdb<%JR0"p/4!ILBYK>KEEs_[p]sMTr,=;$X^HDnFUb?<D-.S!T't8Ttr/TY*]4
%;L=o_Dh6*R^:,,`1pKX8hLk;50X<6!fRrW.O%=:sVn9nui%4F9-pj.iRh6]:0&h1dY@NB<.J,Y:eLa_sUKs:*+bXD?7(6#e*B^gT
%pg_X\1X.M\Z7'k#gocN:-b1g8`dK#@"nF@*r_i4jCt@*N:u!8K$^H'I\0WLmRZ$*iH[#Mjj3AIT[kY&X[Lf0B3S817d=D@g+Lf=T
%P*=]SWuOuPTEKl#(+**(AMMr6"KXfI[3[.$GRC@V"n`16OgEd$/H?T5+gm"8abJ`\"XtdMog*:",4OI<Q-qQMC4ahKhnejBN4/Kg
%XMfh>(9[kLC@KoBh6@R;dt1a1.do0_/W--%!2i-r*0XT5>dc&\_F2%5fs9B6@JV%7^BgJS7(11$meoafMgQlDHdLF)4,@!j`>7?.
%?#q0obuMa:Mo3""!"t!&U\]8U@#M[Tf8qunH_S1or3[BO6p[@-CJ@>i0Zr1TE\_"ejL'e'_5+])f1soMVh;UiZ53,+Y(\VMiu)oT
%';*VqY"cX)3c?SS786k;g;+f^dpfF"*6e_&/_3TZnsQg"A/"%9GKO(l-\J(Xqa9hDC-Btp$L4tMC:aRiS?+Vq6.D1$ecm":3u1o"
%j'W['/Vsq.1Y$O7c$BrOC0at![J#l)M$m$0,2Mk/;N#P<*?grKQ5H7bN2*i&`X.OVlt^f!e?\k[eLNp;^`Ro1oX+*NRW^e/4"]`j
%[e-)\f(u&j78DUIrFZIT>-*R^OM#P]!^Rtb*Ts:gJC:po(;+3g/[3IFK:E_)H]``;i9O1.r$j'ZqT(Ai_qX%pWL2$KEa#+N0SG%I
%2Q3X-RMI?ZdH[!b(61NdX<=B/M)^IIi2(9sJ9[caKn>`pLcTguAB*!^AamD!kJR%-=hIEo8W,\W@%b>,94F4#?3t>8=*-o.)OsdR
%LqtkT*Ym"a*Gi)-M1[+-E4o[;3#=1!IiL(a:shUc73eaEVsg;:9XNaFK]9WUd3<T@-R*eK;$Y%L=^'Q&0rTA+TcHKh>er`ggt)s\
%g$[P5$O86bGZ/`('^edi37oZnj84O]2M=@]gRTfOLh41S_d)D<JJr*-`J#PYGR<rop&3)t)oA8>m2i\Ck1T/r'Gob3i+B%BBGKHB
%Z;Z?u[QE"5_E-G"2rc$Om1.5EMHLA\U..Y;)6Bsq?dos+LQf%Li@LXJ_6(9sB+_g-g-1B;%Xo4lP]fBn6>9a#Aqr2<"PrG6%@;Za
%G5)j4(Ui#UT!FR)Ndu+1f50MZcW%5:Oq^TrA,'@q5r:YCq/PMa*M+A_Rb:hCkS#MR@("7::ELjg']u\\B%^kY759]E*DDS'_sBLo
%P%+KTr4RLhITb74jE@Ad"X=\t9Yi>C]mOa\bOTNH"ucdrlu9,O@$X4s6oCT3/;nl6Ia/a9fcUi4['I1hek-.I/8B**V0HF670o'p
%j-f@/AJr<5H^s+i.6A`Ml&;o8BqCuYN>[5>P6HhBFL@j,*K^j=P1X*3$LU5-$U,<r%#,J<Sp<$3&g6#n1EosUMem`$G[sB'd`+Qt
%gDr"h@?Kr-r-M/D=RP*9ol4rlRQt,*(CJh9&a#Yp$<_VUj=guPfd/VAa<![QaR7?'ZUdc:%V44[6^@us*p10>b%p_3*:b?lR\G/>
%El\;ehtG]0$^U^45!gWYKaX)-,^H1>O^^r%:WB`%TL3h$&dVSYI:80?QR8q"M`_d.2:@1?GAIckisU&^&t7U.c)G4;=*5O;,$NDn
%(=C>Xa9N'JMSB1$g1hE"C(\M'CJd@bbSsau>YOs<it.HV0&RFtT^<)9/o?<5&K*e@dTCO1bd'3<T3F)^IrKc!#L:uj`u3)!\X<8H
%dPZ16Yi+Mo)i;4[]5i9cO@(dg/BeI'3r7%K>="d9odl:HH&G<(\Se'5<iu1>!2DV9:=B><mG>2ZNI_"5pRogi:M-MU-RS>I11[1=
%n.[1!'@St7-lL;5%r_'hd[Ar,RP'NSV[/!s,"ZW1i5*D*Uo]"*-,<rRJeTSP^gjVNW[mu/j5<B6pXD-caCL"D.j=NUi9'#KH>O_K
%_&g]'\FUuk$65o)Q)B_*9n;J9mY(d88Z/GFgC7dsGc9*=`[,SLZ#VbiHAMXs=PGMdhmf3R#/dL]mFS=SOitaH5KZj2O`4Vl!H9L8
%8O[f['EkN*dY>d`Xb:')NM-$@TSo;m_bS*UeqG#aG@EIHG>4*"m`7fb($%s0pX7>]TQeRSpe.&j:t%^^+ij%rds5G;jD$&?)#0RO
%IDD7o^k[ICDQsK^G@ZA;O1I=<,$&eW0jgU&nJWiAN13"2mbW!Gl([s,Hc=U2/LR!CD0DBuW9ZlT$u[6Hp(<NqfOKLe9Qh0+3c$Q;
%(BOCkF2%oq^d(FQ?6_PeP8rEQ/'$Dprad,/=[[g$?c-!@,d"\4Z,h>Q,Q@h%U.Voq;dPRHTq4o8JcX>eIQBOHYHb.f%V(.J!D)gm
%Ht">A'=qb"(eo?]A!0971\\;KgofD@%)_-L/WIVN5U$fi]K+Ld-,&V0&;F'/#USAn6TSBdrk?RQa?bSH$0$nho:8c*=iKs\94B%[
%cAs6XCf.mi*m_e'98P$R534p=mCddb"*a%[FqW0M=W<t@e^_u!Qspi?!*,&!_Z@^"+l%&)mKbQWZJ+?+/YX6?CRo_GY(.<!e/f+0
%#5>MM_+)u>%u%k@_O2,[&Yc(lOjll,`FENh!OG&(!*/!=>.!*12r$[K$<l`1iLG;^?LA7*LM4Yq.'>*MR[TQ_)9b,DStYV+leuV_
%Y@sE*ek)Z3p3*GaNcn/nYg3.r\qLt1c7jA4gA_9L$Cl0H2*Fhs@k,1M:RV-Dn<Z_<"i?7eHnR_hj4Ms#-LfaT8e=>5]a[%/`A`cQ
%XbFR%@<WOE(f/_VJYJ*j]<hWe6nqV!!7he+!=?X@O::L\O\%tW9saGS!)#fD&U7+4M?_rloClcXTHkt?lFICO<IBhpfgAda%P#5F
%kT@1H1;p+:3j^$Jb[cin*FEq"=CareZTG[bP-S,+P]q_r?"+6/?'N`!'B>3[?D\JhXtr^\PL;VAe:n8C]+B!]*h7:rO:($6N1JBd
%.&J-=&tEH,-B]M?lMA`S++V0I$X%QO^>a>Y>i`rgh@DUZa0)!72j7^ibCgJcFp?_;FZ^nh&-t!!$*mRd*g#J^OL0>>`O+q54!$Qh
%,htB]QN1'W&i*6j!9SoS^oInWR#IH=XMJ]U)Y3#d^r!Y#i)r/k.M+FmP-^TVa1_)0+=TZfOsnf<2<(g*eL@Z,l<=r=?TAcC@^2Wn
%`F(i\Xq"C-iPAfg\M*Oqqu#lEmXuFI@VHAP.g,tE66VGu$WR,YP"DTgTpVVdOK^bU6m/kg+JF3g`30tOUYqDtGg[(-in?+gSJuut
%8$L8&[jZ7.X8/&5lTiC)Ks@RO.i-lIP-1MOARC$dH5D8QPm'*=+m1u^L!.2[)%.ld&`^(PnE'ff?o`D]*h5K.8YRtJe$[D`9=*rC
%h!(&mQ74"U`%\u:T^_IWFC8I05qELhClcrS;at^32!8(+8VU@DQ7X[(&54LT4tX2HLBh.r%qkDaY!?MQ(>*Jbm:iflqrBAF`A`dU
%^0;A43PId9>r.C=7rYrro;8LQKX*k[MBB9;s)A;%[=oOe%RWlNWXt[]"QeR%\5HSbTpFLj^5(^rHlgFI;aN^]%i)Wos&NuD2WWPm
%VKrYk_Jd#?.R(ECcd:7Hg)1<^G5)M0[LV"YFTko`O51SE*,*@ZT(@76QU=G2*,JWec%lc6Hg=L8EoU3pGW&[ZhK0E9OTQ6L%/F+0
%DRn:L^f8PRAZ]$\>I_`5N;M7YQQS6J@[SQ)&>VUJ"gmqb5^0K*cL=*3,h2:PJiIR=L_rJBa1SB#XG>W&U?\!AM1os=+)CTE[V)U^
%=.$u$/E;?,C#u9`W).*F!#+tKJ6h11Yc=5[E?I/9jC6eP4DnpJgTumOE,DRKT3hk&dH2QhP]TX<5_ob[c#R@0J5[gu%?fFUf@.[>
%Y,tV*a%12kV!j&u$-A8ri1al>32Ep*a9W$\b#e)0@5/B]is7V.0aK&GX-:4l']XiFVHtp,BLPc'DLTAK&8iBlhP%/"iMEn-%Ln@>
%-nbpIF&"i+KOJA@H!FU.rOIcIf9Xjs2TsQh=d$$#d2a!b5WQ3pS*mF8$!e*1:bZD]o6D-F;T+mc/XP,U#8u]9'EhVpUoO+1bt+2r
%^^iNq37'fFg0&9OZUB$TD].!cN8,[/j<ZMWkrGrp$Ruuq*T!]"5T4LgXK>e)5%Ift?,D8t`*7!^K7MSPn^["JiH7M+'&nRi5`@?A
%p#+t0.2Pc=ID7?#cAdkL^71"-(\Hpb"i7`=6_11SU%/KH5]/W,.md^8\"F;8CY-<@Q"e%QBrVX"bbib[@"ek6%bQSuL^iJp!P&W7
%-BV.S%o8$@AW\.*f!XTmS/^bag/V?Lac>>7Jl)UGd$3K='"T&]/W&goA75mo%jEf?[r%^Xd5Kli_c^jbiR?d$gV^ZtNeKtP6_di/
%c>JJH;d%Y#LfG*SNieDM0H`'0.7Q3q-;o^DLSVI##CsRFd@=YT?JjV(@rWdI/o,Mm-I5al<D:12,_9RtO[RrdEPpf+5Y07KY4"gN
%Y8s::+RatQE(92i'FuZm)A>ae/MRPS#a$Erc"Be0[h]:J^-Xd:/)lA;Gg#)f'87:^T?ore34/cMbgfT$%a3+j,Y;+I9;:O?73_pg
%T!s.-GUML]H`dWscmjs(+6)^D\0?H_=Zh/cP>4N?S%*>iUU9Vk'rV]0T[jJe/C,qlk4?JYjJN&-Rbo^t.WOn"rX<N6j;<(g.EYS'
%3.Bp,*8X'>7G!b)1;p]prR3[PMra6MA9K$'N(&Bo_s.DM3.q[Lh#HZpHFZ"O-!/t..C0WkYne98Zk7<r8)tB4>uW&q:'a/f2Ffgr
%+pA/OWuidhnHpCN,js*DG^Ea?l$FaJa'f(N+UL+`d?M.!"ulkjEcsqfcbWR1U9Im0oUOhalT>_(6[Yn.ol6CE.pTLW%emVo)Q6Gf
%7:O*2+PTLiDN>D5KHLjW5'LdES%obOd,u8orp06]R0FR*Z)\e3O4jZa_Mdsk9@I@$"9%N$WD`s/_]prUjXn1$%pdLU@5;SJJ<Rhl
%K5BNq[M)0K'^`AuP#7`.Pr(IAY"hIflsh%sR=^B.G[%dJ6uFmr<fM?/p5QjCWQ09bZ*HYLC&e_d<Q#g8_0<52YSt.?i(5',$)gC,
%3Z?EHKp_C"SdMVJ,^K^*,g)r0#ln*Tg_SA6qS$9pff(!kjBM(&.EC1TBRWA`@p3k&*sDWVHmSYO,@6)*Pn<Slp*!uF,,><q2^Bs'
%ic4<\89h>:EQn)h8ba'sN"khB+Gh3Qh>QK_(/!.)%s_AQ*(=(/0KI"\U7GhX03.B$*k4T@\+`F(Y\ob2=>P+-i[Q'\\\Th05M<'g
%[Lu/Y#sj@e.^r>'[1afjcN.>r6PQWeZ<4=3?NOmddnXO0eh&^L4P/\>5=kKXLG7/fe>Y8,ZQZ+gL/LZ>BSQCr,t\[7X=(spBPPWu
%-J=sCh\=<]DTo^-"b.C83MMTT.,=_1qLgp7/)R]9K<K]_X(&O)R+W$pV?Vc)??n0Be-FS0k2GT%bIkh+GP8iIfU@a0^7"78/gqa#
%Om/jF[KS'*B.&sSOpc7b]ET-&i*73[-VBj]"Q65H9DN#2_o0p)dfsIQLkp>iaZlR$`H$?+.Hn>k*_"+dn6UCCd<-Rag6qgbNpMpV
%RUmb&j1>qXbn)<]%V2FN@p6f:>LPJ1hP8Qo8Y.!J7L"kFLh"$Ua%NE>T@/g@Q-e<K6rZ&@N)fuRE(DB)0/m#]!c[Q(!$X3Z\6cG&
%ZYrUWCCoNbA'!8P*C#U85="e8!LU-a%_t-\D;N/sd)EUT>UeBK_Y\E^IuN;=XbBGPp$VA/hR0"6?1CH)'rSZDN#_:Mp?nTLOIOI0
%0.9sW@YeTp%,lCcU$2J*f+j_#!SD9slSd\bc*o<<TH_8j)nso_]oCg;)jC]5L.6`]E#+=&SHLtg-/4;Z?RX;6ql0a[YY-thg<!9E
%ciXmtJ@oF9d\ubZaXYpsEa]@fi,0EdKVZb8n-oG=s#e<'WM(?hRCcjp8'A/Cc>`Z\"cX*VRhZHcQmCB"F$52[WlZtYSVL]3$`:39
%7oSg01IVM4f7%Gg'QXj3],7?@$DkG8UI6:!h8C9;76O*d`9h#HA.'XH$-SHB*l*YSrBdH:jqEse;C?`#Ft:eZHu(:qlo>bqJ)BUN
%+dQR)J$OEt![QrLK<,>5ZdBW>4;m8^PNgd*`N`"!**6uP4b/3^ethU)8F2A#@rjEj>srD_G'(/3//NE'B[T_4F+Y\Uf;,(V,nK#'
%g`34!AQ9::_2t.bKS5"mpUn+Z#:3ZMQj6M5J8*VU=^fYnYF3GA6nnE&^o,^^BF`N@EQ%6>:!%ONG$Xb"7@Y>+X93V@j>O=*@Be*o
%;`KY]$:5q!qAuLWZMt><oN`2pY0E1!#hsQ10Tm)tGMf;'&h\DkV"]/Agp."j=D#DR6i#;=JHST02r%3S&t8ZW;ankIqK+H!$Z&,q
%)Z8jbFZF@=pni!;iA8[3Qnfou'NU%Zq]V(:!Y@'VpW%iu`XBWn8jt0bY:'RI?j1Wq`]&\W+p?@Hd=nCZfd%.M!J!ecR"/:\pU_5G
%-imE7E?MT$XT%'8or'fdNq!4]Se3S1qg+'*n[6c=6>r@rERX/7Nrs#.B++bhPpdmoJ.X1]rjsJ!l<Glee8_S/moei_"drWRDqE[m
%:<-q,H.OJ;>S9Nf(ZW@UY!SbDMn/B/8FD3);DHi_:-!'c=gOpQ+VA2A_(8@*R60d]imXe2e*q4A&[gKo32*RlUI8/Ni>>Nc<e,XL
%-^ShNWVr6PKP.duKom;d"@K.B`3u'F;BuA/(2Zq`TcHc'IT_V!=913EJ.aI1/4^/B:Y'lh$Da=C45`M/UXIl_RDjr>PEhV(lSt_h
%_2Q7T-[F4!DHA\l3*0B"<S3%j+Xps?\3U4\\4t@37]j_nf`@72`a^nM^(Ji:]&Y3l'P9:k47,33pkD7EP@a=k&BN$RAth6)TO[BC
%V?6Dtdm6mW9mmBO,gHUT'ArrT;EfJ,I3'Zsh!-N8(@a6cd^X'O"(Y_5SCX:bf`!0Mg@XgD&;^9MGPrpUEAh`/;!]Z@_f``"\0,D_
%%P`#S&4fpp^<_GrVlc83lu7JK$ag`q-!1a=GgGPFVt]N3Q#`)\gbg"7EMFP;c5IuSH;nLdG4!G9FC=e^/'1fuD/i27-#oL8>fXm9
%1FR-==(MpT4N+sqO/j:9bdThc8mkO`_?p,V04@=>-^Ob^Z8g[C[W%T[2A+*'#"Ks@(Ead*'H&g,TF8Srl#+M<'UptN"lS`Q44Kn@
%dh/V8@:ji,R@,UF[LdPs$Jm2T_a5`>%YXJ#P8-Xf]Mns2P8;ihY!D2k`O)b17h$V\jp9lB(D>FY4Jn\m>M?8BLNNb,q3ecj*Pm.)
%PK;[AMhZ$-W?*d[,4[cajgiADY/W%J&/g?g_sj0a@b0h376$HXgC,YIm[/CB%(rnZ>Ja<$4Ts*=30W$<\0NfaP(`X0i-q*@0IKGO
%;Dbg1Ql^Bg"N4ll\e:N0gUcSa)gcD+lX-Fg&HIOVpQ7?,YUm1H-4_mWS0Y5q::<Hd6*[`7]*$t.pe8:EMMd0KRK!f>noTT\!cW<-
%Ho/l$!-W7;M.t1a;('Cbgb]+kRn[-.&!%Y\pCRhaAteT)C+`iQ`'!-,ogL.=gPWdIkGW1J#]*LoMl8%A+GjkFZ@PVZn_aWO$RGUm
%MPCN9a?o;?@p+J8W;gd9rh,@*n/:EZXC5,L0$G6=Nh2q6bh;_.:TT4FittND*a6-'@<)GU)`hcf/*2Gp.K*p0Ng\lm/jbN-ZO1uP
%LHI3R+4fJ5ASBBi`?\/+!\m."Psq=]0HA8l&T1lF&]>PY_mHtX*(5(j]/,AM2<R%jB,na"TEgb^b3k5(];BHh_8)pU'0RapT;#8h
%12SLii`8[A@+p4X2$jeeJg3;P3(;_h1u'(tRlkT5D"VIj8ZI//qJn\)!S.u&A7`92Fj#k3]AcOqB0\N;KU^aY8@A?UF?4KU%0;`+
%M[f<+2^>H%.'b+L?&:.f`icn[iqk4+nA4kQ3Pq5ACh[27SS0f7X]Br'9WPI:&049DM>_*ZAZ%^@Wle]lLR4[f*ZdN(Wm_GIS*HRP
%G;@tpa>mBn^H(E_TN-`8J8bip'cPL\X3'>h!"q4:%Y^#5*_OE<+f9&N9fcM/hKCSC<MP@5S@Or/%oRF*aig9.QtpE<rg^J$#AL;K
%p-eTkOs<QO79RK<-,C_A1&Atn$4)/3coqW*jS[M[!hdTX-n\,Q!Zi&R?$!FWr]r=Wra&g+$H+J,n%QOk':b$UFYD?u7,,3e&I,G)
%!eV&+R0?,pg<):"nrbEPE&%rS3IDPVa;7,V$!O-=71Of,)ncGJ`E@B^;29(F$29B"d-c%r/7K`F%QH36?M/D`T(_)A"\BbDplJ19
%#V(NIU,GGG6XE-!GEtmZ>8*f-]CqebC,9FmrW)4EGBmX(i7,^cb`a%Oe@e=.`I9'Ci</>E^h'gG&\qjFB=mI&'jY6)Jf+=&/-^+_
%%Y'72ZH&,!pj3U;b0MrjBS,(+g^)Y%e:WZ>i?\lm];sA6B4(?>I1>03U$.A/+i=rfBu1uX&t"Nj&Ko`.hAMG!&+2d9$i0mmeAURF
%=9T#S?fi_h"HuU<Ll'4ah?7Q52C/>c93#!gZ^PWu0'r/EW86Uh&K]#h#M0d"UgLbK[`UbkBf"-L)4JKW,K':Djk@YHm0b72l8&n+
%`Y+'7h^.b_RE;#@%IE,j+i%"KS[qmk@M?eu!Jo'.j2>hLI9BV(3L9Pu?':+EF/"S(]+u/inrO#,KiHTB&9IA/TT\)`\-+af-;TAg
%rJ9MS-Z!8#B+P]pmi;:9="IFsTDK>8bS(di*<It_H`$-iMMAo'R2Z`Na)rE1*&'8Wklk[jf-jf^G7StHCptIJbs*o.1p%S^lO?;q
%7"`2\nPDO#$qmeIc_b6V?@eiA_WM7"`<^$t]1lLb6c,cb6J9VA=(lNY;QLnX5YaG:Y%R]'=4dZ_-'B3%aNB`a8DLH&[9`TJS4`fa
%mO$O>dYufbDD"S)GK^@$pdj@A`M5e-''ffJ_AeDSYcDDB/mct6LR9K<hHNe)-!<.$[[q`pFRu;CEkE,59qcg8.S=%>"QI-?*SI/P
%YRA(bT=&CQVYKM@YZNYG^1\rb'r9pSoHZq20i:$G8%Ydt\tW?.8*Q_R?E@b8C.0ZX8b5+m<<8SL4WR8=6q202T&it?-FhZMdGfjh
%>hT'AMmGC[37NQbgYmsI!&P\'1j$o-oFSKu,UFpERA\jCdSh#1mB$[\hG5`B@>Rg(o*goXWe?')_rgi3P'=%0DQ.)*"^IL208Z`i
%nU0-q\!*Bjq(a>tYZuA2io_Z:3uk2&,;:44A4HB6BQ?pnUG?=:eIFapnqma[bft_QpG5&n!`)=OKQuF;O=5[GLR<t,pl;D>Y_SW7
%.Z-m)#\gi5Wj]n+M7EXQpJ<&dPWTc,FtasW6b[Ba$.]!R*-K.a<$Q3N*"UpFMNG;TFp1Q.`1(!;OqaeV&Z.$VEXeK3OEg2na8TXi
%+OWecB?_&d66?sTLCs>P%MHkLH\`nHK%MJH7V`0]8mK?);fX.$!jNd]Pp5k[B1upAc"Tdn#:a-M-3C`_T1!"QJ`b^M5cfYT'(V,l
%]1I5\CoTh:?,"NT(!GZ+2?GP29m=:T9d-SgA:VX5dW["LoR:#&,!0Tge!(!cB$MOqk[aCf?8r%fUT\nJ.PPtlWetF3ludAHOpjqT
%C=6VTDMgFq^efR,kAaE%jr8PcWN<+-MmmNVKH'1c*!kd*h.t]3R>^M^[OoZr=OO-sL"E\WSJWBObeaG%p`BZCJ5aQR>R,jT>K):r
%`G6h-lEZc.]Yq-*[?A(9,nUYdV<i!]16Yenb(j%q*W\GKADb,sDAdM?>p[pNe6$r_$bXWpCN3QVRXfb`A<i'jC.R1sIUCW,S/h1c
%EB^ndRC+qIVrFR.PU(D#8HY^PKFe_4L+snj7q\Q\_$ns`feHs+;%GAoa==8*CD,ut4Et+V3R]Z"S"h+W)hMEb,6_I4Q<uBO<u$@O
%4h`uaZif%EnY"!VZE+V1@!^US:?dT\a@90!IQaU7rksrZ;G<Wl(%VcM=Il1B1$.N`&-GMi#5JH)fmm*th9/8Zoi\rW)5DgrMeg,m
%gMh;e$D=a>8ti13&qa/_G\gi6=C]</SV+Fdm!<,C\:l-"/+X^s/`_@;(!m7&T:i#JUPK[mG,-X@M*,D;5u1]egibi4GeQB^*hLo9
%KP;(C7]TuIUErYFp`ZN6<51S>.T*ng;O:=]67rbL'KVOqO_<_m\"tE`[:'XooH9NoQsBn)i?6]oj"Q6RW&01YM!`CK6;#*mCUb3b
%Y3W4fQ_^-!!=QNof^tukqCOT3"OQpKB"?;b7.coEGnK=B*+2F]&N\_08PB6ti@S=+pNi!1(Rr"1\qbP)P&nEiP$etBQ65o*IsC^?
%AL-8_)B.fh*9BXX9pI]tXT/AF2ar:MaQ+[%k>Y#4-7u,Q=-(qZj[>1W40KmWEF(r<]?-1_m>tgRmUk?4>?/DUjg-!Q$O+HO&3\*V
%TgM*]Lmp.@9k3pj\:u9#<EgVZ?BdILj@%"<aR*"#93jt(Sq0Ij1[6u_O7BdmJLZ2;gLH"/#3(Lb&%1HlWn".VMp3Wj.\bmNB%e'+
%.(,p]^">L'S$kj1B$Z7!k./CKq9lYA2kRB/6nBt5"@;%%BK/[:lg%l4ULQ!i[q"`YbtUL^J'q/Q*s4\eb#[irL_)9?+8'$?q%+^`
%e&Oe\WMmXWkiHt-%!I6sWh7EePbC`IY^oE7h/gElY,Njpm%%k0Rg)[o@YU/18:^46rm29(4rj(mWMNNFUF]R/1)\!K'q>_?F?nCN
%EauENa;BR.LE'rWg+b.=;D.'=I@tS,pt#,L&$&DR,+hf%L&Hs!OrLNK#q37E@U;3"f3^sS;aL4!EC+IA(jjmHj@'An(]aM6:/+.g
%%t>o["A/h_`JaM&3+FFGX(ajsp(griK?bfjl5+SebdfZ>!',6XZTJk)I<H=fEFFrqJO3naPZN[t7E*%SSO?=*V_l=da/R^[q_/B.
%_SQB^Np7I;R6E"7X]NbB7biU%q#>!q9q1I[X`WOjY0qeZ?W(IM(!;o!p*Ybn;X$gbYO1+g<EGNEVC7?W#;nqraKN?\,I#KSPdVRR
%BCL`kLKqd;"u_!c2*MEFb2bqr7]Yc]^+Eu]Eu+LHRY=[lUEh]OX$;n=V5u:/;$79C-*RI*QSIJ#Xm!S1qE7tqd66g:[mT[&m/00t
%0nkWq+V.**PAX(5C(?&;(?cd'rhKO-R5&351@-:0k&3M"FrYP>)>9*?5>#$1Zr5hpTU?"eqghEBK8H80$+a[K&]&ME4P^4'arDaq
%79Jr4_'bCF=p_9M@M=\b`[Fq@+G;([JTX4S%X8(U!31tc"=a,5[u?PXkCjRiJ8B)\BH)V%$1,@E-h(5(Z;K$g%U,nL,@!CJ7aXLr
%!cA%4Y3=k@O=8a!94H]k1:&\/2'e29_H\ZpX2+]kGd8eOYsO!BR1e-b_7V&eBHi!W:LpcMn<97@@j!PR8HpP_OXR_@5nI<EB++>:
%?;i:B&ij;,)^b9B"O>N:';+jZo)PC4C03a@#WXOm+>@%/cGG3oZ%JGa(]%h'G*LABV5=^OY+f!,Z4`mGV1'@=fI7u'(ru;G!\GgS
%)hDu<H!k$A(4$\=>*K8\3V:F6^'oHQ7'3[++qrV=VN4UY)G+21n>Sqm:=Su:r!jorLR2TW%tStDfXbbX2Ok4j=>2M9lS7+\ALc"I
%&$3Bs6#;8ZK]"-W4]*C)GfA4QKN2!u@fU$BL&aRlSIWgQ7a'^_Gib>Wd3PR$/:f<]B8&LE*\_[ae(c:IBG(bF!Z8TT3EKAPRRg:7
%"E<K_F]&('.QnDT'BZf)8mOrK>RZjJ]ajcp\m&&-dVB<[Bs\P!n^laEc0<npoHaiM,W:ZCa&KMYopJ-j5+Mc%4qPEN8D'@YX,bJh
%"?`V4K)R)MEXCmW.IKMF[Tb$9JhTb?_>@Xf4@5hf$\rCG_@V]o*eo^RIKs@$Pp^eko%l^K)58QF[Kjs\L/g\W@Cn2u#3<W)c8!H_
%`IEc>.O<Ic`DER`l60m\?\3!BL=4Q`C7Po61Jt$L`-Y<^0[c3Q"e"s^d0YcD%0Gd5-iu:4r]nK^1D4=@#ebnp'@Xk"$"s=C2c/5K
%;J;YLD00[tV*f,#X:#A05Sf:q.\Hp8<CYJJ?YC953-YZ3H[oZ9UR2*q3CAerN,c"d&a>rnV?S]If/PMM@pol3O;gPu71d36`WO+s
%RD:FR,OTqs#)L4iKfI$jm9gbh=q.GWl>.c9\)HW\g>SV.q^0<i</,om8s`,B8u^nhGJ^Qha"<]8\KOk44[Jf\jFX!)K0ra"L?Xlu
%Z7ogQ/Q,`W9L,*ZT0!JKY^e^q0ia6k:eD1\-^,hA)+I!qYk,r=?E-d'gBmhG6=Dm\OF*]\6n^kPT2#gTmq)h><&.2cY<E4oa7(g>
%'h'"E#T?K]UZ9#n=q?]<lN/M[buTAR.[35RM))::UHIpHHiT(Nie@Th;7T.(^,<NR_N.<71a%Ek%4R\nC4M#l0k+h7rIk^ig:!:<
%;pb5sQr])A%B-/&7`(0T/r#beHHDq))9tdP(fsBmT@VII'Ih#T!26$$"?4;]J4^#Er1`E""\PV1>`*`W-O31%Oc4#uj<U*$+WO\%
%k,NgY*EJWU&0gTZ6qg4p4c^9*r\+r-iZ>@6!bUU@^X]VD?!48E7ksE:?LOgG&m$Sn+m>+(49/-9>UbYkJk3*G2J5`nAet(]e)9G4
%BHMm?\s*[E#S%-a;M_YGBX1Wi1Bj9d_oEsu1hYCr.Vk06q&[qXBIQXfb[[(a5beEg,aRbq'G,g<,1t3$0HB4,3iU&o:SK6;A.83%
%$>*p:]e.L5Q+i-)?<bAf*XlNn<H\LS1,m@5_GZW81UUm=_PD<j#H&>$0BQK59EjY[kh-OTZ]r\T[Fu10+*8i[m-5I@&iEBWS9,cV
%Y`eYdZR>97Y2"SRP8l0lBE3=@>>R@-!3&?$'%&q("bAWuK9G;D)+1bdGnapt1?Ibn1#2FqSkKX3+U^erQGRMoWrRRrQ7%@EpsD``
%>:_pD#m#:t-'$naaY>7q8PYCH8^SAklOXQG\.+!4@R.7EJD3>#=:"&f#.>a(gE1R#1XtM$KX0n\[0`<^`&[;i;5RDQ\Hjb<NC%G-
%`$bUo$ZCA#^n\uqSmZ"FH5<2L3>.=[DPc-:_Ei@0l.@5@:t87&?&^U(TS6f<4=cd)2Zh,Z2T\EcoF07Wm4/a-^fY,2eWE4C0gn?R
%+0(*Qm+laoLeeY):bf%i8H_,(k<e#+d/<82bp@LAMJ!FM2oqFe3--dD3s@:XP)Ej9R=L_&8fh]c1'd;tlCFWm5sRp3bR'Fm,c;DR
%JfFcY9:[fV0aDi^>ahGD*ceLkFHfYH&RZuQKn>ZoJOG\6`#PDUP`(.u5Nk9]@!SH/GZB2o\:0"M(Ar2,2kf21i6.gqE:J%2FS'T&
%2l,BnJXmnj?62(\Fc'J]WLUJXg,]G&1NGL+59ciI"LoEOTciE'J]i\48lfcCJHBiB;Mu#i*]Rt>EQc1W&945!>9;lu*c]@HL)85J
%`0cQ>%"XpuB]m?fLHo9C$<7YV$S%h2O?/CSIDIJTkR(CW+Nq#(?S!5&*6RP,06lUR>FM:O,H]N,<XsO#P`0"8_lGHmC'%BV)6Hbu
%b/(1@PO1p&TKHh@G3BLNka)dfj-1q2pfEjR<&h$t"=]*M7\6C-nF?`r?n?LO&ERkj)u=)N%`?IR0e`csR&h;<*YAE!@<)]O/t%0G
%:Q@]dN,jNC83j-O^(-_DM0.g;AoMdLno^24JAJ6G#_'Vr9qL&/U<)Ci+%!0#!gBCf&.(h=j-#%d;&I[uA+r82+n-(1-&:@qhmnA4
%<'etF893o62k_@W="Za$"XGaX*Q3P"%R:r*,:a`obQCML:!gssTgIB=7ZPT6SoZ4)OGq^U#]"I4p27B*O+NL(OUshnB/"A!O@s-d
%7W))o[Ls/[HA^[]5Cu=a":Bl8'<&R^g9b7MK-$&7k^l55.MKBY-W&lh9AM*23>>GdG(N,Bj\4%(2aJW81?*I4?8tb0JKZhNTAbIL
%#o#C]&]$u!aKa/d.cY#LO.?95=%:qG*-*J<,r"DAL_<k"<tKD^9&NtV5qYct,*:D#;0F/a3De*0/,8.4,0?>XNuBtd-OME4Ap-OI
%E3]R#pc&u%7Mo25[B>q2*>@XV:mfY(,fo!l&h8kBO$a71`r8\O`tK9K;V:MA75AB*ED80[TT2MP.V7+L^b8!SQ%4ksIL4Qd(bs(+
%)#aYY4>K%&6B2.6n1$L>.!U=lV3h;(V&HGnNFRbkB%)cZj6.,\S,s(qg;ND`_&<PW5OP]]ei7oK0Q07M`Z\keNslh*-!0C8BKShK
%RfJEQ2FAq=32D3s%Q*Q,j5:RW<hegtRfi-j.UKq6j$:ZeEj%qZljZm"(h+JUd>?-d`\(aB&6_@(J8nBpENK@N*;l4h'uf\%+P\,*
%q#k!YV4K/*+YJ/q.CT#/m+?0`*17;B!To_EOMr@RW0!birsIsFjB#ntE=`;8LJD6r"\D0\`R0J+3/%hmgklbcJgh0j'*A";Uc?!t
%<CQura'+KM/cgi^rrolm:bb><Os^q%`22>['MTQ05$7eR^r-=H9*usT%RH%aR37>V2?P@D3/hST('c9K0K=;I&W_mDVBFk`!'OI>
%`.:0-"XA[[`)B(Dl,HO.QnB<?"[K^67f73s#$(Hf-l,TE&!)i>OJ^sp;6#ccFu[:$-O'Q@@q=Y8L_Jigb\9AQ:^.C7SW]L4N#Rf@
%bEWj:_hQ(-U?eK2!5sF2$%a$9"+/9>OPrHiq\+V)JRBA\!fa:sS*14JB]06WiYY$&V\0j;?a.BJaGH!)7]:9F(ursH.6Ik_YQ0@^
%/*QRL:3_kF*J"M%D]Ia51.o'C]6FAi%\WoZ(G$E^J`G8q,2<QNque1u9DFDfKL:IIb1@.*KO`,-Nelooi"!&0/3QME2cQhT_85(b
%^0H$U*:.l3#_EHp-DcBPAIJtW41fOY[Glc?TR`6c%>YOf$)RdtSZ%G?'GN[7o1b#F2-!.*4N?.ogaQL/@XnSO*A;S(n0C#QKElDI
%D`EFQk7$1,#&`'@VI8>:h9](OE'q-l*=CSpnCrN05n((m0]6nE;CWKXJ-RX]96'opp_h/B4M_"NB_80PH\)5VS1UcIi0><D;ZQ=0
%mRY1o7Ko`CJ&AH,IkeM$*CmOgp,=m>p_\$+</Lrf6N1SLTE9Tjb,b!@hb'9OIOeDp^FL6b"NqadOZ%Cb%5Y;d=.?H[Xbbl*0E?PP
%;=M;j-GKoC[qs4og3:N?J?TThDc!kr,#5AV%GEr_e@Pt466?mo7TeQ$k7Cn=qDK0clcTpl[m<te$r:<9mj%?!1%mH!I05o??,@8^
%D\,h[!s;BH)C')If!c:mnHm](kj7LY&Z"lQ1+i`&_&5SgJmU(fHpc2A&Q!D(+;.r#>%#&fVk-.n-8=="6'9kG0]*)Nq'Fh5A!Q=Q
%T`>ajDi^il'Z`d\#/6GcBM1]_!^l4M&DrK[)\h8c4%dgqJ8\h-'`U#LHUCmC7\:""[s.0](NaSG;l=T\&_u,4+[X$=G$HJ"TtQ#-
%_Y"&bgTbftJA!+R+A&pB7MnY(O\K5s6'e;P:^3c4]_Onc`B6\EgeD?7"nbor@!Y2Y#,YK1VDirOQJ-Xc"Cf;GQ!*ZeGtu:U5]:=e
%.`MV<gP^b_n@To>!qXG9c5S+G5r:aL'>aO'm9neb1@l&.D[jl/TtDP/%N1WVGsc`\6Gs7"2ZPYmF=0W9W1Wj9RKROpY[WkO61XGC
%7e2S)/bK2+]cr8V;&pJeUCiMOhGeEmF<#3-n\__&!V48*7a.Wp!-uK8`C$LfhU%@W1Bki=et$QaNBl>k`<69oj/1Xm@*W#6!:t2o
%>6=AMm7*HmqI$&//r\hM^D@*42?O_DVVkXsnV1.@-Wl+64N7@N:H>^$`u?0W0QT[%]J2#Q*Ck_AN;uP<Oi`@Y>Ta]U1ZN`?6F#R1
%o"lBAhG7Rm0sV"'N>]_T@qnUf*QB%f=N3NHnG+2Z!7OpO`Z([j&c7l&]HLmC5U%R0hAEUqfZXcaD%UJ"djQ'Q)`B*q&5Q]H0j*2l
%NoCKN"H-(jDo.qMFU?%A=tZGD.,GLg78?NBn]&X_Zuf)O]R`aYT*"&4Z#U+7bqS!F^caoun\uq2X[[9BOTG^o`UO->)Z-ElhCp\&
%g(kNDLd/q%5m?i!#V'qmN]>ltIT_[G=UW"r7QsEKncgTL!mZfkhI)X:F0XYJf183>$KDT''rg?YJDsk0A9Kbb2n$l6@sC@*eLi"i
%=$\&I!,j^WTp]%;]O<-(X>\&eL*S00'E[6!/OQ!7JiBDG1\/'XG_=h;C1&fI2[&5=OuMEFA!E"OEge#_)_/L1%^VgP"+^GM)8$o[
%$]OQ1Z+Ih#(s07=$56S`1&+(s]<OCZTsTj$h)K8lh@t!f)6Nt:d+sceS>'4]Oh7ZlHoQk,"IgIki\G=/(5ku<U8)l6eMG]5g,5NB
%1-H:_2\qNgE$'f#[MUu4.8>e;#mgs@@!:!N'?O,#0tRa.cZ<MuXDN`s'T@o;GUrhIJNSF6faVK7$YROu,XAaYJa>jXJ:2X_DBr^]
%Q9]WR)mDAS5^!6`MP<ig]>:k6P*/.TA,6C]*!g(69SjpQ8'#Sl)8X+)_<cn-$j&m3b\m>LP]8a9FsB"g,S_1XCut_'!U[l0%MUrN
%T\Yu)UNkZA-=kDp'$tNl:fYaPZl=X4.AVhe]<O[:_Z'pW2dB](82<KuVD)5!X.XWG_oV&9>_ntW8Q4Pb'Rm"',m/@,4KdUc"!KAp
%G),Gh.Kut1Cc;t\j[NXiO[:A57bhl<nI[gm(U-o]]G'(<1gD3=S)AIb>(n+NK%ga!5cuNTm7%E`0T=*/7)g>o7de:A.%uuh]7E3N
%3$u`&=PX1V.g3DP'F2YKB'?5LEUGo/2jJkd>]l8dQorOnK%u?3No4_tjDGAjB>0#6h&)h\7tcH*O[<\h"R\`746IfU"Z(kr.W.2Z
%P<^3ZghmJqGEbeEL.?22Em4SV?]\t#.;h)eNs+Oi^tnM5-l>j4]?)V@.Bu6r',X4fhma"3FPuI\J@ip&Or3RSJ\/&8ULDqq1:2;`
%EP'UX;[)N`^U-_#UcH9Y7U_F,m@s*ejbkS#'B!b)+=K<Qarc2s6j^,SgPp/rQCZ8@[i6pB<1AM[]4&UN79"9=D3Ps],AoH;NF?@Z
%i-&Tr8;_1lghmi)Z)GJA[i<F;.LL&P;,$>dh5a_sTMY]!2NlO^^tmq+V!LDKm^<B;K#JHn)?eha`7(1UG9]+WAl@&mK0ni,\/Qh1
%G!?#q#')1%W'RpiL.b>kE&UY@kr&Te_b6uoQiM>_O-GSFN8"do7=e"rYheLU`=snTm08XWjJ.=J%K'$"E#lJ.%$'BkAh"p;;$%Wq
%G,HHs8gA.2:^pXCnEp;YJJKtRG7$Kt^$>fXrB1M@SV/jlZc#sI;o%h>Q-pDN)^+GT>M%7\#%cHILu1o^<ohE%67nVr`"f@X#nsQ2
%:1^Zt_Df5=E!&3<V6Gq]h)TNLLGgB]Gm3K!h^:,68gKMdS2c[45e6uQ_o9S/U)O-V).sW]VdSLRI8UWfJO">b7t>K%NZ>).cjdZu
%%Z'%a(W0I,!mdF6HCCLJ!t#OgMI^[D^jI:jck2`dd?k$hn'F7N"LK@.13^0c?TA1/!tgTji,SoCE0^Pd$G`;caP@l%4.@;dLH\U$
%QpI@<J8t_m_[Io[gkfSXL#`FW/#&.6,^5PQ4<SYHA0&OH$QsYV!m6,8%3Vd?nM#OS7Ol<CA#KAiL\60$N4T\CX>[oS:8/U['K=Zm
%WGied@ji,g"Ge!a;mF=aj)BVaSu_o#_[TrhlT%^:\?SAFXW<'V8Lh)TE5R2[j(JM1NPbgp.1"_uWKA,*!&kHcYTNDE"X$Y#[kXp=
%jGpr;p=$je[=kkoDeF'!$.-,$LC*N05ZL^R1BVQ./f(."g-mK&:11P(ifJM(<_64hcts%YN-Pc@NUW[*!/3N]8=DL_DANV%R/h+@
%_>"e]D+NtX&#%ou"0OUi)\]aKC=qGmB\T2(UH>$_[e9A$eomrHe2H7F8/Z/9?n6'+RG_m__4M@-D9tjSA>,5!N8NgpKcObEaJ8op
%;%I/jiW-<E)OA0OpDV?hNeM.R!j`?#lkm$tl8h2"Rf*A$)t$k?4ToB/"pSrVP\j6UE,/-4[bE&>U.%AVEFAR("_8Pq&;i_^pY6Vt
%3-"?fZAf\,L%3<bW2,]!m1YRu>ZJuW@?>?]*p>6kODUd)<q$C#NJ0]1(1^YT)3HCT'$0dHjE.J$eb]L&7e7k!M+p7DOc4i.!jYO4
%8Y8)?2OYSam`,U=NV5&bC_DhH=D!!eK5:W.->o1W`\r2Hb.JFImB.Q>`\nk1b4R$k("dM*Z!qMo"_SCs4IS\5SXN%dgI<p+JO2&q
%%'bff[E)Dr&DJm;MQdbMD:jRGM^8qh+;%LBg]V)ubJ+rq!W*ThIt?6!=H>d4Z4=-&O;VLH$Tt2Z:E[)sJe;l6KPcCc5i#ZV[Oo@g
%1[4sK,=&%YZCM<=2XFfYKG&rT$nnCj@7Jn(AZ!]=$,SU]l61D@5\rg9)St3M5'j%L:/cOWLl[bZ!2qZ'#k$?[`Fm8SShi[a7f*d<
%F+Mq4q[j$H#eW&ni\J)';'S5\@B%lqAs<\92SPC?&WcG8A.gaV'["0HL2;j,Y?d(ETFV%WOA1C_.`'^hR5AT2f>d/$7kiX;>oO.L
%OKT@:+p\6=Dj<S'B?l1#!,DZK\Ye;"B?B][=R@Z;BLLATeVHi6Zah@ifW\au"(EE[ZP,msbVdBS;*/D^+_O&W!+\G9d"&#''nH^i
%L814U6U)!K;..oSjbsTd,FUMUU*3isTP5c,edD]27M%HJ<-KbXUc!Q;8K7LD@'l-mBI>4^LkW^ug)*M7iJNS%Ja&m_NF3#uU17k(
%&-Wsg"[X1+KkPQ?"RR<dHP6Br`0dS>L5<Q=5[QdZ/F_=9;bY[T4rZi%-ngt8ZQZOpPJ78`4%Ld<"?RR>P7X!JTX1o7)ikX95JVCO
%9<d*2T1gXLN1(an1e8aq6*8!TgBh=I:alL*'C[0j$;GRCH4?!="T:*mAOk$1;7,]2jd1bC&8lOrQ)t4V"=Y9)%b,kD-lYK[d)e;a
%abEA`'e4s[N`'"c:pM7\N+uXX+PBW=.0Ln8F9(VP/A$<?(_LmI6=du.K6@hmaG/Fu1LrD`VFJkJRf[,QaH$Lp"Wn\<LHAc!YotBn
%+9]i;Na5)u'6*:VV>MNIA(SYM^`t`q"A*);Y<ZS"*[Vd\";r.%1VF>lO++MSB-b">PoUDCM[]f7?&-Bg#7JC^#V<FZ5SOqP!n5Ng
%3!$uN=fPma.!?>q;o-DT@X0%=Z,+CHq;OuZ!!:[nES@?PH*/pQ+gI/g2@kAW[YRZ%d=No`#0):`?t'5K,"dGp@O(jfif"-i[aj(i
%'27bd7g?p:$K5G#.(6OR!&t/$7\C>u3s!;is*%jY-`Sk]&.g!9JRYCaL]W?^@\_BiY<.<S?Bm@Zh=)H&@Y;a1\1V_j`NBq!.MNO8
%J-N7WZ9VlOKOG`C]15AB6O<Wk!f.9ga*C12LCMS'QYZ_YNN'g3X[P)5b)k2+ED:W"&=9W*&J2ii\u@Lh#YkMG(,YBoK/^YUUK.t!
%8&If]%Y>&k$ldHjP%NG\XjO(>nDF_0NJ$hr@pu-O*k8N<oLX('$5PNt#WX_7<f?!kRh6&J;cp!H0S<fobVN9PAM@qs9Ydmk8]$;r
%0Pi_G=IqgpYX/6qPcQZm@0;oI578;d:a"8)TjZM$Z89GlO9>sn*MQRA(,eE_:haKm_T!A$E"ad=*#gXuL;LB&@Rd#p1&V8Ynd'r/
%eA0$[#iH+>aGh#D)qcC3i(TfJ;&g>+CXPO#V7.rf2Gbg%@02.BH8J[?&hIjW3J!bgQ"^rJ:l8J/_FDMuL")g#5oHQ<(P0FM2_u3r
%)kjL`&;,3T!elW&'p\`*0Pgle$[gb?7Xg/)THkBZ_aZ>k;@*Md<nI`<g&qg'@p[OU`aIFin-j`9W&S*/7.(Wo)r.@(#RlCr&M$hX
%9;&M_%=PSi'K0E)UA73MYgLdSUD8GtOQl_"NQp=Q_HB=]%^%b-Amls$coGeV9ouU,RS=X7N._Wq.4G<"Kah&gZEHuqYR*7g\djFR
%Z&<]H)%%<3R#*_P_PVS)loPn>JVbQ(EK\1"Oa$6s$6*jQJrF"j[E,Y>,Z*-lKbDu6#_c!59&huI2U6ga//S^5ls^AH1.#COR9rQ_
%fP!LE_(cW^;UEE?J\hUH5qOi+2R]A6_GJn;\Re1l%Y]n"&OG4YegNp((9U5dhC^*Jd'*a1_dUG5aC$5@f4]c1i.;ON)`18E&8FQ[
%HC;QW&!RY9]9<C.)c]33-"&]KftLBACs/1m'H.3i!>s3,5hP;@j:Wk(iY/;V77Uegi5\5CMf>oJ'hR(d,7ZVciU_p\[Us&7TAX*e
%)cW4Q5hHc\%<[=-#b,WV>e5OR%Uf#\>U@#b@3^H*5rUV&@AEE#!Aaia)pb6H)iUVN!f87UKFNTfNa4rf7S=U#PY@1CdE[E<%0D6C
%'Y<6/$6'9c"Yi>Pj!p]D?(eFL"]+6_)%%>,$'a1*J\jk^Z+t&"Pjee#iQMII85!rmA35L^`n1qP'ek_$3.^i?/8R/X?jZT7(,h6d
%a'GsSOb/K;=P-0\nB)%Q2YMq=7"U,P7Mm\>/m-b>V_NH'$6(:!a#-08fZ%#_$AFIG$NdpWTs-U]TWmt_X/U7jD#A1iV^3a-+Ocnq
%-u>PQBU:tm@iGj0RQt:+)4+$iYR0-ifT(ZF0p#A#APE!=fM9?:hOa0$6u5?/YgF]V=L@L(fOu0.QD\-CR+mSYPCdc`&dKWX:;O/3
%mBQi%9#QPDUFK](K\`U9p4ZM-\6:n1aqZMd4m3j[j\8uRENhTTB=gtWCfkSV+JgL=M2TSP6*M#l>ndB&Yshh>YRBJr9G+K:)]][4
%RM5Q[rcO>T3.\gsB]U0T,KsW9^+PpO1W@(_]K(r'@dImc0@:*u2$CF^211"'/O773HjrASaQs%'g2Uls"SWgjKXAk*fALp0V1W*L
%&$,OQb\P8p64.uIKZ_8R#pBG)F>gdUpc68*#Q9DXYG'#DAqfOfX6@nThDM*B+D.gm>mgXt_HhL;&3`ClL4Cp23=+1n7Qc;7,#HmA
%:UPjsmA!4C%!1g4K!V+TUM%c7-'2p3N0@b10s2\g!R#3c`jKI'P6o/b&CJrW#hNBL'a<P7]O=pgHNJ-qks*^@G\ce`OB0/$$'K,/
%Iea-%3`Li4(MmkD)HPahXcnF4:6;To@h],PCP\->83MO3L<:#dapG(j@Z<W=Xl29.W"r'BkSW]9'1cmE[AXKD:IljpI-55L["\QI
%gjg&#CFF4ZHX>X3+j:/Z90olg?T<q@'/43$dL>6qJ-MPFnk*l&i>4%31kDn9V3-T?@Z<u**)aVWL<$ODblkp&$oj^8JP!e2@hAm\
%)WCi>(D?-9ehCG4c"?lg%&/Sh[n$$+L5/aFL[H'@B?VfL2$Pf=E\!jP'gjP[[HPuf5fLrB6*=7]!!05tJk7r<XiAdKSobLm8UDdC
%UK2_-.[Zl06d-ucM#pii(s7Z,.%&PI+b_8)eVI?1RL:?@7tC[S^hP!Ba_6Q5%91Qe(V"2[Z9bO`TN/naXMS&NIX9(E,ZrS>dNLHL
%5ZOQuI2St%>UF.Q':`ff$,T%W0\)a^KVg0J?Ag`t82XqP&>gmd<$QQ+7ZiZIeV`oC&Cj%=CQVnS5eq?)#su%dOoPP[%=ioK$O!)*
%n_#;Ze<!QuM3j`c"O6GQ,&h:`q!_%_WL\\O$8aWMKd/OO@ZH:A;(&m'i%)et6ZB#UJ0ba4QJ+p4e-RUIP62)H5XDB%ln?ASNl\u$
%+fQ],aT7MB/e7M=$Qq=nDtI.,n>ISmqO,_%.tO+O6^lE$_-2PIoa)OZ7;&]--l@*b3q/"qSLGk.$&Z=MVR;MG6/Dmj\$c96F3Ntb
%LUs,g``0Ir.!dR"'SX+@o^XaC2.3^tXUN%=0!#9b!ju.kQggn5AkV*\ZP8p;oP#];G#S%t7+ih+I%#[;'mgj)%P,oTk\-+V9K:gT
%AL[%(ljq:=HQ@;KZJc@Q6=?^"F0c'<LB]a_BgWn_g9Y`ER+"g+"G*)_9Rb"8<lA^npe-iuMXhJF6]p]Wo>tn9`?hZW\7lFS(UWF_
%[KbL&V@DYu"LeLlNA`l"<$5St@%O3^=ok,4J5da-NR,Il=)!JY&jW.jM1RY!.^6[7V#XURiMd<#dt)po$8sKgE/HLn*Q+^LTVfOH
%6#`?Q1_!h9<+VMLVPE4g:2m'21'H\UJXH]n&9>K?atsYb\*3*SFDM(mN+m8/@RQPJ9S9rV$5E0[SLD%gCo<'8=6-:g*"<(P`P&5>
%d`!u+&JGbm2nBJO>qHp>VV'<^`B4aKQEF,S7A-IXAf#N$-HOWcEb.fCQA0K<Z41h1p]L?q-a;$qE$9(LPqJRUU1hpSm=Ems'2[r;
%ckf;KS:@Q+dRoll8deW2V87G<[6t0G)?Q+"PFg](6U3A/LmV?sUW*q8FT6IdP8:0-8L"pm/KIGE$TcH68K&eSKA]D?7?o)fZjDaL
%&>TBf+N[6`GX7J;&k"%-d5eKoFb1bG#[^PaR38;`<,iHPBfJTiOK9;I-$!1P5Y*-9ViDmZ`c<#b!2POgAMJXUiM(:C+-#sV;d=p8
%##%^2RPT7HKU/@YPJO";L(qDa"?TfWaTOXCd4`lfa2lY^dAj+[d?(J!7:rkQ&lP]5JW0kOj4IVo;599=Hj>YNkDE3^BE7'^Gd[oh
%F<0[Y!f'-jD?NC?^h?D,FE%U?)A(<CL*gle&6hC+.Z>.&?e>-#Yirrc[fR9R2K;>eAu')W:eZ<F'J0mTMA$GO_UMnCM6<G%OJae[
%E!A%B:f*meU]Lino[m$]Lb@[/(5V0@mP0EJ(@ElqLPF_mJtQ_'BL$?cO/])(3A>^<"<ADT'+c*^W8LCR"#Mihe`XMs$k4g?KQC^4
%B_WUa1`7)j)lY/D_ErlfXDfXP!E0m@!#&1BE3^X9joc>Y7EXjn9PDeZ&U.2>Tp7;tL$hopKhdRIV3o2o*a;@1&l<8?Da;:*=fm7n
%Y%2B>KasBb=Jqh=JBnu+A"l0toHonc+uC]INm4`_(CXIbLiEb-%E_o96A9[PJ:I^]":c>8E=l_^d%CEYM+Rq*(j$O$nc9.[EJTrj
%6)0a4D9%5t=BY*ZTV,/@ZaM)EMe9%]d&9%(]EA?HH8`Xja>XX",,R'@5X;.=#mrNIFC@I:6%MKrQKgO;oWi"Lr6AlWNIjF127@Sl
%s"Ed>5Q/3DqNpM\g_1;E&>">jF8])XkZo.nd1Oj"SH$sm1Ap7]#@G-^^D6V"PM>t90=7nns)EI8H?K4'OZn)%(8!ee^b!4sq9]HA
%ptmMGZs!<>qrs`4p@BIZ5%"6^s-Ud3p<\"j5Pj<:/TY.o7507f$R4t8j/i`=bf#\kU?)a+-fa6&M=UF!O6Xp^0=9i8%%l6[8r1IJ
%90snult\j+UrKU-D?)o.PFj?(!1"peG,MSF$k9/`VD6L_C68:J%UMgQUAEQ!Y_sG^T2#Q0ktoqWHBTd-2\,5bEt?f6lINFm[TFP8
%Hi,nsJApsG:[B@<;EC0MnW=0TGke%#?;"#B*i5]s#PpI><tp:`l\#,W"F<Lfd$eJrd4t!EL^l%6,[q/i]sIdc8"qMeH9h+m&G-S>
%':W+,K8aY(2#,)gA<A#d7d2cFH"2#S483]FXW@#<:</Kr$,:`e"5K0g*JedD(58Xg*j;LM"FsNDU_$YpJa[$E8"-;&)nurB&;M;L
%WIfqd<+M_-(Sl$aOh#HF0rkkL&=6u`:2m3(.p9moU(KWLAV,?]*dISJLUT\?Rfr3e1B.Y,:]7<'J4R_rYnNh_+NME5IP3Yr.Q@'m
%7u5gQ4R@7K"W7a$&*3(b(-`CZOUm7KMR?qU*ek]O1du'%kbg`aD'iaDg546Vi.G]KPu4<t910F0lhVW'VZPVi_,L\;GiL=E`%X-3
%:X\kY4pNeFSRqMBiiOfMGA:k3F"-SM4'B@Nk)&;n=rQ*SlE"n\&4*8<RnRe<!_nuo#s'`QZ)n6EnYjg%Tng@[MW'[#?rXf#!RHKi
%;IWh2*Q.E_U'Qu)=V7T(b+^AA(QAn7d1SJbae;9&37:HAbgL7g_-!qS4!LOKgFh'kYn&/kk;@c$GU7HEL#+(\qGr`U64=&Rka7_g
%DmQm3oNML1;5c5EnP4at;5U_:6&al5^`(X0L"M^!@iL3:oMQ]Q'6`I-J]P)0D-s@2>F]CnqQSncHY>>9pdJ<j"6h/DXX]Ap:f=bD
%L6R\%FlRnJ0D3d3;ki2#AoM'X,=0a!Is;&VjGD6iZ2BSkp9E)5qWY1KE+"+to7!iqm])d)gLQ<J&Q>@K$'DMG0G0Fc\l<`%4_0ih
%5Qm..)cpBl,e/,MLj3[O3j%qcL['bU!<=[\>FV^ue0Mu/=nH8T_k1lu>m]>>d)%k*<uqZoS>`'q\)9Wk6em1eW]A7-0Y2p`!;V-3
%(lj@t2R^]0X*o3uVOEc)dg9DO5\DJo&]8>H!&9Qsd;@+U"/mud)%bGmkrq\b.9drb]3%/'ES.CS,#V\`G32.FogWg#$P"$u[K@m^
%+2VBPfN9[<a[dmuCR)?PX<CS&$aD\UF_PM6Rug8e:e7Li$-[,OpD;04L_P`QJ*<(ej&"hi=_O]gNi7nRB`rj'ChppQJJrh\A.428
%\WP3'UtcrQ8WBVY#>YXJ_>IAG]J3I$(L3!S\;J@DT^fT*S.-RC=<i:r-JeKuQbfAaXo)0W4=#7f@Bd$,2eJ![6-1]Q@UehKEnA%q
%A6d(l==>Tbj7L0h5/Q\SjhW3EZ]bXj)7a4ZRFg;GV,Op6AZBfX=9ccJ&J:CcE.K4e'ka?N/+G_i+'D.QKG33(^/e[,WQ:`\bl_$A
%;9hI+*Md])e(_ff+YM#J4MA/f/dC((:=&,2fqnpl5K<N\P6YL#o'NZILCOi58K(p!kn`hNC$]*h`5rj<G^pBC<A9'Ta=F)+3BXI+
%1l*KQY&SVoEBFgT7%?[9C<J0GE0W%$,Xs:n6[sDr=Q=jEZ5%lT!4%r?cqphM]ATk<U9>c*i+9kqSJrKJon*Gb6rHTJf/q,V"tRJ.
%Fpo-EiR\fYS<^X=Wl1`:N43J#faFW8]g\tNI'ZhNG@7[2(Lt)h1J<f<cD*lR<tQXWcZ4JLnpJQSL:h[<a2@XAB+]7r?D"s*<BrL*
%Got]+4`:fDZ4^*W66)g=CU6\gWlS\PMYK'*`S*&j)4ji>"-mMb]R5`[>&&H&p1RNt>V^[PE-O-([dCa$`($Rn'D)qA@0E.p_#,==
%cI0gD%\a3:YXY*16CruVP+nHpXcJ:83bb"a$8G?tf5bBK"#+L[m]PpS)c"%d#K1Lc-Dm</"4WCqT!`1o+gPu)]=(kal[Zo][0M@#
%6=S5Ki#Cl*$`'.)BoHc385)2Q0s`85^gth'A#N^[YU#iC">jQcd'B`f/Qpnk=Ag$VYd>#j8d@1]Uru&VY_=E*&J:-seuj#MhI,o;
%h1?u4/"m2\R@g.'i'c>OW-;>Nr(40#!cL(_Pnh/d=Q%0QX=l)BHRsj^AQbd5Gh/55Y]:S3;[2M6,Fd!>ADi!k7l:_M6'":o"\B^`
%aCLeSq+$+HU@KGnR4p>1(^eH!?>OhI>iAdf1_>7(7!t!uQHnH_8qBMP[HegXLbP/VB?$lQStEL0(eRhm&$qCm#8MJV(1l\QaTg4D
%VAF`5(`Zs/d>Ga3i'j:@2T85uU<s0#rpn+/g9T:<(9)&pK>hAs@j%BT<VZW2P#Ys.3_iFqA<CeuU,$X`F_'=682Y,0K3li(lnDN]
%APdM[_YU93h=u,gA!Nb1E+U(pFK6A2%UZ+?@Br59l%V_tNe_u1#acHN2g*Zh\q.Bj'DAlSoa_W4RY=nR\driqVc,jsMMNSeMntCe
%p'=G&81]H?MH<ZG6EYg>Q6qKJL#jMQ810N.QZQ/+jkV93H;ik,^D125U$r6!15'XhT"c_ogCC"MHjr@Ras[?(HU-lE(Yi:N16FpO
%N_ngN@hnX_VrHc8(c9j"k1=hlcUIS9T[\75>tJd(.ro@`Xjb%H=2Q?.Xt,Vcq?!B0o:IujXtE[N,.gFr<\sB<=H(0\2jm2fU-'6#
%XXdb'._LT<JAS`%DlH\jXdZ2'-$Y&Z)Qrs4YF4-X&@n$c=EcTni'[k;)Lb@OQ*0@B-7Vq+`R:]AHdJ-B3P"h:n%;:u=0%nUj_"VH
%Vn37up5_(]\GpBqgd=XNHuE(gV3;/\d8s`K/)p2d@Nhn-T(j$3Pu(uu&B#P5dnQZM"<tH1!%a!QMq+ElZc/S\Ad"rp9-)E&l-KL-
%KAIjZSP)'Z@A\%N,OhjpOPPY,HIeEl)P.k5U6X19\4l19c%Ufh6pqZa`u3n65YPogN9\=`XJb(M$<>t.p8ka%WR>i]Whk:)[!$7H
%CoC\R1@pb>aDY-PB:D@7q_&Ok'u!fjfp@5V7EBDB@ok/.g$FeKH_-%E7DD7-#n_UQm'uiI6cb;.(0RO@h6>209P\8q:/F'dJ3BSf
%&9E"cgI'2Q`*X8EXg)tH!+8&]fE@7-6tZ1o*U>d#AomIu$/MAB+=!%%_+G@?M9muUOm0ffU%18a+"LX2CO>KnU66`b/DF5;&Ne(Y
%92#T%1h'rP/d<YsV3s8A=19[8>gtRe*:Q!HZ%s[:3em0$MW64G4t)5i<>@[$^]iE=XGT@h3sg^.e1m_MGH<s.SN!eb!^n]i@C0$k
%dkU(UTX(l79G)IC9'AI<I`su]+F::a@]1+U>r=,*A5RL^Cg3]S@3i)&C'qehqXra\ZCm*:!bDe+APY]!'B7FkFFm=$f2^t"#jlo6
%oMCe4dVT=Z#`g9@ksUhh!OYl)V*J[*<n6%-`$C=2MHh0S%M&P-JsbNH&-YKaZ8etm,s)QdL[$aPjT10N+L7>i7Q1S!<ETp7!#>f:
%/W-*Nb9Kh>3@^5=m9/u?+tFD+(]%@H/Q3;Xi`D^8?JfJ3Pp&gd1s4mm>U2RIo,tok;=C)s3(a$UUCcGIHLV.4D$1n7$+.hN38`qM
%,u$L6FTD7eTKZ:HbeETt?R\-B5L>*4U9F"3mTaDaZ1d+`#?D.n=J^#795&GVa2:Mlr;^oWqGO;=Mk49"3idX*N(?6E)q`E=bN76F
%Asf-^a\C:"U"cCuN5Mt?+bMd`3]t;1lRC#2M'`Ucn8u:[O%G"]`faV7g)>X8'].3h=QG=uaYU7aL2hH8j+8aK:?_16k>gB^L[nTb
%>&*,Xp[Hf+&;JJi8\bseO1Vgm%AtLf>Gjgo)R+j6]k]!hRhoOog%h1Q'N[Wq*&3U*,E[hKoW>3Y#,3V7[&P]D>uNW_'iOdnaHere
%J55k,l57)4)$inTgSaJRnXMb_FS\`tj?io4[:IGa@]\!FQQMo<[R.E'g2c+T_-C0@EB"=OnC0L@0HHQ:/&2<s9-\u^aK=^3GYhjp
%ajY_2>q:VfI0uZnbr]^7bmUM(<Fkcf(Xc+[5Su+u/8$KB%L@hk65MKqi.4;aME#bB$uT!UIurO)hOU[\!U,n=</g!&Ic,'."AI:c
%JYPDOU<.Gt)YN6&`DFJ46::d0d'JjmdcDaFAEUJ-O/.4p"t:g,d(hV3`o]P+$5k=E)[H(.Q9MaU2CKupUeV1pY[Wbq0-Zd?)$2@b
%nNfm.V(Fh1=?p!=XhK#LeO7>L"'Sd7HR$\0&Ya:Jd)&n1":3qKHH-Q\GK(@\!&SJpJY%rSa#YNbEB)gKkUGU0HF6lah[KXVZLhNR
%g^!rUV.EI@0_R3;6LL3STd/,"*soO:n85I',m8X!jF21CZ$5QV3t=>3<,(\Z>bb+,.hJE$Pi6KHJk?3.9UB;uU=8-jkj4j*8X$<!
%XBQf/*d9FPYoEb9%::r<,!sjAb3RE,-O'hoI6k4YS&tDWh-*rXYJrlLI(%>CVBD!KE]!h@<[NYLQ`HhE#fNk%k0,E*'ab]b-)11R
%^qS`^$)#!H<!2/V@tludoEZ,p/&9*U2MkFN,*0-Ro3*sh)$q&`df3hOQ;sk67_?mkmoW8Ee`*UFN0SqBki'<SZX>&TNubaO?r4aq
%p)jPY:tWkb+0_n0n)qhU)cQ'fB/ABNcljjpnkmSubRBR<)YCPFQ<[DG^oGSdGE@`'(M?_GcK[&2,^_A0K?f>]LEYt5PgLoa\`$[0
%-]W"n`_L[_,]=;imc$QNAF0@U-=&csp'>%J>P[IqiW_@M78Bj5;83T-ld>5q`8@5.<Y394Gi&VN#dJR!+Q>9b,K'IP7$m"YO+G50
%^fok45d"&6O79Ar,B<cf"p#id-P@bleJbjHUdF^T!dnOZ'A,XO3$O'GK$f5T(W\k?6P#bI)FWg;\W*:00`+#K`+m9^Jq[U:'Cj,U
%`aIk11PD5Mb1It1/ST;:FIU7`N<O.*#NNeP)M=<pU?NtE,'15pYX$c`*m@qV4fYsFVZQam1PtcpY;Mil`<&3Wre2Ar;5tlF!`9gu
%MO<*bYq".%iXjbEiGP]sng+rb7[[0I["lT^DWme:GK<6k0iPao9FU'>&0*^;&*PH23H8g5Mp,$A&QmX/Y[%:*C)$b:O$@8Xd.^*H
%E>6kPR-k00)`,d,DUnbn-jPB\Ncct1KVAW)HFna,V='RUe.N"cTA7q#=oHG983krfSfP,er]GPIZNeGP%YNIQ3Eu`-*bpk+;9:Gb
%Mas^BkVEnJ.P#&+-XoX;D2S#(#_I/WiO(%*cXOf9*;]rhLbc9W#/^H)PX6pu?Nc*U;U>V'1cHhJb]]REU)FW+aYKnp&$`;VQVcmL
%,,03TR%8@dN1<45aJRX;aPo%<Lgko0i@s:c\iUKMZ8%F7YqH2`XG1U5W8)0A=9,ptM*\"NS443$L#^;\7_U-KIZ\-tFE,>h9P@tf
%XP"g>nNZ)l8k&q<T9WD":^qO[ePoY,q[cUK]e\^Y+,e:+6K0X1*P2I4MA!$HYgNotW[FqS1Ea\2&h?o1J9rht-laeBPJDeb/fL1"
%mL?1q=K2^tUc\du7G2?*CI9uT.c1FDL%P2T.g*+,+#FNWX4tF"G)Uef@C=sUq2`O!GlkcEe#;@AdBSj5#gZLtOI4ZQCI@-Tat$hS
%;#3<^Ri=1AXP#4cUCGr0MguYMQYnP;P7ONs(l7s^F%bef"QVJ,V6W][co<I-EE6Bn)*,2:g95!b<`'gI#6YfR)2Uqh"8LURQ,FSH
%*)qV+"*IjKUPCoDmmB2R\\!cI1IH;dM$Vj&?"/iMdfA<iV(l`(]U0t=3Rm$,F5p8sF&bRQYj>*D`mtB\9G0k<3dAqA=LQ[l,?OLU
%!iMkc0b3+KLkq5cM)=X/!/?1d=&mno'_t,7cDkC*3un[Fl%-f58Krm7dP@73\6CJ-5jcD>=SBh?#V,q/Xq#W,^mkr#hQf+BBocp<
%XZNBj69EP0SdPII0$(]/:bE:m3TLWmKE_ea*f^oS(s3$9EDrm->^Rgi\>%"*XRQmQ<Tfp/@o`=[!&=c;plTF#:pr4HVPlh=,.)!`
%l7qq#e<7d%%UebXO+bk=6;45ceX`$!Hr%Zn^k^j#KQZGkG9WV)\0guL7Om^t>9`:el_4SB6DPFPbbJ?<C]@r$CfBSad2la4L+cDn
%=BAf+"=96r#9h59C]eJ"BFg9_fQ1>li*R%hh/J7Ej4JUf/:%_ej*3:>bC%hbA=+?U[Xhg(62:p1Ni[C8SZ%^;I;/1/2JY#1(_ce+
%Si,$C@E'HD4sE-\%jG?aft`E5+WEBi'*gQgiadr:,GO9j0OV<,IfTu0,T[fB^M"-DHb`jNM+5I'=2Y,;@i&V(hVu2:/$_W%!GH,1
%W)#uPE'9UD;5T12@B@Jl8F@-&N@9CAUq>1a"*CX,^cc4o9;(u3Wr`i`bcK!d:F=PQ=*J@Ch(EYO/VK8W`.IbV92^&9X/G/K'j2P[
%'G47nEZ^Vt%W'hG).:.+mm5AJZDPNJeVm>cM@J:A'lJd"*:4ni6r-kDM!\YhespI/UF%e=G2,G^o1C4e4V*q/Mn<:$o?F#MTIm0n
%L[9<B,t/NQr)Jd;=;7!(U-u"^[EtSn.k1%Pg]\@nEZ%p(6,\JMV2/P^]s=jdL6]c8I7+L[(FZ)KUW8ReR0)'s\HbC`dWGE(:9ZRR
%j/fi.:KbQpK'=@4WQu5%Ug;s!`="%KS0SC#8m-&q;H*$-CVm7+pb&oV3&-%F\ef>+>5@Au15?=Vk1i?_?N%Uha9s;hfOCcmpCJWj
%-&A#lN_3-M%NTU'@3_L%pu%*n0ei>k\!iiG_-hiq'-`_b0\)$,79"fu`%&J]UMf20%k&>rUnE2(fl0JTe7_Ik)pk[q/4B"C77)&q
%T-ii)[&ZmM0CLd[+ngQL<GR,CMHHu+giLXil86Fa<U%>`PmF[#g#LLJ6D;gM>HkVh!Y5`<?U`,TA<%=sLEpRsQ"=_=5dh;Nl`uX\
%HuU/1_Ns;T/V.mEo[u^><BsP2rG8u97'(c'19--'+SM1qY'A1aPmEOXQm9-bKd_-^"3`qED_8iFo/Gu,s.#mB\_WS-Z75UtHcT7G
%%8,%pl;@='=rGtF%dg!qD<tND:aM*<.sa0KORt[=5SuDPPq[$PkJ/@f^QmP^S]>%T9*d:V,Gt?!O?K(i4kg0]'RC9mPL!0Olt6J_
%@.=tEOedbo`p]SB>L#`AMioBV_$=8=&gTLf`4i"`O8uIe-;^F4OqX;r.Lu:&;qXP<%Zqt"OY3&%Y[t+NgJk61qbe`"&];;i#Jh:6
%A-=qjHB<ZT`9nm1m7u(N-#3NY=sO^$F:f@2Eh)J0QNm.7)?-55G)-trn;4BhUo+4dC)6sPA6f6V18hGYK.f8Def%D7O\KDA.l\&"
%,YeAYOId`Y*B1cj>l%$17W_`'V=3K,<m1'g_kC[>e'";gd^U,S+?m)a%Q0G,NS/NP(8.=[Hk!dVS5j3P8$>"2JDLS(K-WQGo`^@4
%"o_L,a\i2Q*SI<N8FkB6qW)?42kgRXT#>N3d?BVSi'__68/T`BG>Ya_.qd'OeVpMbZ6$R&)71ATS]Aq^<R<!3Xf-Ci6#B^M7l3^B
%AI^,ZWnJi#DGV-5BUQH#Lq-5JDe*bsq-a8!CF&+T:js_C&Q01AQiXLiP6Rq:-l>0j`Y*.SNIH">-7#>9Rk%U+T=gl1&>j)s0p^2c
%5f2+"`)IDi9EK#]RFD<$K<LIXc#`4k(@MiALJiFWp>heQlt!n@lj73f3I2gnR2[MJnWo8Md>3Eao`3D*#jUJrbq2?q8g6_fp47jb
%+==^5-MDQ[f>MWp.[rq5._[:l"`ao*;8[W5X%&(b@^GV>DaD;_p#nD4)gWq'F]-c%()q%DIHK^>J>>G.88VgF7:gj13(`f[g]Amb
%@3i,i$YUWU5uD`s0IFsDN.7.$h85Zm6($c"'=7eAfHBDr.+tX5[=d@-3jeXM3Z-Bf#VB2H!d.$%C<pQ86oS-b-W:_B+c%jVm)*KN
%)9,JfQ3J?LC*aB?i2.=rH?M%[/8%>g[RPjLQD+q#PWM!.%FO]CKsIYfmgsiB^^+CL`55n;joOcRkTQpgVin-BlFS&`Si$?SAGmoE
%Oa//T+*5aH#6h^kZ5"BRJMG8:k2:Q\LauR][<m$!<$UtBKIY__EI0[50T8M;#WdWJ##Ub1[RU1)(l:Rd1?nkX<J9jb1'K)K>i]@M
%iq'Xjb+<E?8*G9c;;ug>*32^foK7UEYbP14M+e/m.do.'Hg[Q.\UpNZ]F!5V7cYog6S^BsA3)[\S_d-b<'(u%G]^Up3'p-Wo&L)A
%:@TJ&7]!`(H\d.9Nd4LH,N/lA&%n7uR3Qkcf.?Z`Q]qjQ[ZN<t24D@+8Z!,3&dg^F!Pu&]/i.ad6.2iGkTS#=_,?Ui'N#HQLC>mT
%&onIpWr(:#4Br(1K1'k#W[KEt$;lKB3')AYW^)[TGL*Ei/@FG*Q'<8TUs:u6WU_(\+V5]K'#BFO]=CIAO.`k2mmfPq/OXkgar2ZC
%3mnYb80d<%5(gKZPsT5E$$K`F=bN4cRcNn,NYpPCEo6tG7f1/Tj?UO-7\Z0BAeI_mBJ`*!SE*IDA%<'oiC%EsQ:0FQ<SAQR96lZ8
%D*W30l@R<^+Vs?rGhL`4'H<%/@.\e,)@FY3U=25J$p.*+)7.Hh4m3n6r%M<6<XogleU'i-rs#nt6D[5R#FW9j&7fGHD"dMEkgYLS
%HW#eAnm<[.,kfk)%)1:@9<U)%JT<8tfX(*&`0,q=o?X]*jj6B^QOB_Z6hS3mM88KUMfB::9!S4=j.KQj1ZSQC1%V8i0KCNk_MMf;
%7"eSPi?$?mM<GZe!irbN%nYS#R!h>]bCI[lfTHS0Ku;'hZQJL@4"3>5)<dNiLONp5QQkFh,e-0T.-7oqd#AIA@e`9KF:lk=!GbjZ
%p5VLVTs<nW9f@&ZN/BAe<1$7#&@s0+-:-1BYk7%N[(Ia^%ee0.W&tX)cD^RI.;W&Q#]\<?YBV$-*X1h!WF/O`)[*aP4.-dYTW+q9
%a"'H55o;7om\$KS6qPd]RbsQeiAd>SAIV#CKP2A,\8L@g#t\.:"D)$G'I5C@9+XN7L0fhO-":E"CSGK+mCBO--"/ePCs53;fW@PO
%5q)sb[di'W0[N1OCBe3`:4uqI^D[D9-NOF]9LJkiJS9^N,OcE?N&^,1?boo'Q=1Ot/@'CHH^41(eWo5;quEpYYZ`ll+kn1R!1VD(
%dPl418e)OI6q^8E=?1'c4tlr@G3ib[$5t<l#n^$bA$3(UL`@[>X82Ri!PD\MJl-YpW$sJOEFD64M&sVU<Up,Y1Cd?a=`Y1g-<W]I
%#mC[1K8\8-,V[ZNN0$=.QQpCLC1C(>>1Iu1SMT3nMt/9P<R=Xs<V0c+7a.I0Se/9%1q*)<7-0Hmq2V*RAW%:$#Rhn)6C-Q<81CH/
%YI:IH7Aeq3.=IH5;UlRaog.Wk+:0u:[$,;3:56kRNZosu8Oe@T]`?Rn?Fkt:.b[;Tq:1VE=+CR21Z<)_#M^(G-73I=q[]n<Z/?U1
%@QY5i/csbRUC<(2OMX9"0+a]21QcJm7)[e7oRXUu%ZOs'2'VHer2B:peBj";_3SO8N[Q%-MhW&C`eML`kk.]]_Su*a_G/0K#E=7!
%'F1'-HQ$Vu=0fQ)Uk-jC?okh'i1FHsc-.XV0rp+H(dT$CB(=ii%a.g@cobRT';9&%ZhVe4W3Um1^tqrp14p'uFB\t8(.Ym!12%s8
%Ta)#AilC`BL&)iZED@?V)ToEt&We7`[t7%T&`9Z:6e%dG5?dLX2_KE2,t\$N>hCaO(#fCkEn@U2q!\:2l?VTBkmC;S71gY"]EusG
%Xlr'B-'k"@UI1$o?Oc*s<"TeN$Yl3,q!+CC$dh%M4=eq2WK1"6,D!o:L6J9d)TeWdaELg0cC3B/\fB5Bc<`hU]S<IS<Ga7[Gh,B!
%/Dp_$UD.G[dY'qf^lfUj]ElF1[rNN=]oM'BC:?,:JgB=s4C)^o3k<WgQiSIIca%,s3b@2;0qGAm3!7O?e:7\0TQp?Q8Bm"<UY"^+
%cF9le8?@W+cj'A.B^B(b.Q4kX&sj_4.SuAP8[rDB<&tkK7W+pC;gXV5;^`_ZY:F/iqnSSE,)YEV&.!bMZrI;]T=B!&[#cD&6uOBW
%&e,9'K@9s_lnn4>?oXd3,!fnNEg^A_SgpsOX^k&+VG>b[<O.5/<4WO(Iu-f5/H*f^ZPiutJOpqHOA%;I0JYe1&0ir8q=9f5+b?n1
%c!RidoH#9]\I_t+&ah4%=jKJf6.*ItGoGdnd?!''U;a/VZVUefM;2@q[*GHP'=%1#e\qA#b\odCJg-H\4\/Tj(4\FXH4N-(8;9V#
%J[(JO"1[$:j?_c_UHK!6DP<PSAV7"V\5#'r%?88L<4J"t"V)D;+W-*$jiNX>?]6>JB6&g56rd6].O;<k#X,F@!S]'0La1KKbd!-F
%U>dI5Ic.aZ,%ZTq'm'U-O]E`0X%)?h4';juMW52()MG.<kN&_)kT4`3iPgs_RCg68,+Y'nkfb2j\I@_QOs?@#3keG,M1#emY=gG2
%,Hhc@O9mt*a2#o:&g@ZmW"N1n=WN/NF;jO@99u>VE#;]\$d;J"<$PVDOXM/:DJP?$]qiE%=pbCW8n%n`\IpK/Y?4ebLfX7ZmX-Lj
%6\`=B&M5;5TultcFVH-]W:h_K.bAAW^?se-N)`UIRn4;I-t#KX/q7)]'[[K*UmEGWJl0B='13^hZDMmSR-o7l5\<.+NJ7jG%KV3"
%N<Jk[^B!@n")WfI.9&@iq@stQR"L-u@grtF$5-NAW:YY$Tf@n!(;rS-79*+$iRF:/Usp"kq6N6m9mgF96H4+W%EN.EjFA!qL8/f$
%1FSbh]r3_f$5h64N_h#TRR3\edOC9&)1>&8hU,O]9CG:41!15t32rbeV7mMF)%p&XeLR\\n<6\5gB`#m%(2\/qHB7X;G1)F8Rlig
%pL#FQM3aP;Kk*iBC[>('S?R0@?t.2,!ari()+.rj-!S>2WJZtu>%5TS()GDEQTIfT<NMg/e=p"Z&Lhp2H(>ehW`kml$3edD8(ce%
%O4LV72IjJ$p)r@%<F1aeaZqbbPUT1(eIURVDA\#V@-/f.X2,,q;+Y=7]JV+Tf9pZVo9kKQ%l8u#Q6(W)`ftrBJpGKHs$C:&l.5Ng
%h_D>r9Q_L_$k]6AZQ.npZIUk4oTS"BCm6.kq/B`'ds,^9[Rs-iH7UusMtPAr1b96r?l,'G,PFeY.#k@l/#X+B-2$3t3!)+OTS0!T
%+=&=?$CiLqL'BHMX&M]pJJ#Y[MNf-=$&C-T:QkMeg(Iu/B4?!4.0luN:`c;:['1"5&cfM37`B3P<BZPY:84_fL+jsW(s@l5DcY6*
%<A`tqV(&Ds`u,ZJ\7`4R$3TGDW(1_b8<L4Tkkf<mIu5/@#A9oiiO>aT0K9\r?6lepaNauORICKumDS"C_WNbN#qaIPb$o*?JeU%,
%U`]-V27uP9;^.)f)/N18Y=W&nJM@.rD:781g69g]X?/4B%?^alC'3==1!P'9R92\i0&I6XM?YUX$R'l6dhlmMoh%T:i%:#:B+R)1
%Z4\XkH6'(n-()cSrX8hHJEVA*hM@s]/!=rSSrY!3[(/j(Z0I^7B$a#k5n`ApNin>+$orD2;F`OB$7,^_VS.V\0#H)aUe=+d;CcU2
%mK(e(<S1<U(n\+n8Q6iciPHQZ8<$o&-GDM1q\6mY]FqgEqqEn@StjZo0P5/&MM@B!UoJ;=_!KFC(Q;gHKT7.mAuaB)*%PEkdpTIT
%GPm`Q$g1^1A]u%8@kL@`RO9`F3YT`:`\LLoRP5=R@Mqd9F[;1c=2poN_ruU?K40#g<Mtc.c?%[=+]SL^!?=+jL0-C9l#nU@"L#>S
%+\I!XpL<o=qYYF<1cWCrCHE4^6P!KP?)(IH<>:;Lq!otJ!AS=??'dpt3DVfB/Jn?B:5[O(m@\,T$<H37%Z1pGoMlfBoa344j2rXE
%HPlAo%;kNUD*UT`'":$63\qsFn2/)uKBeQ"N]<5(3i;X<nPf8!&EI8olM;fLbYk_6pM;`58j4Q\'-+\$3'dTm$OCh%\/Idk#T\t7
%3elZ,rDSi%ciedIkopFAF<M<mi3nGer*^AE,,9f+U`RTUAbFZ,KWZ>_icmJDX<].?:R-P?:W.D/0L2_.504c>FkM%+;`M<_!q]=-
%Hn$3*eM6\`mjRcY:jpNISEGY!!DJ*l7#YC#B?pW8&7(S-@`aRr7S!.<*![)%)HU>mQ(qD0'BH1DZ0AIngmfsnM0,\&6GZ9U8odc9
%@!Kr,8\%A`$?%2R1(>ND_'1,l@l3HB;?n?q!Xdb?:kXD%Qq?m;=3!4JD5WY#;2NZ'/U$JOas7RY'h:sakq+oPlYMC2!P4"/"tm.^
%7.n5_VY&foV8p7`hN;nNbcfDR0H5_U1ke+TWr`6_4@+jN/Ql+O/TQrN_\)RHo5(IQ<tHh/P?'4gAVk470MY8M#W3C]_Nchq%k*B*
%@uXd\(lX%l&JUKILfO!`1<U'hO>E?=1I*W$nqne.*]&'n*5P\"jnFhJ6@a@qSJg5u2@:-^7eu6cm"k>>QSVn6k@DO"e0EoBJ:&gi
%6_$0<R:$*nPpkmbM,n\%-2Gt"$-?\3=k4/l;MF4c!Lf&?4mQ`#f^XdK3qfX"D@B^AO'!sMZnk:^F1s'-f6`?;A]Cc2/8:V=Ajj^+
%[`frHbcNZq/SK\$:_ueL#N4[D&KVVR`*85@l&uAKkmLN+:ln<b>R=^.e$_#4isBQ]/giPPUS'9.`1$3u-t\Hph2;X/X&=Kk8A\1H
%.?7^MR+\[%XFHS<)C+9p>RB49%[!!47/Lt7U6g82XIolF`!NeR!Ac^EqrE;eNaGVgiYg?>^S"Y\We>BE?7W')-D0[m2Cu2u\*Ac+
%$8LAaSo_r*>oCQM+;`NWBuG,or8fUqUmGu<!BMGk5ZWlEJ?/Wj#Z1\MYeXEH/Iq.WQ,H#cOM'"]gr,!KBcF>3dSt#SAh]\9X=3tf
%$VEtPq[.@(XQW20\Y4f<'Yf]7!smbeDD4Nh?(Jt)0YsU2Fb2nB85?#u<7Fn"(IJKY6l[E;NJ_e2Xs#,ASn`?X:6&2\du]cM\[PX,
%Y?!,0e\TGdMnf`b[ae]+EGIWJ<oncFJ:O_4!Za[*X1r"/2&-q1NlCRXfM5a_3,0AoA2Lf(qDOlmi')J+amA\0J^-i'Q!>^b8lq'h
%iLD+u_"D/k/PM#feuAjLIJgnH`ekV0Lnu#\W/?3\1/Fa"IBA;K!&g)T@SS!.Vn\r5U+>6>)d1]\BC@@t3E7\4Z!^s?U"Wr-liW?@
%<i(V-HB=ZYmM&bD"0G!jj6GXANu$XOf?2EhqXj7<l!LTc4h87Up#<%$]=[[hCSj9Us5Ds`9)nB&f@Qp%kKao7?8VLKO3HT^ck=+j
%q9]HATW3J;&q74rKE$>n/,]+5mAGFlg<U.B(8!8ZqgZiL=aTYMYM02$L:df@[WoFHka6t3g/rO1<024-6iugKj.B$6:Hq7F0!8V*
%1q53n^Y83/@#Mt'!oTe2Qq#V$YA'`5BiiFYgA($mLBRXX!SmA*SNclm/3\R5?BNJlk-g/bE:LC=JA=`IfR+.-$=h(!7!t]9#%DK[
%e9uqU[.Z)fL#AFo!pn=PmKDsEU##bXC!o4I4s*;2P(euWEdJeY)H)%r8*:i_2_[:*0c(`tf.J,*UJ%bp,P[k@D97Gq<7c5A);XAe
%_s!tuL@8D8RZ;92%aX%S?=&<Hh>DHnpl4#O`GnN!hfP'jfD_sk?mlq[0fI\LRO/M&mIX%dTBNcXALb*t>jCJqqU!QH7j%XFT9XVC
%9#Bj-B`:[D(ES_,-JrVKBmB.)5;`3LJ5NnH%RjbXKnL7aR>c"mWB^1H+.C;uLXF49NlPRn1`bEC*89WUs5>^MG5hNUmEY0)'#NZY
%QbiJ,>?0q9cfG9-^RqVhN&Rn56-h=AhV]M\9@?a%l0FmV<I@A3j6/P'%g<Z1:tChPFHaGqa]=tFpM+t6o`-MA%qX#LQKGEY<St%i
%Z\[ATpEPqPU<ObOi-0JrE'JY/*0G]n(de9TQKciDjTGIr-beKqj&`,)QeIQ,F=jJA`j)^kF-tl39pH_gf1CB=i3S5W4fP'WZ*/@m
%R)\l,/MFH9R(gH:25=BE_`QrV?,i0^q:i>mn)kkjd*I'kWcY.6Vr.d-Gg1h'5#7u?Feo#p]9;KR>_B;Fd4o>T*CO%Mm'&U^L=@;m
%=)pI=A/Ll=jN.-t8^l'=cf$hRr<UoN?een9FaJ+VGB*T!d1Ojt4rF=jk^tNpinpi25CW3Rs7Y'&bLY4=%mJR:(]Vm3qsO'>05dAP
%j3O?'SD@K+>bBmPqM%4_ZM<pUX39i&a.kQ.gPbOhn'59g[.n]Xq!%25l#N9"(DiFaDU5MkKj/s&pZoHj8,1]lY:n5lO!!5+s3L;C
%]-fQ3f?`/5T%s87dGj2)g)I2EQp1&hl/b&mnf0%KO6__9<t@-BRh=D`0hkjOGseoSa5p*8T%JtmM]Z9\c'X\OgsgH.9]i%&*9Zk8
%G#.)K),p<QgGd[/(XMMUba8[FgXKatrVP&>042FQI;7Y%V2JtBjo^VB4E&0m`Y7h/Dngen=1CDCFalE,>=cY+/M0ZZrpp!`m/5+l
%U8Qj--1-(9]]68RDk>,GVm"DGH@,Y+pMK&636>(q9hipHH"P\&='qQTSc3^pkPcJ@De`&!2rECrgmpUH#)B1k_KOgC>gAemV"IDn
%o?[p4lXoWuRHXS'2k@6_i3-LCN@`JropZc\k2lF+l.sVON0WX%2mqh_\[fI<49+(&l,skZB/At_LZUh3e#kXQ`TKqT+oX3eLYMTL
%3PN%MH1U=\DVfAY:SU22jNRf%pp9STMbah_gd.2eW,fXi$3sRK"0,TcW,d6^b!!L&D6j*$(H3/6p.(O?@<'ps?#IX_4Qpej?1+B/
%*H\j"dl?Q3IoK_!L:u#UNnb]>3V+T&m@)>%NO:j:cBIjlc7cqXEVf%akC`)8QGiUamb)795@'erG\5'/A+NEso_4^H&+T@!eDj)m
%5qW&kMDL`d!rd@hs6A.Rl1L6qf4qqZk*tP[?_-)fB)'!Je`NEmXV[C<0XbV8Y23gGD%:eK7g=;5bJqm)QZuJQns%H+*I)^Vqu$*Q
%r0t%Ab;fd6C%G'dY#d:&cb@&ABMEZ4F^9UI!caQ>2jZJ4s7,]=LGd;4I.Q[:<MO^B^AMnq:1gRugR7f&Vmh0OjlOb[q=U8[\,+1c
%-9-L(a#DVRmS;YSIf5BL<B-#50f-8R[]B,QbaQP;/,)POhDG3h@iGC$\;]t.c,KA3aZKs_TASN[^>Yi5_RIof$9e86*:05[A+gOP
%]hIp]erBY#Ebl["QuO_UplL(gXopT8S3h2he`k&*!nK!0Z.%Hc],+Q3GB<\N42oM=c"B+*&,=Pu3Bqu)k:hZ1s6+XcRXCT_ASZS^
%6YeS_&%b&mj";gtDrWh0'lVC\kI3[G_jB.MBkP/UYb17O?:T!kni:5sr./@Gif)Q,]=i::P&.\:e(Xa-ANIQ9\U8FEIf?Mg:9K#+
%A"$gcg)1Y*fu<(;*67/9WV?,VN(!?ndq9KkF7(Jk\63=\H\f_rf#.*^q8[iG2fES@^::_dq-h9K["W89538@Vf\"c]Z$g"dEtVsm
%bj0IUM&GI8S`*n]nu]@uBH6D,&F>om[4;K0LSJ7lT6'Jgbi,/"VmcPGmq$D:N*Wle\c">$a:Gi[4LaG-riP:,]5mH.3'b;IE>%:9
%S""c0fqaPpB2%E+NGdQ,hu:ua3?.:$\CG2])Dcb7a"L2kYKnl:3PR[@RqFT^I:Q:Jqg*uAnEoDJqT+D0S'N]n]t?Hj423hk^AIj#
%j\B,Bhp9Z?GDB&A@1M&;W38s#G;CEaG!j_]a?PTJ+78.02bt9?S0M'-_i8NN%0-gN0-5<G.Ai`PDG+k+J")Y!\<F]M1\C%iiS/D`
%bdR-13@hE(i@3A;f/%5bVe9Z:=8/ogRZ:`bCqQaDS\ZJhl,h,`^hLH,L=>jcRcNSLp%dj25jbo,bHoN5k/?!a9fFr/)/&O.Ar[RJ
%Zb\Xa,kHu_XZ=`pe7qq2\33>nBu]sop?^f,ihopL8"4C2<i;9KTDgl]J_CicGBu@B18^A,RaUeqZ'N]h/hcD,>$l/D!L^2Nha:td
%3?ArN\#H@N&7qKkhH\<.&o>!Rc/SBlibFbZnE9O'Jis*G4$,j)CmPWN<;%FIA^7I4(%]BS8"uO@;^BMe4gj[THS6U@p:+Yk*"98C
%/.0^?.q2B<n@W&;H?MCdAVMJ:,I&Y0q\4so(Dl>;A%qoH.!%;t+Vs/NMt25M2Z"&DEjecK.'o;Y[PR4IN^^4&J68$rB51Knl9d,F
%MIaC8Ypa8^'T4a4^hc*iT!KWQEpDPYQY%%DC1aU0>AVATY2sPRkKSnR3ip9f!BTSm6G1oICiTZ*KjXW>hk,@PW%_$)Z%Zj-n#sFC
%a-gF8hA(.&pP;AS;9&HU-o2+Bp,7:M*Ve>po!KA$HJiQD^:&N=m4Yr.EY-hdq!]7e`1CtVK=#g[C4BWoFqE6uP,fU6[0'M-6ZTT^
%,P6'[rp=S",VqX#^["tX.0nei(qol&b(jI`itEDmdGYp:p.R<$3$V[e-N3V=Lp<Z@VPLI]7fBI/!l)>Ajo"\MbL9gjDBS+^g\130
%K"&DWm-QuWbH$t[h=B^mm1aT!SV,^:J3DT8l7D9Lc7EdJs#,f/^JES0mJfCbIou&7q",WE]3JT*4+D^!rGY?fag>BGTAFuSl]_iq
%2g<iUDB:o*#NV>uC*7GIpp+b2dI3_HDC2*#<b^umM;@'mEeX*#kDpJ"^R7(ZS#_l7YM-D[jo(//krWru*]sY=l5#k7Cps<7^U6Su
%D:7N)aU!pg*:5!fQso@YnKED+\.[/%;d4%uAG_$&GC"UUpYtK9DU*O\.@0[N=3oI([MaG[a+m!i->1D<pDi=7j<$=:?h0NBo%)j+
%bi-eWXkRA\m/C7Q]BG&qbPQ!dJq4E"IL#oA_>h-<rne.b%rU-.559VOeGm.IPrfKThq.5,NVe4qh?+:m1S;n(!tRTQbt[H\o0)kr
%J(o2Y52V"=GH6_;#G:J"YDF6H^(6&\1O-_6mIM[^I5;ZIIF<LQ_Y%.<0R$]aesi,YZ]""mn)oqtfGWh[-beqScS$qiIX^lV/h_Zu
%ERu*KSH71)N(GTcYk:(rlf$c7E!Dp#n]c4*C9H_>UQm3=hFlUH*UKbZCt>jQR)uec9Qm?E]>\A;](eJbiV*3IqNH)jT7:m$rTrO!
%RnnLE\@F`:qrIJKfdA_fVq2H*j::miKDk.E5<INDG#3BX1OK8eQgM8Mf!D(;`\-"$@nrs%]"#>dH`0-cjF38X)`H/mG(F,u$&F-O
%ND95-oRmmD7sB".gO6II]m=sQeeFD(rCVRl'+7GH,kos(1@%X(pAE)e0:S7kb:KppaMoPdj'Ikq^4kBSooXmcj^<>d^bcRVQ\48Y
%pK#q_bX.%#[_e^9j^<<n(g[],Q\48Y@!F[K?8aA0m8'7ueejL_@>/?l/P,bQB\>J;M76ZcXZ%B9a'@OsEi&rk"MB&E?k\kCG@-nI
%4D:nO796k+3"tbc$H(GdT5=h%QnsM7#F_#%*kD4l'6A[grb*Df>C/&Ij`3JV0^Z[C3+%j%qMXlo^pG*uj'1f1>CSXS&=@q$fA<sJ
%oe#U."8^FHI;)X7oFHRQoZ`<CB/`$sMU[%Ci=)6R6WX3KQ%8UpQ+tEkAEVFpDk91CFaaS5^HI')F)cA8bO%kHmu1_IcXp.?`CATE
%LPP<_aW,c_pmM-pO3A\C#P]mp@TPPbgF36Z[PI_`/Gl*6*Ak-oeBk9UIsU_)?C]?"O4&cPRa.%T1Sutk!rlid-S\,Sg7TR"_jl_Z
%o>S%=@?92]o6-&pf^ag^@)pn'V=J$7fL>o:@)poK4%@m*43!dN*:+MHIa]A)(u*3Q%sEna*TLPJfHNB]BP;UfZQf/;>sCE?Tqh%7
%89sohj*3I\a630gm-aN:MjoVbOlZ/i)^hH;D^J`WnI/fpmn[;]s7Q*`J+(^ecfPMW9C4Yq[lKO.fCr?R[Pe"t(:qB8GZ0g;^A6pZ
%ipQ.VA)"qH"7<h9\=>Fc8aD@UM1\rK?\*son;matd$gA>*bWPVSl(=+mUjaMGI+h_*5I^Y5!0bh901u8*H6Y>=TX&$HZM&W-J3.3
%i:28T*cD-"oY(_uhqm7>It--(qV<t8mN#'D/?sNUQ1"f;aSS'(#=Ib$)+q$aX+7B6PM,MGY;oP6p0b(,Rqd/!]t,?WoV#O\5EKI@
%Y'l9mE[feW8]ogO>J/WrA,M9NQ@gc\kI,2bhkYXGd,h]/Q^c%6&),fN:<Pqm4(r[?D=4(A*ONBOX3JnNP7QC&:2+cr)-\s#Kj[F$
%\J[1bW,i2dm\%iGe@C2mG>RK%B^/jX.s::$mX[\`D\Cg-d`pKJ];*gQf?MRH+)Xm;>jM9iccqQM%r_rHf2MFG5fq5TruENjGJKKr
%k-MBA\.T$obS=B>%A&j`@:&C,+Cd2>`q-4NmgQ+?Ib=kQ,Fm;6I"-Efp>[M.,2Kmo4hJ6$ofm'AG$j)(H9'#>c0[DHfpRc-/'$kW
%YY[E,MY?o;h`K<Sggd\Xill=.-eeD`5d(a_nT_fngMYWdS)Lc)Fas;do^)LFZdX1YkG7pN[bC*%H#ol@Bt^KKbq>Ep1KVqpkat)S
%R$CWuaVF$#??]8+F'=$#lSm\TE:%LR$p<5'S*O."V[lgOS>b5d:X$J8[d>tD1Z3Q(0ACD$c.tbANNK[^EQ+LJlf.2YQ@DA.DJDAV
%&N50]o=i/@cS"_.SBUT:rqUsP"OHQDF52C)[mea#>?+'Sa?Bj^kP)utP7@AT?XDSoT?iZ<<Zg"(O[o]R(,F;&,6sq++;DLZU$*U4
%^%6f&_e44lKqeM[*qmm&s-?[R[p1=B6sjjU-^\n9s7hZdH!CYh[(37*m]4fp#:6T[A7_[J(O%O8c=\<EmhAFL\%opBkN=!bT?6p!
%gHC<Ph"\o!qGHE[j1!nn4@ArBnY%k)ors4pnSgK00#sNn*9XNUf&)C,GhBI^Mf\$bmJ#UEWfUG72pPjRJ$ch-(G3^`@Y<DboXpeh
%BQr%f]oHPLGJkHJ3-J/THuB1h&%G$rAkMq/1OH(rFoWlC`"N$N4oOY'@8=GUaPZ-'g3Pr3FkXErJMshJ*8E.Ts0M,@V7_)^pu<>p
%+UpB5fj3IiIf?pTgho$TY94p6R^;eG7+k;+Tq06Fpi<"UADa$<Ai$Ai1K9@9#Ko)Qa(Q?[4T.>M1'(um3$-uF(\7+Q"kUGA0!t<L
%laPY,LBtNL8ILtc\TK:=l&jH>8AEms<qgbWr#ei9Nm%"LoCL_O?JOt4rTZQ%6bDOr^,u:Bc=bc9j-NuoYjpb,s6j4Yethtn\]J4I
%YKsr>8N*kMS*Y-$R)QdXZbINhfqu6Hh1'&1A>?saW8^(bo=)3,f<:dlWMHbPHQHcb`ooRLdItl\nTM51f%WFG3ihIPqY34>"[h-1
%]tA_WS7!-jS@@UA]4,$t[1LOU1kN1fK(Ps:s)-*1^Ka"P@Rs%J5^N:Gc1P/?(PI,q@eu;[+"j_:^HDANMjMj&rpcIbYJ.c^":s>e
%h;-?K7utmRdmkLI`HOO2qV_A##QN[EbjdK^HjTh9E/a77L#;m9rUeE*qfuVpiq(-=s,U;FCE7fs2>j_mlR:q(+/eD`,$,F!H]o7I
%Sa8H2"K=8^V:N];%+M%WN'?YN8"6A$K<:0m=f%FIHB/.c4>sT"L6n.a>/RW_7RJHh;+E7gPNap%A7$F6&dC,<o(_c2-)KQp5#5g5
%Z:'tWpUBcJ[//T_T?gqK5,2H,oSlpFeF5GOJn#2NZ107FdB@XE[,k*Df.?2"[6F<33$B)C68Q8<0%87YXCf_T)6!7K:!PE3pU&J9
%iV.2tDY-7Y=l-n,Z@%q2>PWU;HLIag1TkOsfp,@ILP,<Z5H`tt5?n&)Hi!*'M>)r!&Y?J,$>7Zp+]2$aJCQc&DK1mJZtS:8l1+T;
%MOMI@9jGXa:X7hLbEI^.O^/F0i9#@VUp5l.4Sk^'bi9<@?Erok/ouW0cb;_O?F\Tb<u6>A#$KVOdg`b(2c_m$\rFA.jc<bi&Cqql
%f20M/G<+K<_\$0uPaAl8F>GPSR5LIZh54O^e[(&*1.3k3IP\J5V8R^39ik=QZX;2"V9*=u9eT9`mR9=rA2C^.r26Ge*4hUHI"-Ir
%0)d4W2j]F5gK!ORC@]jLmIahh_+*t(qho)<8,_\O89\RE?XDUEhL-n@_OmES7;C_R/-:9XO2!kC]qeaqpuCG_qT\+*!=?38r,9%\
%ci28dYM;]SIF6[6IXcKaMb_%GFWa1:Kd6HQ7uQj8CD87#'Nc_'1cb4*)lRP^,TkgJA,liuc]nsn7o0,h*S9Cf/X<bR0s@?I:PeWs
%MeX>(hcSTWCm+MGO%lO3a!U&L`adJsrRg=\L1@PPe)Q3Z9q?9;>bJbMbHtJ:1lp[c7d\iml*5N4T-pi.BC3O'MMdT8LUAWReundo
%lFOBo7:!A8lW.h9D5SmJ\J*Q_QutK+Bb)9"AnU8;Nk0\[GH+lZj(D35j'';f7ZFfOMIk:4)Gbo\Vl-1d<CW7?$mP!-g:ubYb`RK^
%jDC<_h%!?08s<7(kb2=S4P\+`.HhiULM]qAZN9-\a"c4=5BuKg4%PE<E]*XcK23h\Yi^`0:2*YJimg"0TKK(A#*M\Xm3!c-pMb`E
%rB7<n[Tn+4YIJMr:N+Qc/73@>n``]\j6V0\G8.KkIGDc:ZE.N3qUi4#Kc@"^P&)W[o4-C<'Mh5aL.j\(j5,$hF`u3AbGDo$:6YFE
%9h!\Sg=ETR1$LKleb9H2hVZ@7[-_r%SZ^2/"[blAGk,>B;,89Jk(e@)EcUg<j*$"mDt\&>4uUFW7C"'nQBFB$!8lF%XgC8^iGi[.
%_K6PIMF?W0&*`q=5;DRX55sR(md'JNS(hRmPdn=H)O:gmd]dbJG'0,nJ,8oSnLVG'IWKi^#p6NcgV/,[oDSL6:]Fan[R#<D`Nu00
%O\BsWI%B_tXaX+@L(Cl43T2J63@6/ud<8m.]M#m%K6Qr.]ha3'F/+NaT7KbUltn(Y8F8,U<c>N[.`$s>jI7JrBKObQF&%Bl6H.N8
%^H&kl)R0KGEuNHXOG2n(+^uoJnNI,f/X>NW-#&lb"T9d9a0+r<-H6Z]&VDm28(K:n+/%Y/g*G^'haSE<hK2<Dm-VYBQ.omuUu_'=
%0^VQ:G4/.1DJFbN;QKo6<uXd=Sr(10:EELt@Fcc)!Fo>tie?F%q7;sWb-&HT-g`_$P$'bY:GFHje_[`OP]8R$b^/Boit]9V8fWOL
%(CZso^70M8JX,"S?;8)Jf'<!EbMn-?##@<+5AnYB=16B%*]ot61#b]],?PZ/hU7]81lVugH2AY+Fj&P5(AO?>.-)3(JSk;#gJci1
%9rjn,$F#0"IV@NE4o<mA;?CoiA:/6WK5$r8RonW[T#sqYS53?T#@k:WEqD@&FP[dq2it.EB[60<1VWAph#X5=65SApS-[e<UMK6@
%0:)?dBVG!7$S[XW7,qSA<t#t+M[)"q_TUYV-_e#g0ek`CK5Ig-B$i2l;rXWk4/_^&:m;?SG1(ZHNH)U<MGJ\4%j:CEpl+f)X>CDF
%8IroKT8<k=6["NMD6m&&e(0JG8)'*4F.,pFJrSV(G\!*OEb8cB/XD7\X#T)P#/6>m$"G!J<0O*E6@:XZeeI7B7'JYP/H0ad[#Y1/
%G5'+NmC858^$TqESXEO=S4#1[HR9rW`>96Cp6gAn[O7F_JtspS,euA"R6#-)OP4lC@=Hq=V.3[j#qQM'gt3-e&eM+7>RNj32;A61
%XY&lY.gq*T@b0oJ1YDr9^[cDT\-jiHY1Zo(Rd,.uY3ckTj1sc.-0F;eWL\AsMu*lA*Si7h/Z6YpWkaTh`#ORMgG/?k.H0R5Z3dfc
%H7I[)c$5AeH3@j'm9glDM8RK<XRboX`@%?"N3*%%ed-;H?K&u'#(OnLDo9#Pg`%$$58)RBEZe&-\ZbPFddA5T3SJmpD&MPJ$ja7[
%j2N*1ND,?+4!XmJ0=$Z__f!:35Zl1Ms+>ZgM^tTD@:LG"G)5?oNU:"08.S-i]ks("/0<QuDF>-i1Fjg;/<n5E2uH_*;WH8%E95)V
%5o6>*eOU+Xp$[k1iO6c8$5:4G!o8m5E?[bD]23"k"=[Q^O_36E15U0f/1_3Y#4J="M7)/IIen1gQNHTpc6A"X[nF9aXrJ&r'/I5M
%[?'C1#.u/%[\dJ7'C#5>4/#6uPr/;E@Uf&''(Xj^Ts)U%\3T%ORoNB#UkeY0R\U,Zefn:cUMk`-T*dQ>o^,qm\9a-U[Vkq.eKXVk
%2qJYq%T8tmDg_XZRk?Q3fgsN)\d<Q6\1'1MU-Pf_aX_3%0Q:9:Zu(`d?3uU,,C9DH7k>o+2.BcK[YD9EiFdrp\g/DM;H;7BdPc:p
%qa]0WhtF,BYUs\'/d$*aG)i#+mV0c]J!]W68lnqaJiat:+bhDbQJa.6^9U+df5I1CfeO@L5AeL]47KsB('6g(0W(Dr're7)'bKt.
%lJc17okj^sZ76%Qi#m/j%uQ=UP/PGs2EIeiO6A\`0fdU;N("Ttgrf^Of@HErIW/S<@u4kb?D*LK!f8dsfQHAcamfirYh/Y>CnE/6
%4qan'&+(;];Oet;n]LNk#5B)I?YJG7gH[[/MTRG1F46l.^r+8ro-p.k*Pbth5I<FS?s7M@[jB7k$dfE".m(L4C*Ns6R.oP!DYqqm
%BnAskma:%Jrdr[:f2fKa6bDU!Yk8rBqdf,1JPj@M':I>=\t/#?1#4<i(2"3XFFX7*n`n*XbO`[f#+1@,ZWj`o/7"n:kUh&T1?5XT
%r+_^@!/KU"*+g>@]kE(qJPd!I^IH`-TV#",P.K4(W'SOSCtpqB!?213LreS)g]*Cf"59UW`iP%G?!h"7:,XB3WJj2NgUOadXPC\#
%MW,`u"(qg<1uUn)f'Y>NA"Xl$;&tIcVdpC9K#K7Ih;U/f5aP@Cc9tHnS>R7sEQ?#kK4qCShQ0,H=gWPn)Y&l3'cF(4p$I(a9.Otb
%9rIN#<8iR)9feO\*,SZf%^T_YRH;;'(UNdKR=d9b9Z3W&ksFcs)dA?$h7upq0.acl`a"m4qc(P3eo&!6O^C1U9Xp]'?djDm[bIdm
%'M+6<@,9c(gQB^%\MQ%2jm#;D`UJOre*WRedF<^@Hq^5@E4(qQFHG.3-t5go3kDm).&r]Ioqf`2BED=8^q$^/Ul:#/",j/\Km#1_
%>+S8gJ;SGcSt9QL^/O%g1oKR%j6A50Ei`U-F:Mt)BJNMnE:f3[j:Id`k($=j<USSL;/JsJj?^Qa?KH_E[TaZ;<fkW5T*t:\$<GG!
%eKB3]L?oi[1p86qXF7I+n;M,gWaNG%LqEZ+f05W"g<`#L+^r@*IH[TaQ%dWH1G+N#qtWkO8eHLN9h:+O'EEuW`/Ae(Mf\7UC<C];
%Lh@p(^_JV=gX\#:0nG-):,Q=NM5?Mo\1P2m&1gPP*FJqg))qq1@\OO"8^)'Ve,%9-#aN#33?GiDOY)a'ft,G8%deDAODSh$`nDJ_
%h3bPqIdKC2TuMe&3K5W!YG=X[Qn7Q^@)*]q(;jD07FH(\#P?sEQX&2OD`hC0"LtbrI'q_@ZjkIeiPpr1a=lqhEM*QK-5'O-T*M4u
%)n17fFu3bh3&Dp]f,./c,f!M96c'=P0GXW'Ze9m"%ppg'p53t/IcG49b^ODB%*BCKCF(XU0DB7`l<rX@4#n-?^f5FKRtT-8FBcCt
%6)mY.0Ki*VItJ0`R')@-S=?K`)3*O+1?4g^Ye5]3/=<pLTc)Y4(@3%.PTHN)*bAu`?**RO8k[h5N(mtFEj/th=o0V'Of:<$LU\#V
%>Q2XO5+2:K&.u2NCR.dt-.%-/H@/ec<8a.%G(mqiLX"4a1>j02g+E$"IXD(;h5@aFV[rT(d7>"A+pAloj5Hl>NN25[21a_dksh?5
%PDs=*'J_WJ/_JF"?A'&3CoWM$hb>@Fi]N!'-Ie4c'lI0NC(KX06P$A>B08r,(r=p/g1BmI,C%/L,AA,iR8Qg-eCk[bGc?*3Fm.f7
%n)N5J+F#_<%p(ag!#u;]`K'q9]/Sm0Y@$/D/alC)/pF1@_j3][iQ@HslI(t$e*-(_>Y?)`=L0<o%F\k92&h[W9,eK2[agAIQ9+[-
%4)I@nEb/I6)!Qg!Fh6tnI_R1'UX7o4]"Dt]rpor9StFiHI>a3hM^Q".Y?ibD5J98ZiV[lhjmBDGgQ14``s)G7q"4.JiWi)*j/1_B
%2>DFT(GG4u0>7YV`lG,sS!;:rQp+s'CEH^DT)*+rI/27UjVo<:p?)A@`QFgPO&n!qn[>L4]P\,L@e/mUMppFeS(#R"dGh@mm>pG>
%dN6u&qIhCjk/hNo/q7W<5?^237;*&f?%UtDSF:b3XID1#oBOgi6@@=E(F&^PNu.?tE350;(`m-dbVS!<q$/eec?.^'2"O2Qs3gqk
%gj/n=pX:jK*DUPIm2rP:2/+YZJ,/L#n_M+4iT9+<c$PuUqXaRK"YYJFs1[l&I`oa1oJ_W&C)>7;s6'7@kA0u)/tNURoAZ\>VgnU+
%UW(8\ZkG`>O6pQUl!0^*I*@=Ob-f-bg<$q9?;Qj#Er$j60\kg:lQ?#dme#kd2a$fpo[Uq6jI+bl+4"<oOMbEX^V&[JIpU8l>mXm8
%Ql>N8(Cs.iCGP`Wh4\At`M3qZ*tE^5VIFm4Uadu\rp'.LDXG)sDm#_g?ede$V:Rp?Z[K`8I/Wu:K0K/cGp@\nM3+K^rYtf=\`o"@
%DmSr\ec3\GGAS^o,jCod?E;raKH*=Om>WZ'hL`DZ8k94!VQ-[LcEj/<,'+]bXd[";qTQ&*^JL(T:&'PBEW[Efol:cTpajCtNP'ne
%I7$DFP)0*hR"TpgGWKLPIVX$8lh/"Xg0[Vr"`Q=d`Vg;#ZX`S3dfQCt6V8#io8G0(*"*in`WcDEofkp3YA'5<2`gX3&s7El^S*re
%h$$/n\IEk^n?5;uKZ/a#j\=Z)@s1T6Pu2mQ)`D?*en_H0Qno$T$,E46A.rT9[c%:JLnb)S"aB3`6>]8p'c!)P\]ZYtS9K<\4jNV:
%"HDf"XYa2SOH'7rfH4,I%1:%m7ZOKuA``O8iSaYmc;_=K'@\!$ih-61WdR:7q=>uH=[@N8F,Et"lGru/,H"e><io36`P##)Z]UG@
%h4I$=<(CRiF"PjKm#J;IIdbHL]A<GAJ&'J`dg64!lakbf1cg(];ftKGNj>9gli(5hrjb6C6$LAs*Breu/I.R+J3&/Z/FKomrA@eZ
%3'h^e9@7U+251$HPaZ]K(&nlrEa4m/B2`[WHFfR4QmS:Db-M+LZ=.?a>=(30GiOEn)7DKh)A:B@2;O7&f*jGXUB4sULsCg!bb-Dn
%`=N6miVOIpaQ$ts12)%i6R>)hIH81'e(e3W*#_qg6@?.;F^k@&r"KU=19AVUUhS?WQ&ZAGD4>=D1,^6rf6HU./^3@R3gLsT>;V+f
%\hJO]p.RjEmXl[f7UT,-9I7&:h/I<BLR;Lc,Z/#)i#5a3?.:V0A_6bQ`#Hq=qQSoERct"a1eci%GQ_<i)5J+n!KmV'pcfNDVPcYG
%#3tGH5!@g`3>Bs3QD9j7e/cl5fF5H@2jVUVT\P!4/0Yp+@mEB2&n9pbk7UEF%7$3[mZE1O"R+*o)FM>I>qF=M6OI]3r$9eB#!.JV
%Up)+Z)AnAe4b:u`+m#(<o)_AA2;8Dda>/;*@Bg!0GY"B]-`/V8%B%uX+2r=AD_,4c!DZ_t-X?#)"\^ih?5mn#A1+H]MIE`LV@6]Q
%deTU=Hg'sT$:nh7C1:Bc%b"R^%2VQ[2@gj%rJ_0+Q6YXK^J@i=NCD5,/!f1P%?is)1eBtQl>uT*EP\20]O.04*EGlr0Q!u;qJ"TB
%/7am^O>j!e5q\NR$\QWR$mEJiS#-?]k1GF+g2C_lV&5dU9,Rpj!'A_J*.*@*6V:+sEL_RWAFjXr;O1bV/9nb"$3;u:9cshEZ`L*U
%g"HIV^#`BRZGHDp][a94a!DXs8Kk!d#ej8S&7[/\<p4!h:FfNr?qi&W$:uqs\llX=;ln5dfRseLJD?tq#<!9m::;jJ=t%a$@Ls:l
%Yh!b&G""*_-@\ik?!&],4U!JF#[&S%qO,022V'kBZdYodBH.m>6[6S7NoO9IF!;hbRC#U$?rK+GY5%R>lKmXOp?mZO$PD4SUFRJE
%9hU9`fbAloJM;4TC5R012Fd;Zl%TYHCF]liaASfRSn%I7LTn`S*FJgao,B_H7T0E`8?/_qdBIc-[m]S)9kg_G:Mq^"TC=#nD_?sT
%_o`Q8SElPY`!t]UDoa11f%J#FNl"Oj8A)/[L<9&a"GGB+Fb>t3%bXgE5*fDYZ$EmGio5n6cGEI]OF0"M\H%'%c&k_NRffFVd(hP2
%K,Dp2H#:-pYk!m_$ZDj<Q;DTm'1Q5elX7]5fp3MMW[4T/bTUTf\/$#,<FlR&gOEI)iGT,VbUp=),(s[8*X/uQ=%u&L5$'UH2MQtO
%ff+[R4tdR)KE]3sBUllW=AX1+]p>Ds!s;2oZ,.@;5,^i#^_%&n7V1_/c:dmo[WFZBcAR*PaBIl3C9^b_LL[Vs,^8Wj6I\`a%LE.u
%Q]s:KJp3;^NW;Bh$8Kb:3Ods]Ki6jS?\g\Qmq/E=P+IB+m",q'`W:o*RrjSeWD:$A1F6k&h&1KEK4?CU>HmBASK^b9*11HAZ_d@p
%/^%O"&\0Pa6kg[Lm)RG[`Bis;kHSGR]Bsni58jsF*@'c.2?74I8Eo5sDkHbcMT7q7;M:Y)@YEt0/"5_\"\7o1?.Th[A0Ko^0kO''
%7EPosi#I!J:\ODn(3"ILE$qN_11s-W>sl?_Kc8o%=\be#fHDn<K;g[EKcl^tj+D'3JI?6).*\$fP'<E#_][tT>M'ZNR"glgSXphf
%0BHZ[V8FR6#1+pX)Na@QB.[&Go4pD-.&qLP2u1:roFO1q;B6*%/D&8%H<IhVZTYWO<>\K[+[oofnc.d+NX/j>m\52_O\FSBEY1f!
%<WZ2N<4=F-j:C+Y-9oR[D:W;E#Bn0$]=,u,9>#C,bVL!gk3tf<"CjDZ&H<[W%.GpoU_]+(9,17d)S(mt#=-6sLuBq'nq/m0`[7'/
%/c%E1%qH/1Q6GiBS<@dTW\D6riu<]-Zc:dsE,;C8kq3^oAM6LbRu!F@TUpfBqFA.2+1s=FiIX(5Ylb**ic6LV$>kUd/*Ra#X`7+r
%s3HlE`S_"(rdatWnghb"fnPYa<M]Z'1o[se\"^tTI^#MbRK_*iJd`4"#8L+HdgSkp8b)t<OR?]X^OAesJIk*)pfEK#PRU5BIR3,"
%($,*mKAfqg.TDO[?Q'QjJ'"bZ0\$+?"/Q.h^'h^=Adf[k]H(DNA6098`R<heoA/-a[F#lS/&R7SAM+oc\9.^Y_b+Ir++q:2&uXVH
%-dN2*NSu!>[LU'Oo&G9bH1)t"d*"@4rc\hCMe;eO"cWP%i58VQcJ6alFp@]U<Vh?5Dr7]hSaj\.Dl`S51Dp/`s*IXd\t/<I5t_+0
%h:bMsrZa1D?%8^/rr!:,>Fdf,q"p[#V7n32V8i"TGOpHHL:dIXU%kf)ji_k8cJ8GY'J1/r+)/_j3;l&o#_1YY/H>EbZ[fdi)$5kI
%egO2U^A\A)^ON;?/e9Ek%>4O(4oDjdrcdR#l2.)*r9mt<s"7:m1k5N9ORN2[/GT9JaT"-1G76@ji.aDT5JPkE;ks$\oHPCK]Db=Q
%DcIIS!rQqchu8M6=MoX0Y*(^"+lVYBoBk;)f]?-2ik4Jnn&rY_/)0oL>JIZ4_l"Sn:%nLGfU`W7rcDMt0'1ciH]@1WYhsd)rjN5Z
%1%-4\NsR;g>)Jqba9(l*T+P(bZhoeca(o0eWDg>"$Pqe%QPU=9bM((!A1lB$RmPa,eVISBTeL31MsOG)O/'j-,BD<$NI(-r_gfI]
%'\g,Yd(tseUIr-Ur$/N!poVpR`qJjc.$:Cjguq8>ULCdbBgd]8Igmb_m$"RS`a]KB(t]2gY&oE##d'l]X37F8eQsbYQcZcC^$]i[
%"rb`*9Xd.UeuR<d'BH*7gO4!&dj&V@f1H4BcYQ*,UL?*%;Afl^rRRU#%sF^;4T7`PK._#B&ZGh.7jRe%X_)6AL^04EYhH5OlOd;d
%[ia!AID=uRRAOkNhGpDGI51SAfLNq`NGHo<N^''p4PI98K,n["DF==c=Kb&k<;V<fCXjY^%r(;uHBfNXa.W)dC'VKer.?SVaR]_!
%?96or$csgAht8i0a-4)!Y,>4/9'<\+TG/qS*?4RJh\\3H^GR46bsi'5f!&%h6)2*3HEt$5mT(k*P=BK?*X$ge]W\[/7\bEa5jk^/
%[f"M(j_jPY0B%r.hgVGj4`A0mh\uG7$H%L7SuB&$4at:>]C@Q6kp*=eHc-EM7g_K/B2qP&eu0%7,IHo3Vrer4lhs;d20t7P1e:P7
%')Ca\^lJn-d3"at4cG&O<ii]\%M4Bn`o+tj<0j!"4J"i8`Z@,[%=9?-h`UNpPo+`0V+,g418KU;4W=:dr.)Q]f_t\qpU[b))k.`2
%*UZcop5>n5H#ihj+#WnI?@sm:i0)_U,bXY1@GiBEkf],Iep/;i1J!4L,k31e>o^9,*\YfP#hhLkqp(Y/g3nfoE";`RhlVARJp*qH
%l9Y+J&O+F!*.$W=TepCB`!X]Z$GI%co_,n`ir3L").'H]+fh5fi9-ooT8X*U\0loaJ.'Q9K`rh'HV*C7^6J'T-438>J8BiK\:Du`
%Fngg-@H;?m&[H\p%dDnE?T<<&qhQk>fZ89JJL-2\3oX./iqMHh%4O1`B.aEd8D"?-jU#L)3YM]G4(a$"DrqEsLPP$VIld/Q>0!W7
%;or;PdYOaVj6K@<f'dq%)DLYdYNKeGfG_3U\VYMNX3e4kZ^L*6$4*8!54J"FHo\g;h)8Krq*,q)++h"LI8cU1l#Q*L-AWO70Rp=9
%Thhu?aU5X[Xn2kUFmP74BQ]d"Y@b!2l`"e%1%j9;K:rhCV>&L,s7oBu6*8bArUH'XT-au`qiPWa_,jl2VdZVHdSo8V$2Nc@;bpbZ
%7T,U_V='(K62RZl<@4eS%U!]Y>*#4/RJCADh*,-jnnh0C8gt6A^Zs>:VaBiOqf9<66+&RtXaDF:(s]U9<<3*sZ?*/&U$b;/3J/tB
%&??)uNRk#mnQP1l%%nYY$6$XC0$rd<H4CkN=pW\>0?3jedt";'d``f7mQ8>9ljQhcG-BfiL)f2s;Z#4pk7<N,q2(?@Y6m\a,NY\;
%='M@Wk'tlNCa:99U,$A1]LH@%fF!'e.J9YJ,g08*UL(fFb>)<7`f&kAR<G[_r3>pk?EI9aPS9eaZ,ecs[0lSFm2Ln3]@%'+eZV&`
%AXS>rS]5/NaS<_-7;FTW%Ye=%Gqa&]6tT_BoY8mNFI2qemmFb6#4C$V+1,+)kd3^PNnqJIkW*[0m08=hTfDN4.>3ogMj^L%aVi\T
%eNY8R5*</NaZPZ?d(1?-Y4f9]M#(jW&bKu_kl4m9a23C'bh]`?7dXig+9n=BS_jT%hl4j#mU4,GQd;5BCWail]DSgcceU6sKgZ-%
%fSAua0OF/>&'nP+T;G5[aEaOQZ#aJIZ>_U,3^5a<M+<$D5*J#9'TNG_R4VqU59?b1mgmE4f,+B8SPD,N^%WN)?=*G:n5UkZHB(%o
%n+quI[Z;j:Y9"PuOV@bTPh;>HD_ebX0ga%Ud:0%E[oXZ"f;$pqY/d4*'a8r9Ic!t_HBBgRFOWNuf]`33WAj[5DanQDa;HMsP/2tq
%N)u]tdZ;!4qid;;TIr@Sp$l>>:HHYnD7jcc77U34s/%=.%q!Y?Wd85=oD[74]WrB']b(C6,.@G`hqsj00r+`#ctf`_LCqhan=r8o
%hlUnc-j5-`-!HNK1>\4W:c7Y/AE"^6S7cF.[=pq3Y;AuL`T)0q6_?^*rh.[#(F+@aFn!iE;;TZFq1:^p6IKb$]1sW[iAH'CTXV+c
%8\NTTDGui@-FE>X!NH!'.J>6D@7JPHSI]M0=0r^m(%8W4,*bo/(4O"Lono[@0ImUY:N=qah,E?TM=pl0ai%[RRE_MOA<F=M$)`n,
%rA5h!AfeAZeS*EAc,PO'2S\UXX%%%V8@/^"$4e-`*I98J>Fq!g9"F>+a39aAeG63V1XTmC0QN4tZM2biolWF4FL^G8'Iu!<[;;hQ
%+5>7G%\hAM\ItGj[SG8oLZtMe.dl3lko=#iSr0kDHbDZDr%f7N5NJTeKt40rFFIk[L3:_R_Vq-'s3WZ#/_rYJ<p@MD++KS4p?c@Z
%50P"q5?#j>2Vm""/"1lQ#;^dOq\H(?F*%7liM!]nK0NH4c`HQ9CuEW,dCFX)>K39mr\NRSlTP(u5D?pT1X=BhP<Qt;n7S/dfpk]H
%(?pk`oU7hoS9[-Al-nVm*\ZSXKCTZSjJA=@e4F[G+-J+'>Keu$Dtro<IjPO6lYlCi:n`AD1TNZ=qu!AEND"&nbh&LT1"X'DqpW-^
%H;B60=d^bBk!ti(^:1A?B:"cORI]*?VHCnlBLM=bgHp%/q)[E'gR?7QNq>E1)UhW_iL'e)9J$%9jgXo2/O+ZsX?<#P-\)+UgRIW/
%/Sh9WBU+dJ='?c9bUu&lXsZ?'d,Xm31E%f,D+YQr]Ng<5d'qJPU/#M3ZqfCt,9EcV*STf6mN&^M[(O[_b@&`V4ajYb&hM[ITue@B
%2B;\X+Jisf0<\,+-hWJPCgec)n;?@,O)K6!r;+T?@CCNfYaN20*jRHBou6RXALe^_W*n7Fa;[SYOe=o8ns4Rg5)tN$`U-%9g9$q-
%>&.?cM8K7`RXX"ifnmRPn\ESN8$tS]>^G)VN@*53I9TUKZa6/N/Z(V?emf_%7I8Wqoi/X[fWY`bc!iTEI.7'>[+e7kp?T,43jG:T
%Q0lE=@A0\PN\\55YpT#43K[%Ia4L.SqXtm<QYiYTHF@\9<,Htrd*slMg:!GpEGqO!;o^sVpKfdW)F^82fn.f1bc(JN,+Y4(At3CH
%.c3qVkkXTErq[mM,tIuG@K&&$MlXs5N'd+!<.4'm)U4ln,eX(\1qKqJ`(HpQ_r;'5;pkBV`ERFmfj.uo(Yki>;L@SFnQ2eOhfY/J
%Xn-'bOWMF_*IO-*O@NrY;mWsVdF_q-+?HVNWmM]R[!6c]d"E1Y/M!=<q2P)j1gVSQUC4[aWG(:9.N;YU]/totD[Oh<<&GPS/j6Yo
%U<;fLEE!t2NMmm;:.P!)W>.:'=*LCi@dG^^X7uRkPMXodDUI*o/tYW%U+8*M\Q<lip=t\2YO<H#2pTtqUZmf-Lh;tio$Q68lonU?
%m8$617rRYUekGNZ\p`4h7<arj9Q[HnF!!Qt8Aq8nZds<l\=.,#9AB>5oMi@\NLl-$VkP!``Bs4^IdIHjgg$B'dC\H4:%Y,q/k2mS
%-`(MTU,O*0f%9Yj:R"[E?Y5S*kj.g$>I8aEg5NbrcJPA67;Zfi\m61J`Hp59WS)*(G&%$@icHZ4gJFc1K:.KDA\YN+V5sKs1sM9\
%]Y$&^*6cZ'XXn[6VUjo[X&J9^jkEc&l(g.9]\><@[VrY0;gUH-LJs!$I:MQ<IGC5O*M/Oo/eo;g-I\QT\h?M@VlHpWF`V+uRqeMB
%!3`Zam8WPqfu>kd\Pk":<U*B#ArVeJ=M.WsO!RHM<_V$sSX;F<-XtA:AIr'o=D>e'-dPl!r5$ZeCoa?G@sdAlCU'Y(@j>$'?;&9j
%A+@+^XkT>&<K8R-=Q?[Y)LL%YT4s`rk9Td9)pDn8Vl("`RaZ>9\]<sQh<*1nZEj?iD+7<.Vqmj>\*<SA??A5p=6HHioLs:O5B1R9
%T.CK'VU&2aS's;hB1LF9jk06JF+<puqW2->RdLVD;_ugdd2G_81OF,G2j5*'h9;f&Q-P=GbTpe$%qaF+Z:_G[Zh\_@1pas/(8!&/
%WV"EreF6r0Y5RoL;h&[f1XGe+7l.hjm<(<jY8FTe0D4AYeEgshf!)&QAs\S.le-A11JcKDDH^\bZhkOlS_<T#inEbLnRcpPU9om4
%a+ek&gW?(cAk0u<q:t>p4?8aE/7$I;B=FkNQ/e.!\a44cR+jeUe`Vs1ei2a:>P#P=]@#+,>gp8Xbe<F]hp2a=dMoEFF6dVhq,GhV
%R($=9H%,/6)9s%U.i7gSA0^9\S^Qm&btY#m?f1,8c*t$:2*]=Q:;uD%NEU]YQT0lWH[G)KNOqJ+^A4':`/deLp%ZL$mQCKqNUFej
%lX`a'Iqq.._G'q\Z&kEfN\+ABq6u';/`UDN9:p)Q*7&dY$^]\hh#[b_2[_:@gZsQ%p\m2cO$DJJ1oG\m=P9.C-Lq[>1NBXdD^Wj)
%0D^OJe6jWn]^MX/_l4<=VHKG(O(B-8iqC4JC9i3"=;V`VMhe]+D"7)i87/G]k_7"-lH=HnW`+@<->1mC8UEIc8S/IhcBGm-AiG!I
%hWW(:S+HU>9BtRe3I8>9;Mjc5I`e+][SuFg*i;NrT$<n*cLt;:;jH1fX]0YFdpAKsd8uZt-R[FjV]IX\EhfbKV8MDg^3"M/F14Qs
%BJ-t=h,Ta9q95k5T>k3%%C8r3G(rLAjm4^OY#LI);sDZIlHJu"*_iE0#Os*_XV?7_[k#V8HJ5ba[ArB#C1lkr9Ug<CAMe7@/toCk
%$Z0`>GB^#l/>P23HD>"dDgS`L4e=<LFN]J)kW/7n<'R[p48Q'@S^sG-*Z\bUr(s)$N29r8@B?TbZc::%@`l2_Ql[0*bNXR4d&.+\
%ialP3]'&dO\XCXcR&<T4EO1sY<6Vhj"l!3_aDP+?qQONGZV)UFHr@PbWpTVjp#]T+g']ioA\7JY&KYi]DYM"3>M!3JHG@("&*e*l
%qhO@[lIK"^g!+(;kA#G,^hN25TAA..>'%*kmZF!04mTZ!Kr7rFTeT91n#S,o0=3?mQ^<V/;)2JtS'..XVquHp]U#I0<i1)qh%_0D
%=^9)3k6<Hur9`?5rHr6qAQVgT=-`TK\XLf,[oSQ]C>5d(k9dq>f"?<295\"sf%(Z&n[4"l;f1q$CjL<-[q"^hMjq?WosK2?G5Yfm
%@=.tPC*+Y(hJ;dr2j2;<bJsBEs*!G,[s,2V.5'aAqRqcU?96kH8nVsg/mXp<M5KUB0>1'Ome.s%=0>bq6N-I0F8gF@bWO3OT!EF<
%0@*eqGk@H\m4&##?$8#imIb6$RO4@^=O;+,D/VR=)@gt3c0FFoIemMQceF3[KDa#'.[@b3J'-i!&,W3?dd2:\OED>uL!uN)VU/Lk
%]e%I"57`W%92BHqT^d&+X<%iVS'g?mg8:9[mP_Q7#FK,pG,D^_q3Hj2[hO$F\!92C^MI1<("Tj#(YXr)Mridfm7]YA]R>*3bABJU
%S,JoQ83>I,Do<8MV=N+&cI5p+I<Y\[HEb#)Fa(8eH&bP;ZSgO-GP[YQC\JaMi9llm1(/G)B@kK,EA`'N^Y[,qp<0?cD>uW.&j8e<
%O&#uuX)NK+DT3.r?<;(9LT173b$k9Ed13@X7Z3%?KpT=pmAU^[g>9=W*Sh7pL<%]rk31GHG,L?2h>%qWk.$h`i[==j8'8r.rbS3s
%3D1;=Y6UseV5;2uBk_YQUft>kN;(KBWLH</.;u;RO-\r>bE'PQolQmN(-BcImk15=Q.!^NrUS+SR<c9=T'\bEn"2IM$d\#+Crr>a
%c81O+e+5)&B'R%d>VB>a>IVopLPbhlMoV1_g1B8Pg:kegSlRL_Y;PJm>%ojtQCmk/Y0)[Gh5f-oI.(6U%Ml3kouF]1qH\7B-GEN=
%hW/9P=#W(ghYM*]2Dn.Vgo_VJ=)Ulq97+/(Ene;a.TYp(0RD9^CY9)npSlWj_Ys2@C>[VqSe;QR@sdj0l_lHIGLs`9AU:t7;qX^6
%SQDuB8#=@AqrkQ$EcQ8$4fb1q<Vm0SPF?PH4JQV*V1EqulgAXllIOtTF8`VGo]r\nfC=U#UR7%9[B",=SQe*gl<A27k2H-TW;4k8
%l]8WSDa,;/B($gK#2SL,Ib\(O3a-hmHYU=fq^phT^=#&+?+t3!%e^I$5$LObmH;nliq9kV\@qUqcF3$lBDIMb13i4eg8fp;VgUR'
%)m<0VYNrCVe^EdLSQ=P1bg!b@S\gnCe#=oJCY_E@2=0aIl0$m#lM>6k;\!<NUXK*.YFC@9cno[d_n,Ye^0R/l8+fiVT2+46p$W^`
%bs?`Sl2KT5TIfV!At*EEn9FYdD#=-e^>88Wf'5BSpF=(YGL3kA:4pP2#6)9-I#I_0lV7!&g[4]j5nVq%jR8VsHrRWW%?C"uqpM^s
%WE8q'T!k>3J\F=FnEY''o^rQ0?W=/?-'\:l?LPLt]Dr/"AHPcK-O\kHP?>,oqML9?3a\GgH[Ug;_=5*74_lp(pIb&=VoGAAWUq-l
%iDUsFcfcR*`Xqn1#Edo9)P+sB!niB/3Y?<ecHgbuAauf0n>1O(GJ<;$;H&_,!=qm(%`EEu"96ah7=&fs[+gEol7ID$b7K:ii]Y)Z
%Nd*/h&u<JP:$`D;U&@K9>ms\J6s:#1W^PPUn_>3O`=e6cXdT5V%e0=*>4?\_cd7SX0JTo(O5stBX6qlu"gnPs;<J+$"\jCh_4FWQ
%aL-JtpK^(1N.iXQe$lOUSWgJK9`M.l26ZaGj)H.UkT;H&)_P'=hnAq6)Th;k<-`:rO5Z$]m98qe?Ge;mMA.+43@#LH+[rq6:V`9#
%NH`1IM335ooDQfC$,eEGZCR[GaY7-n?';c`_St##\$FoYFDF\NmV=%Cng,p:^9>S+,8MQ_@p&-%BXcZur"2W1gZj#A9`9"&V,<Lo
%6a>A`Sj8jZdm2hP^7;23f.dJfs-/m]1:Z[W%R[_>Ztb2BjU_q%-NjFi/&OjPC%PTr<*F-7:qk[V/i[)COmS>9IX*I)99g+!$E-::
%liPh;FCPQ>ir_6AD+s^g4J22X%3OdM8bgB(r8-hUK\YY?G##d$pQ'5)(Ep[el<3oj5!JVWfT*\;7joWhKAQG*)KX@#S;34<`eUIg
%@D*-"BH*%l9XXcP2`hBKJr`pYr5A+(loMph3,Y?b+o5MQV%:R"G@,:I@t".IOSNDPo?dlmGGb4p9,rFQ1q)^\ZWk\?In'7c<9<:L
%H^n")R[RkR[83=A#K1p9A&aSbasUHjJToAgqV>mt\6&L$d3&9<+pC9Lf,L:-Lj(rZ$"MjQi?-\hfmC>0UGu`2d/6-E5J8'3dg&6*
%MQ^;7;eX%7r\\"m^Om\Wip+Mep(N8*cYjnR2=j>Cd#Td%KFGP`Qr7V_-ELIt:H3iE.Vro@c<_l!ce%;[.Mn")qWqWGS*k4/4tT!B
%U-$?Xir!&a<CmXsXjaD('jFG*DQ`FI)p<ReF8P5$W+HhRg:fA<)FdCt#5RH[j.\<"?F`]\UfS@ZKCiPQ>G>i[.so[Xf5##dIG?m?
%9<T7n;QdF9?H]6EF-#ePg8eT/KQb'hZYWuc%eJ#U=lV!BR!J)e%5Q\7iDX4AMN*L=A,8=bgn)EeBB>W*:A)NPVJWeVT,h:rABMI4
%g#o\rq^p^&='piol/b4r23D79)&;<nlV3h&kuE*RjifZ%cYXZm>q@q@:W(tOIAMs$jC'rR;to.sWuH-C@N\kH+F!R)f;29LD`B/(
%As:O3FJb:]Fi5IV.eOBJj$(d:C5&+%4J-sUmT3FF1\to3Ha*9q'>i4-Xta*^5MM#XXjh*N(OTsD$I-730t"#4<U>0MqI-pW[o:V]
%B/\n8rPZr/ZWETD_Zo,bQ(9:m/6aW;\*6Sa2YWYBgL"*h?Z4M!A#GU8W]t#G^G@hob1UhFqcm4fbH9PtKp\t0YK\F2)qhZJoIBQR
%\Mo_tD6Lt)$]D0E6cT&t[1uoTF5=IHl<4(3=f]P[H//)<$uK_7>)7_]f@IKTg]=D*ZS-;K.0]@F^8Ip=Z2OSuATbEu9jI?GNJ0%R
%GSKR4djWbGD1hjZX;=t"Vq(CUY3;K^/3Ja9ZqG8*,ks\tXKNEU[J\&)RN1O=D0;]SHuR-]oN+`H*G/#a)X<UDnX"26/4#h64$g')
%_/3d@S%iTVj&"F5Y,peiVOW-2jI8fSDhUepDE;Q5:QJSdo(VI<nl'Cm3L[,<B?HYQ&]iV6QSEfbIT<n&fGOE`'#H^WX`lG7BMLY>
%ht!.Xg!)HKKfYE^`i[/ml`l^r_'P%6dhM6#`*([$fI<]prMNS(H2i8E\`B-[^-s#H=A38;mbK-Ga1!*:]gjQg>RZ<BJ]-8U^6ii>
%=_5WYVLLLhQ5F;kWcliAjl'19]JCP@Vre+@6_sIdJ'j=O%=euL/_/!;P%o*u2N%+4]m/te3k6_>Q.:S9UYfEX)FnQnr^m;^HueRj
%B'skBQFYQ,6P1f[S'#Y6gD+E+"BV/BgZrb>n1M=[bVaSa7GY)sMn/]M-!Se.pop0'>ANE<i7;jcm4,_JNic#,!Y>FnU2cRXI$n]q
%>fWn(-r?AUkM>muSa9FQ:Q*-8hGi$J'._)="AMq*#Mj!p2/$-/3g8/c>!07,($o_4YrqnU3dhWrOR4FHG-6#$=W_S'VWma?bhg5!
%n@nmj.6[%YQWe1r757&KDTg1epUcLNZgr:9=E'9RBU[J);Rl6GdOQkl&%(>t[<t9!+1[*ZbM0*W""R!U,0]]Gp"UVAb-ee(8\;GC
%mWVph,#^I6fI'H&WQadAWIsf2^nQ/rmaG`op+WuM<`[7GaMMc-R@1Z+EsX55idErc`#Bj%ghDjbRFR.44V9r7QSHf"H@1;!l=RN0
%=K\b<+cjr@`@n)%lYDg3hb*6,laVu"7F@s%hqd*\(0:lUSA41A4>(_Ds71Vb-JRBS;W-/LTW#<*d986PB@S=*BP[W9XkoU\o\&GM
%6&SOrjj_Q1?5fHe8^c-HV,:OT:`&;9)h&_Un`(.:Y2"arZ`oNOIZj`<8pf8H^0Td>r>BWhbDMuKX3%)Q-M&V=rDg%O/uu5'k`;%B
%5?AW6%YB8M1mi60N3p@tFoR:5mXjO?nX=\7fF8:S&W=J#`La=c&?(Pr'cnroL<#[W&f1GnXSetd1^mM*-R_3dJo>oZ)Z_fbB<4i>
%ZLbSHlk?)2,k\'<%IYY%i;/f<r@p)T3'l"e0LIr*H3Jrm7[R08'NsIE"b6)>rm[FR,&d`L`mFC>"Rf!lLdgn_IpZ[9i(ke9+,\)L
%A-8Csr-\b>1+BbS2kSN6:$e-&aJ6g[Y\S>Er.qKh.SJ7cA6bVVWDAiAnM)rAQ]hfKj_lMYolq,u?q>1T=M#U[06[UT1*<I=MSI(S
%hi%h<Q+JJ#/U?-DOup%,085.[%M8[mrP@)MZA-"P?Ut-b0JZELd8p2`Ga0YBUW*i?P@/sV=5,c/29D@Qld?BVR82n?q7'&ukAG4T
%Iq6]7]:ED7<F:7eR+],"ZC(5a-t4&7c`@oNLZO6^MK0D*'[A>>4PuHp%`K9Y87=95$MT0<,B",Z%=.&'.!\`s8n`CSef;Y^n`s!"
%/UQSoYF*^EVKY!m(uJ5Cdg)>]l0]sC+h?5^o",iZ7X1BgI3Wg].@k'C_sQ&B@W,t0r7cBLmEY@:SDtk9Uh=.kmHa=IjtN,bilFSY
%?*@bFTemM3g%\l@&W"+u4$C^<2`iD_Sc6LD7g!;GXkW6emeJSHBXtS#R?u17@A>Jc_EBDBY5BX.V\Z88;i@jN$4])/e,lDup??F(
%2r?_=Pa5KCf+_+!hJseWf<qUDYHt'$;^IkZS1OnrMTpuGr$$2abWh`Wk??3_dRs+Rk)i!f"dR07ra=J.oe':3%)O>/iKi3,_,(\V
%3SOM9`5>dJ$O?"na(0Qbb]'Ye5>V?(31"ta>iq>UlYF\,?fRq#93#:hqGY?U>D>i[oAOA@=[9=Y0iT%aK^;>L%B\]tS7?_JLjPd"
%7pBgU*^P*+Sf<?KlFo)uF0qciUA/]BmcHG]m3ZE3"\mB&NW$t=O/)67M&\uW>/?^'iAf^W9l-!C0'9Qd]c^::doj0`<uA3Se_-;8
%oZJlDh(HX'L!JmJRrMdU:BX]7VjFP,]=,244[)KeDD#9,A0G?&3KlHe.%M+En[eH`+S4Dl`I8\)O-I?6C+mZ(-]8YleI-VcHb,%d
%-e:6FmlgKX9bA=C]@iPL"9ncpbs6Q@;3e]8^1_<0i![;-TIe]%gBr>N!=4,he4#H5IPCZ&Slu=p#@SqHV2c3.B9bDoL9d@VftEoM
%'_<b7558Q`Zrql*hQ6CXoP)fd4tmZ$k!rSWK%K':@+.$*"s`9;HV>cPVR`bS)!+'B^8G#\/#RHf:f0qCgJ]WIdF!$4Hs4(V)4'#L
%nKtBeEjh.FXe%(dTUs^eG+5,GNTt^>HYONAm>#GXNtihQemq4U1:-eVd3sFD`hAY_N?9=j`V<;WV3j3F[)Dh&mDA`DIo$R[NOp!)
%j6YY$'9a-C=grQDq:%u!a`enUT2i=sMOg9=-B\W]HZ._@Id(;fm?)LnZ1QPUHN6VBEcmlI2/,h3f1^F</c0k(%_">3NZ8nh_i]C:
%j?=Fq&dq_rjMCu_K0WSgYr=&DI/_]#Bl6ome&rQHn5-uNM\P'NU(.Vc^:JQ'D=QO-IkJ>_o9@N2CW+,kQ$f?N\Ap=Y(#(NRB[cOa
%jo)/dIf$4[=!l8&0jV:j3k+os3KF5]@BmF/b*_G;FeO!.N_`&?ZC:SKo0V$YS[&Jn#A9Iq?5i\(-JpJ+F["VW\tdKsajTQslcs2W
%f?Y8KRo%TZr6s@4aj&ZDKe56]`VYpuV9)lJos\#^oOAS:@iE0"i7BC;<-sZTFmEj@[Lnu@Vj41;P/[7")kZn#XmU%A_&0o0`M*m+
%g%MJp,b]LoZIY?Q0@MF7=+.hDfoLDG?#Ac7]C9Mfm]p*$=5VkY\Ou!!pM-juCKN6XEk\8[gJ5si[)KLTHMR'?btJKaRs20VV]0EZ
%Mec4^r-me(S:5f<+L+58[C/:j0,J7NeqS=PR6/K\D>7P7jnTjB[8jiaDq@aEZGsF5I)l2t=Ho>4Ea5-lg":ATDMge!+A52$8DJBj
%Q/1[u1]J<(2=0F2.Rud&CEXNeKS(,Dg#tcrY#jZ41\VIOeO"ECW](ubMmYS,g$)E)4uQW>*@>Y2GL+/FQS%*YFE:Q_Af#Co@X123
%?Y@OCg$"gECi'"/m`D2hP`7h7P.a(u5*;#1=>?/QV:[N9NTsn+^K<Dm18@sTqiWCm1U_Z$kSaub=5%7eq6UP-63Xo!4P<jgqdCH*
%C#u[\Qh9Qh&'%)kG"7u!@#RSKAT##A2(ke%\(5GU\KC3=`d_Knbbo?'R[<CD8l#fMYQA"m0)X`>?h>R;emjq1>e.ZfbGl4=.)mp$
%L7-jj[2tcZD>0]pYJ7Z,@j`>)[WsY)LG+^>2&7OLqs\-N<7X;2&EYokd!a1uh48`']$QmcpE'13`D!m"`AQ-OTn*L-5]HNA[rdhk
%h-F;!0q<Dl8eqeLF2#/S3LTHJH9P,bTY+g;'f5/YCSkb,[k$j6GG_<e'IW2$T"qS-o"3XT.!/0sdd#iUkd$RVLA/X]::1pE=B$`q
%4iKdk7N/'eO?RPATlKaZq7&s\mBV0'*Ijnu-B@R@*EJ'hgTMLhl/j*hbTH5=MDIDJm*'b80s,)lN'Jh'F@;aQ\;Lk!1Nk45bL$9t
%d]:Jhr8VM<CN^@[jr<Scd,-?Xlm6/cB28p,KBb%)ME4<^A[$Eu9HXd>?@G(4BeQO+S)k1$;!3#e8?@"kh5A/EE,,'2b-L[:8`?!C
%i7IA"q#g`rddi[Ok0<&4k,h!;o.gYq*psb]8HdJj*1u^t-caS7H9\#_Hs-scn%,pZ/M=sX/W,RI)9OeaD*G:2Bt1Q,H&cP)S;-bV
%Y#T:O`KeEA+O>NjBjk*"X#Gt.]:3]*dk%fF2_f^-cBP?BVFW*mC[*YO3orJZ!iY`ln'+q[^u+W<kPAr4?9(23b*5Ang3X'7p@I%B
%XTA7&lmjZmD&"/dBACh.K#?\M'Y8>^otB"u4SJmda6bM0$J"QFnsb*ig%3rbj^EKcqjNl]q.sEd68?U%_$.*U'uBuFN##=,GC,$r
%C#0LJ[hdgK*8`sLSMV;7kPj7*EH]iIA;sHP;B\ZR6`E.kH(B0#S>HY\m.9gG3knrb*p.\/kDM;qh%hA6R<I\W,Gr=sG!"t`]n>@q
%&)u<VO+LRRiV$c(8Ddn=Gi>6AB'iS-)s<d>:t`S>>b+\!D`8B=eB5r>GL]R\iD+`RV!7m3r)Hjlef*5'2h8mU9$A\:fAnG7k4?jN
%?Ha>U%bHU4mF9SZ1p+C/8)hTt_-XiKP]3@]R,j5Jn)tH2(mU%72qN3&oA-7%ZT/j(LHpFIG3'o2LgNj;GB[r^nr;23WIS\,,Bto`
%D)ZfP8T'iqjm(gk:ERW`/nJBo>K-KuD6fP#CQuk8oISQ0Bl(GpiJ>-h3r.j`KSu=h=&/Rg:b?>*o8i$MCVl817a/2G^>ftU9<tD0
%li?k_8"$ocld`IRjs]%ihB.]fj4-Q@H;iX`HnAEFaY1#eCA+Z6BG@V<gBG?fa^%N7qkYKa<Q2S`ID*`<9G$UTat>np/J[lP$m0C/
%;]%9VbSN@/IIa>uGkP][2(?G/M'3t_fTeqfH2n-]Q;J-<4I%ea7Gqthp#Z*]aE5Q7jd;jN,i<=uUq?A/XhVh^_ML.kS=Nm?.kKOh
%U\(Y])O,?3?K@)a=s2PqgVQ_"HI4\q[9MPB]Y*\rYeft^kS*7Y%$Hmp2)=@:@a+*ZDf&<9Zp=nCpFXR(nk6":nb`qr[;)6ReX&g<
%:D\pFl9&Y0a!Zf@SS1q.mm2'`WRfa,1W(9.34!6N:CQZ8L85PsY9#e$B(n4"Kr,@ghpV(.*E8<IS"isO0!fm>G6/?VUgU?%)bo-K
%LKf)XeJEF1MYE$AbEKR.#:^P$'<Z_1TSM=_;fN:[kg%hTr;h5qAu>G`=9<$o0RqigN/\j+#GtmSVfK3fOC0Wm5,QtW^Gr\_;qu]l
%o-VVQcDOV:SOC[1:Yd'e(M_L>3l;TU[11ge3].<5h]n4e*NP=[g?Fm7j=!sPg%U`!egV2<8ld_'9VWH+:5kpnB3*G2\#3B@ZX$W'
%[u\!:l2mf*HH@+c9ZL#$'X>&<HQJ)C$iG=0!:#f+cFRZW?A[(/=/Ofoo0+aL$ZE8pWju1&)V<pTM1sYf?C=Q3f]AUMgk&-I_s8!_
%"/j[DPZqd"IJgh5::D-%jQeLPn5V@#G!dpj*q'jG36haFMZdo.DZoKcIZpt-%M/*gCT$"1=(h7W*WHS?J*6JrXj0Rd0ML$.,QG?@
%p\(9Ic:\;T?M_d%K1_Ed)Z-<'YgmMJ1(u;`H@PH;hllr!gkT#-@!+""oRGD6ihoUcn7/KNm6<tQjN<#0J,VfpW+3T)D7^DX1pD]V
%[#^Sfh5gPH+7n8LU;eF)*MsN&pnQ`@3o/'pj[AQal7GQ#gf*rGs4'VAkWOBM4+i#8IfJRq7f<:$,h#-(+ofuq@2P$B590%Dquag=
%X(hJF]8EI8r3OuLh.iL1qUsEoLXP_Id['[5ElJ%jmu'F"f+*4TVRGA,WY4!G>i.#nqEO4;M?r=)+[qQkXeo>jO1`nEjR5;.D0nR<
%pYW[Bd1;\_:GtG6fs_F^gR[4Om8j"k4tEbsARbVBdWoXfQBu[KI](T6/Wo.+<Kc!3<BI%Xrd.Eg+)0YRalVS@Y7Ck%WRP.I_=Fno
%WT.>hORhG0:@Pi*qI4gs^*67rJY+gu^#d#IcbfQjbtg7'p#2r'-TYi.T>.p?rGU(Qqb-SU.-]OhS*7N@C#S`0a.j!ucM$(+a+sZi
%o#J6,D*\*eegGO0J+WTb0@uuu/TU-jm(<%PmE^GOaSs09gp.RFGkBa+rRNA[<Ue71V-eN@J#$IgOGUe@%rG<-old)prhHl2IGWZ$
%*rimaAnq88jJ:tI`BT(EBW`S/?er".6g((AG8.?AquN[Xm@rjt.EA6UT#i0dBA-D/,)7IKHjch!=KW_@/MLq*_*-NPr.jBiO1*11
%YoIi/2ZEEd9Pl\@[*4bCk]V1O)@;M-=[jZNfdYZpXb`rj.7GOeSlA]Kj_A6qgMhgG<c.]e<G>c4-Q;2L,cR:.4a9n`Ql&1jF>VZ"
%'cX@To,e0"_2mlg#P"bWdR(<;2f]V@USeNhR&4iYP[`%]Q=eN.aH4kKXH[GR]G/7ajEP])__?q'B#L@q'pJWo$1Z4/hDT-kCgBk*
%eI5n/ktf_bY];(IC=)"0V@j\Y@$SHeBJ):Z`<Bc8$.mZ9?AP;N*7ls^/d%VE,DN%W:Sb1X\k_!'.>Sff/`!/iOug-"gEg`i-q#ji
%+a9P8<2,sN%`;8&ZJ^C2Pbi5tTSdGLW_=07idbSY&`(jU-.;t7$_=6Un7"4CV^4ZQ<8GAI7RT,hP\l!mR[m>mC*:YJ[VLXI1[/)t
%+&PI'CBXH7*S4`OY:1AhSN`,^\0fD6UHei&p(hWSEIgh'FWHctMkj6*9ntVl!p5lC[:PMCl`*]XL]9gpKd=QUM&,`]U9ZHd"Ur9m
%q@LV&;C[lR6ech_:*tm_ks>A@3I+gU/<NXO)FPcDf-6MQN,s,s=@<V*$4Gai6ni(/ah3Y3/-r^NYmr@J^2ljh%AGOjKk:t0ChVSA
%->Ho+)"XOHL2+;Ga:)XdR2Ud8-f)$L'Tbf(,e\D%c&Rll.(\Af6kjF5YZ[;N.qID.<KV1Ghm>)Y+anMb%=1IZS#/UsR(B!W&b+PZ
%5Qls9%)kLC`DDsh#-!YYZ:$OI\ST?P:*3k@jNrW.XLXjiV:Hg3,X$ZOl\6"F=>Ao(hMHaS/G5Rh_(VXG@9H!H12LLu'N6`R5+7s]
%BX\SCGQuDLF:q!4b`P6oA""r:A<j.=M@_@6;T=OOW$KKN(9q:i'I`CfaM2iQ)OYCH^Q.Q_[FNq#Jeo>n.jDUcOpYm(p.iOLag+n.
%X9Nb*Op8Oond$^&Qii,08`FT>hAWLt;okh\%5;r8krgT(hh_cANi2(K;@GY:i/m%I3G0#i[99k+>E.j(L4rJ,#n$%c]3Y>4)L2P.
%-JrB:C`Q&.;jKlSm>7rWW+6@b5e:_Z_XPsaD=.N=,l=6sMNU[X=Z"28do.NH0M!N0$n*nWRB/#h7o"]47`0^Mp6c-/JScq*=G(@E
%h$.^QOp77?"OnHEjtJLn#o5NN>pK.U4[k6k,0!db>WO==`_T/^U[-DpmJn"rOd+D3F(,WI2psSCVFK&X-P/#;GFS:t,&>#hd69"O
%kA=pP`Rl@`.&gQAdtki-RMKf*jDl\q+TWd]KP7%kaYii;Ed&iVIGBZ9`e:H>&Z&n_HXKn^q*^^,1a'h,?!UB-L8tNJJl<pDVsP+6
%*3gsPNGFYpV)CcM@97/2n:@1*8-UW"@l0!D`#quk"/:qN2'@`D<(]G*:PRXK$mRt"7#VDG'&`mkoO&K9&e/Yt0GoYj2Z+_8a)PAn
%@lYe`.ZmVKkp`/kT6q#2A\fC&&`"'s&5eXc!>DI<7r7s\P5Mq0fM:(SHD90nQ$VBoJ19313p&8!dKW>h?U1@37K>cWfe1dk,+W]r
%`t$mr)2+;D0r4PnK^r]9SqJ#eV+VDeCEq-"2@N:m8^o)5Ug/ui%b\6gZuJ1edd6<Q-sWO?K=]\BERM-t.&Z*$<PqesA10L90U(j?
%GVp0Si^7rNA?0Q812XC\OJ1fe7WMC;T,!M3`C=r=lm7AKk`g]Ankhs]Y<"cf9h5j82F?AT7GTNYP9q1rPSEO,We<W:7D,b<ck(QF
%Ti(#@E^Xq_+Zb.$d_[S+`"j,YM1J3_%&:qYf^sbU82ZN_,%hXaS,o>GB5"%MkuB!C6IZR-OQRe'ijj3\Jt"WRXsDNHKgH/J9p<d_
%M7"@T[;pBnSen-)W8SN?4%&L2;,,Ut'/m\HF@9Jrl:Dj5$Zq&(;h.<Ji7^:I,qkS$iK";I`9n3eOe&0\+ukpjV_BT3:e^-PN<cZo
%$J#)-$=!c%Qj2`pS<QN0+<lN$9rJP9dib]oCEck8&?1eQKC#VTIB-mN_0Ue)ConlZ1_5:M(+]edTke>U_!=B'$YrZQe>V`Jaa-d"
%@T!t02B&9F%]^$pU(RuYMYM9.!B_sclbO>DTe1(%#opf+Pu7ie+jHbd'g\rD0aA579b]Q;#iQ@`,:Fi?!P>&CGH!Jhe[.)p'oSeq
%Lb6i<mHWK(-oPoQ^)&:F)N[.HGm&[=":&JPD<VlGfQ[R3)F5DBQP@kfk]%5ab?!H7F*g(&>Z3$&3q<O`6?9C#U`h-G;Uk'm^CDe!
%gcXsm'uV6\m$PjiU#N^NMMDp/9Sin/&cQBB+9uMRHHGKJX9l1f!7N&Nf#YLmcqY3%g,Vcq/eSS@lmW;!fO!f]nKaK(Y\=]9BPqiH
%#'3FifaBs>P?PL(bV`64^T&>mY\d8k>t90tH=LtiL_J33$U".G,"B(]'cMaeZ3>lOS'Ch0<*.-`aXLF\GRq)g#+/-q%Eri)^_o2o
%arPiM5iD&#9FBl],jk(On?MaT,F:m,Yb6'/J)Q?S7^b>4UQJ+>TN<C?oG"Ss"hI5cYNhQ03NTn"F&\>^6-1`.0[TmJSH_PO?qY=-
%8Oj?R#dZo--ISY`TtD_(]L`ib5h23a"%o)/f>4=D/_@g&.A^S-.9+.SBJ6g]qW8gL=>=XN!QNpI^VrVganh.e+KE:OEqliR\5OGB
%8NfZ]$B-*"%#C)USV(b%5VBiJdg(aSa>VKP'0\m>I&!QH6)@P0e:@EPKR*8c[Qe/uM5I+F#,e%&HQI*NlpRKmn;)m!<;9%C7+;o7
%MjfSZpIe6QaUeJWGTSi07G\K!!1=ubM+Uf,jR>KsP(oeip0B-O%28fQ+^^1cNbOHm#6((k9cQMaX1=bbg'YAf>8/t(peN0>E8rFH
%8K1V\P9UW,.2mo,BI2A8(ABU:\7sJ?k=cai`8XIY.om!d?m5!C9b':l8fiW_06,S;jtmVSYSQ!q*$;T@aH)"#;=`e`BQ1#)@iEJm
%86Lb%r$W"@RS$%KL"YXC&8,8</1hO<Lppg&aQIs^9q<CJ>.=lQWG@QAEfq4)PoR+4K;15"OS^4l+;\G>]J#)SU8pVmBmh<9Pf(e)
%KYgZ4HBq[++F52`jqo(pKV'RTFbC5IBi[bU/0^JdDbj(S[Mto6Ju"FKNZC`oYXepS(e/C#&^$eZW?H$83@GQMK:k)(#uA_J<Ae0d
%V./11fgInlLK:>r,0+OG-q#IlQH3,g)J^CVO+c0lF4*Nu!j0hS8)>&&#$:S!$gR%-:-a+.IUj0u_&jLS@Y?3Y%6[7@f9!.g<YoEs
%/1s7,aJ("<)[0S;L7]1!QuGdD>*J;+e&b"_,t'-47$Z.+0nT(c1,@\)nfWTD,qi)3;b2cRY=q7uW0rQ#b6f3J5kY+>RZ.@[Gjm0c
%JmCAT9b,2AI?LGU.$S5L->&^$M#`pomufn$.RB)LG%m[A@Y@.rH]EB%=q_&X8L-c91:];[ZG'1o9/\@'EE85!@0nDX/Sm-)"I;rU
%UC6=:(d!-A88]<-/A`WD0PXpK,t3fF'fJ>VK,!hpS2cWqV[S5!L'l6KILZS"@@9(5d#lQ,W$f2d6TUq[G\n7>Td4BIVCYef?3[ek
%BP%gk+A+%uHViP6q5iPJq@7'^5Gi[+Mr_ef1K$p*_Eh%HB;huQ[*_FN+pe(fD9E\f`#tQmkb`$hLtW8PI7[$j'K/?I,hE$5/7]tl
%,>9l%/h3Zi"Q_M>4ZE`"O@)m06!71*jAQ<-81hF<3*qJQ)_h<M*del=!%N:l*(2"_1LMY>K.W<j4Hk>DagJX@//D2"-!aUS8;<*\
%%Q!]o5W2iBqEasJ@R`YJ__0D8@0Vh2U::6E6A[3%AKu%K<DWE=9I-LgW1o[KTf2HOieEF'$FCC4Jc@X@RZpd9M\HQT@&n*73/Z?r
%,Ps&r1H`3WOEX9ZBIL<aH4QH\NQHWg@FlSAP))BJ7G/4W"V).]6O:10nq)HA1?t/Z0T*tF-djtFhf3>i\9bB$[YH8MJR5QSN[bZM
%N@;gDd8>\.\4"2\VPtS9jLL)tOj,6+IR2M,P[V@U7(!qE<%.<9\nD</A(ApLN<YT<66Chc.G6j<_o0Xu3EP2@"UPsRco9rM;F,rk
%(WtVnFGa7<e@:\.W)8NIZ<aj$ZIk4_)/"1F2ro!U80_p5?q7r(P&DU-B`p#4&=FYWOOlr3*P-q?YQa\cQSJr>b6G6U8dt)'lghW<
%l*M[D2%\T:7CV5(6^iQ>0?7N.LRZn7e7G:.l3=8>@j^cukQ><FiXUSr0?)JY9;NJ(E?IfZ##pg94bPR0gd%%JSk4-.#&RC`8!N0n
%,S,p>Gi6/.3cEbBW!*\U#9fiWl@s-"<.m8Q3:WducXj\77Zc(`=8Ge_6&eMZWm9acm(OOj/sD*mAMJpqJ--$Y7Uds,h'cL+n00::
%R)k=g<4TE0!KTNt*!hn_W8c/<_O.-H5]^5<aRXD8:XfM]&9@$.A<Q"W,=<8u>LpUl5*//B5[o]Md`!Z.8FZ/BJImr:=YMq%]5^!^
%K%Rl?l&P(r(=5;fbm;o:0Y4,2U:>`4)CKAMMjXdpqJZGp@b3$C)RcRtq!13$Q5g:9N%@+]_\iIe"Yg?hD3AGeEJ3]a.9+lInh$(@
%g(EllZk3EaTJDCY)J@-k_(D*&@LEX%PJIplR#H]NEfuZ@C,O!i:#r[G'FO6J8K?DjILt%/?*Y4ZC4'Ck%r8u.PE9Ir.#0#g7&GFH
%RoV,R/:<2(;Mp)4hdf$I-ko/sjIC1Z$l>sH,5oq$96$(,HK/2']WN)Z,O(q^5gHR6pmt/[*,P>#e>OUTf2Z,=*hJPZ)@eqG@1QUG
%9@<Rf;V/G+7Tk^Q?td,J70E(`%Q6$T/^uR6To12q2L?RPD[$Q?3Y=VE28Js<cp^B5:PS@F'KKPP*Hp$gfF$p5`$r_9m%"W!@.6G0
%:uXJOkI;'_Eg7>$drmt]"c*/9(s0_3BX"ftfdl@Y5eoWN%#3O2Z)I>X`!W,&Tr,d6Of#/`%<r@_!k&>_02>E<Gb.j0e-`!Ofnh,5
%<UcZ5ONCm#WG=K8<IbLn%_\!4a@L3.@-L?&;K*-5&RM3;6j0cc_"3)l`"+qC@FM(T&JoIa39$il^^TaaU-ME`0np'Snef;``6"%!
%BF/Ku&;k0YUha(5@*Z<CB#?hf3H`E"Ao^FSppOCZGI#5ZPD7]mH#55paM`<(:Q-_6:9!"P=gKDr*i-ft$r"AA7um_&DK>6K!I<Ub
%_/`@%']H*.akA+oBH;420=Y)+<(Ji=R!]^9cH#PhX24hi(sWX-K$4*BN.f*M5i,:Scp+6j2okUX)As:<eK@^S2K*Ze`?PPF\'(Aa
%dk8l/\hXeo:"hXf!5k[K13g0K2Jf1e[cEc,NA-%p16M4@q$%0T$)pJ6YKQbobX@tUZ&Eq`9N98%I2bUS;BcQV?'>=\&[8K8VEc?`
%3>-H!7Cb6hE(H49&pKfS#]`sGOVL_,"E7Hn1aoi9+Y6)X"9"!jd,B4S<aRVbO?5R\R#3Cb-mbQ\$an?#7Yh&jJ@!V]V)_8Y3Nj&+
%]"n&*=im8oOA>=4>(guET7ncSKII5./"I)X'8Leqi/G_(\:.&t4cPJ:!SisV=W7bTa8nh(/Hg8_,K!;s/??#:_=8]NF+^$cb717*
%iXeCGKbZ^<<<CRC_)44))&gWD&4J=G@A(7K2Ja;KNDM8\MF,*U^o':<r1%Sc4!aQ8LUuH;O^hAubY8?q&/@6@Zq46_/4J->8V]<i
%#DtsfYpPT2G9CbpTF7rXR$/ONMCk,Jq50%.!BW]dm@l5/!.4q4iSkF"%%ZB'>q!$Aa!&j\R%u?0/TdNoIu&&k>_X@&nMiNQK*rmQ
%6AAa`_BcE&N#K0?*.HXiK#4F#3'Q7e).5de*rVt)_!$lF2o6RacS\*j'QslmTXcLX&AuU:=mY[=cb,;!Ir%KTR*;AGM2&,W[IKaU
%.+AI!gYn0M3+ej2;JVANen3Ro\5:(oYb724_aHjK;EBZ/\r5T;?C`:c8kbIH6!,1%QXuL+TD#2Pk_\YW(kQfk$ahOhJWjfr%;(7E
%$/q<VD=cD8RY&e5,0Wjr'15<Pf?L]l35kDm#YHWO[S60m2DJbp@5gLn.D'_.9/;q-fA]/)<\/"6i?iZMH=m;ci,:C+K$"lB>X,\#
%gN=YI(5%W0m\pJ5Jg(\,m#q1(q"Uq1=U6MU]H\*tr)/]8=Mj'$V-dCnq9Y6m#JW*L<`MT9&5L)B-0ijMi/lB(MjeI"6J5Jk73rCn
%$q+2I))q^5g!I:<,*"ecpn/o+D^qS.^iWl2/#Bi^=#k7K8E*1p;P;b%"HEZ-EHj?"=6!1>THY:VM\+&C*>.l+io!4V$b^sC\)DFs
%)]\@AlK)(R5U[FG#E!=ID@6_4W@O#oph3;2Nu/KlO7"uU,#.65D.#IX:Oufs"'&BI<.#B*(!I#'&ep1:j-+8U?"t\oT8)WoJ^\t!
%!'II)E)`p,6=84]W<nIqU-]0?AW@?6Dul/^K`<;D=;7ikftiq#'=jhhW9aN1M6`%SYrM#>1JuqL!'FiP0cik%k))!_G_bD>A=O>S
%KjM[X@QL.N!QO70J_*fs82>Xni1U5:l81]G@e8CbTNYda%)G+A)^q44,IV"%DrN&"6-Q'D4W_uPQ`/79#n0R<(%QP),93jb\-uU$
%#T6#)cC#sK0:^F15_VU27sH8A*u$^ao;;/G+rt3<.%q1[!"c@D`,@9d.u6nIScV#T($F)Xc9c7IAjDJC23@(N:th7/iNNW5;V1F]
%%ls]b#2k`E+1iL%kpZLoc*=*l=&GpEjGjg5-oPQ^:cmSX#j"$6fUD#"HDX.3"J?m_E.I^R:k]n4MG/&ap1me>TC+a++b5u>kZ\ip
%^4Sd_"0";I/.l!Q!g=9sRLJ-)EV?LXS$POYmkDaS7m%%fjGhL?"gZ8bM8#"_'.jQl%ktd5b=8]??(;uJo=]AV%TElP&J.I#81cO.
%Mm2@BL41SbK&QmL-PANGH31lt,<GLJ9cC%B]L/m"_`1+QSu&,gMA'&3ZH=<mA3tt?#%O"H7CO:?EeD=s^omk78G^0d4Y@5\$'HR^
%W[Q4J`ufr-inD)+@fV`.&6clYUB'F9^hZbWDK-[;,r&CFM@a`d:HIFf.0b^o/l">;+F>[]I)9g[C`Q$rn,n+me`H*2>T;*N"!DsZ
%E+U)i7d2O44V33U_VFE/+@@i>!!J`=D'5V(&WqhjoM@k&J(`n^Gs_e.[Whs1O?lmc%]R3>BnIqeG!Jo00Q7Skkn<1[<!aEQdGd,0
%`7"_hj5:[63>aKAUM*ZW,)NikQ\H44dQn&WOXLtK2(1*6aTlfm_1p.M&klhL\:S)jD!&4V"KpD>HO5-[SB17%)6d?GTP=ad3$%VO
%$4ilh"0@;3&jZ"9\0M(%[@g^lL&%)#aslc..$9EK\[]_.4E>EoDA\1&M#ZRP#-PHjJYS,'1'r_rJ/H+p]P7F"MSh<WkFpW7XuJ1:
%.3\EQ)fUunn1<S=JL)@[,t_0D3<81OW;uju]QE(h-C)mj`O,dM9pEf2N^P'8YiT(1Pc)@Iq)8hI,WEYe6lYT<p.H8IU&05aN&7.R
%nuj-kPC(pec+enHVuA`[];VE-#`\m(kbrIAHO,?ci9$2a]SYR(")^JXKB-;@?&Y`J5bEth#`\mFkcfC(5(Y81Og'_\&TK27&82.R
%7;$mDBaTl_I8D.1D!i*d9"mMtMaMtePHIg=9eZ_L^h16G\=K9#>`+A;0"@OH$FG?o%$eK"TF9c,G=LYG8Udf=&cdF$U_)]/l+b/*
%"\5qg:cN`#JT4IF!nPlJD$B9l%rl^?]<<>#9am,H2\n6tjH+L#QAk8`8@4Nd;TK4PgdK_TTo,Njf<6HR>+rWqm3<aa$.WTcMgVb>
%?V3F`c]g7@JI`*j0JL'FA_c2VK1')q&B`oLK7pef$?1CP,(h1@J?gZB]?4LffS<lC*.toJ?qK=sJ[`:k?j\tbBt$:R"Ir]@^X4/C
%aWEP"SH_U<0a8SQ>7HTh.$5"]>7D5,UB:?=mkr1((']s])g'KNE2DG)G8jd_\P;O5K*2IZ->c'*Dr=A#$5'!^/oEZ$67inhFhC?W
%;CrU&^%+ag1`dnIi_a]R6"4FGeM+Y*%[LaP1c+\gYF9sq610Ad(;t>#p)bbV/"1\BJc,WpMkuX"3tIcn2(b'R`N9B:ee%mWH1+%^
%;tKEMLmnp`=H#hip$P"W@`aT,&[rj,1eerOfDOqFY%Zo((*>M.e#Su;"UOpsNPN6ihgge(?T%=Z!c\O`'mk'7Dhl9e@0$bn-4DE@
%^SBE^oY6,+=LH2_46lGbUdLm"1i[$S[)CKlE@HL37f5d@B4sPb/$%X0#i*RX@,]9@:^eVX3aWD*HmW2/[CLH&>`_38e/3^AQ?OTZ
%d17]QDb6Tjk9*g&m+sl3%IkAIGsZ;_jVHW])IFWt=TkI"hNkB7UQ.-OH!LJn5W2&3-?NSre)5Hc(`Ra/JnIRH6lo\:80o!eH'Lak
%Aot:Gf<?jqecb1In.P;0H#LP4FB)!@.MPuX>ATb(=SM5Y0HE.-d(J*HWbA\\)'XnV'Y7t#J..N.?o\OI#!Vr#q^"aJ]AcXT?DCng
%=GU'9miI00RP\:KO;B?V03d9rO8qtr@NBb?02ngDah`h/7$or#hN5M(r;.1_'Ejo1<d^kJ9@br\D5s\YS"?tmIjf59a@?]4CZORa
%NX/p$'E7q;oKlhP&TpZj`<%R0FU6cLPa<p0dGtAb+R`H`n2R3;Y/Tp"$gsqNe55c)>4?40GdutT[k1:!-X#:RQ.IV'>6Q-Rg6oTm
%_+eJ<JR=RA/h@V6Wg8IYjJ<7X6520584HptcpWhp!e;%A/hZ%oE@4EiN%P]$FT'&g(/)K&ncB#>KQ.P,:jE:5`elg;TB%R4>E#NO
%)613%@>JP:eN;Q=02a#-?4!]aJ.*98,Da`7Ta39EgB&`KY%+]6J3Di6."!,S'ht";7t,h16VcPV7efl9-<BKm&4BjJOBYWa2O??Y
%CdA&$Ju.Pa$sd`[3N'N\iJ8g9&;GBn_iX$;&ojeYTqTUG!!aqCMM<;*kLp?!i(FuCi/o?^1Zb_I?*')lTH0G6,1km]eSrL6NkEUd
%05Hr,/rXV5f/7)BV-jp=EDQht/TI^3YAEEsOgNF)/oA\f`j,T]'%]%7bmHOQTg[o&L+-<r)@(P3_j$RYj'CIpKZ#CP3*qc72d@Nu
%$6Bo52b]oE_H_oo)tI1ICDl(M*0s+t<SV[1G;rjtVudV`YAkCGDb7nn,1RBX6<8%5jWAc56PZB,(erlLi+Z%O't:d9I1E7KaS<`.
%%ULh?XK$uf&1SMlW4j6p`r@Z(O4Y>ch>g6.e`,@(eQ@+("/]8MSHWtA=En@1Mur/&MBBe@"5N2RJ7:lf11`?f&]M0qcrIW\c_jWH
%P@[B\Yq)EqA?fG`MEtVXPVZSU;XB32?,/$;VUuZt*(rIG5fKBW&442"92r1VD8EM@>d<X,\KV?G^gc0$K)F$iON"jgPb:m^&C=kp
%B-PE^KfO]9`j:WUE@hJL`hNMU!Ac";`=Pa5mC?YI0gCPRSL?i5Gd/l&U,/O3n\qfUFsJhG*/NlhI2_"6nagqj%1!u20XaE.CQCc?
%>sU]($&QS;>CobK%CQKsecj)f6UG_qb1IHgK3Fat)='W5>Y"=(`k2ieRgB9*TJ73l1Ib"0ON&CC/f8QW,bW0TedZ$2FDE(8Z;EE_
%I'>>+@cN'%@=)Zt*Y'"/"o(L&NPQ)D,s9_q)l'$X"P`DX_,rIs)5`)I3qB[1SCOQ%i7JU)g9AL.E,<YT/]3(d1rW@C??!o]^^UuW
%HmS%p_`@8pHd.<d1U%JD35C^]m[30+.'2\TnCS:.(`o,MS.=joaU[*b4B.RBVk@.WfOIWt1,OP1P1X8;%-ZW_8.p;dM=$`[%S?;t
%-29j]+A_\KIOmMI!f/#ia&5edUd#KB/<,2?(&e=;fb1Co!5oM%lprQ-\h+U>!^gKir.G%nb7SH%;kf@2+l"^,#U*'dVR.h5$u,qS
%=nQk=2r+WK=mEYZE?u7N&l"*,Me3$Jm"e]j(>$GJZ\IM!'PY;^,>5)s(p_j<d)aX]nO\@`,O<c);+D.WCl:eh_biQb$s=T//-oZa
%&!*fK=UfhPJ3YBLdRpKj5n]@)[L7K14@lb.XHZ'R/0W-jK(TK$':<=s$c#W4"!f4]diZ6B`UGS'=>!o(,L[A68sZRdODGPpN#e"b
%@Q74]C]Hk'Z\<+X\7A?&>]H8XOicBHmN(IS&t7%D%Lf:hn1chh;^,?O'&[;gk\/sRZWC6q.RdL%#_iLDR1h,N`>QY=n75gNBpW9S
%JICT["E1)4_Y@ZU6Z3@E,lu/YK]%q`$ch0r[2$g8E%=g24,d)"a2'O$^'^759[=]S2*OdgP5BB%&#S]Lc)LWD#(]]R74/tK8Y@gP
%_#\)hnrV"sB[U9g,uiP39r>">$*:EY)BD4R'!&)AB%TB-9<b]J\>X^2."PE2NiO?<Q>f)fFO[j'aetk".MQ$bPB^Y;LlXpgkT."6
%Hs38>6nD!A;rp_=$!DG*e.VRo&$r>FflgZM#\>.*!RhgHV*lo)6<@,O$RBQA&oQSlgb!NhL1ml/=.Y:*E*4!Z0&N-6ct,p>""4RM
%kcuPbe'Q>nG$2fiTWu9b9AO3>P1X>OWk0iB/()PGUB)O&n7>Ue$HqC0@0+/[$?K[%#Y4u(G(f+RR)ek2b`3)KpnEIm0O)D+Bp-IK
%_edJg#mmC11!=gjJtbgNZRUpBl\N-?`%an`cL6u03+a$;RMsDT!&ClP`<j8oLI`\s.U"Fb:BJ`+7@+9P,aR,AquEasH!k5u;-fCC
%>QQagU5Jn"8<Y?mfo^GZGGJYX7'e=Z0D%e%ROu?0h;Q#21!Q`VX=\4e6)bO"$J0%sXI0s*+nS_s>dH"M7osf#KJKc7Q""?O^h-Nd
%/C!:&ct69K[]PE*O9@L(U(mq8$#Xp?p?8^u'&BXH-;(keph!7#)0d\4cA&^Q0'nSu3--HTD1iji#\RGA]7ZJJ6C_o_XFg2ZKkqms
%@]F$6=@Rq6W=d!-]>=sf]0iDs2B/U#"@-To)B*ijM0,'\i:p/7SLr/\M<_903_L-\gT[=Pl>-hXZW3,iB1k9ZgQ\nrd09$3N<N(U
%6Iq,>h55sNQ9<Z54,e?k4O+.MBBcl7W40],]<Y#&p]TSZ%iGq8Ga@pB=sG3:RP2aV3%lu3Y)mnVCr6?<4$m(dLJe#/HFAJb.e72J
%KKU9K<Cbt"ER2)?4WTlN-1KTQ\h2gb,*C3O0F]KOW;o0SBJ-H:Qlc$j"*9iPECX3*T68QFBE@stdfE1uY)r-c%X`7YU.Uf2GL257
%<l[kl"TFge^rmkjEXDht<^eB''?D:&J[WLI-49_b""ht:)i&&=bcF6DKIgKH_B<M5:h&T6%,)Jl=c0AA4_jbq&Wo=l8$#K`'H[Y+
%.fm-nDoZ<82"0><JYNW3)%*Lh<_A'./@8)<<0X1((`J<R<4q6_A=*E.D2D<ADpuTkF5d<*[Mc*Zo(eq.0>B7`)@P]6/O\\%&C!p%
%p0`1H?<&i8&gAk,d23FF9297++<#TG;.3Kg4L?VB**8GU"<O!R7:jO5n^-&gQW8<^LXnm-6],YC*ZBAoD,fPrreuV5`Gd_Q!(fG_
%+_Qlp8ck_=Yo4EN-iq_MfEJg!f0_qfU.Ol])'fd@*Y"e4&e`IB+)7i)4:"KbCnf:rRA^,DL^^6R&4K<B#8(I?,p*QEPV5I7:pb%]
%J^BO`BK6bS0+o)gLaGd/_,(3.j[p5O;?(!MDqAJlEh-k"$daC%)Z^"k6YCd:E3A7W#8U,QCF!\3?Q"jg(=ednRRFK)N;iRsk?TSn
%,PU&;aC^dYS/LjOea);AN:0jjms:<FU[-=430DVFf895ZJ?$r^@%nVXm5$Z1R2d%a9scjr>mGsI&!I2Q<E9^R%3SMDgD:*.E1-cZ
%7X(%3&PenB-ibY@7\'et,]-bJd>&F#mGSet0c`9,:A5X#ZIK[-SP@f@:c2dj7(]&+V;fR0M)[#tLTr0]>0nUZ\PHjEP1/VQMD[PE
%s%4?N"BSbc3W]OV7r+!EKbucfOH`%Hg&d9=!QE(;g2h6*Yl4\eF)85[.^Bn\Df4fMZ<_esM\AIqR9=*UN-<V4jm^9-5'@6>qF!fR
%)/s`\0nIa*7&cUJlG2V$dY@/L^hE[i?X/!u',Wl:;Ct&^J^MS'4$[j*0Y7$)MT3PQdD\RmMp@&b_!#4T#dD^-dD<gY7_*l!N6X>K
%&Y?Ye!uXgsM&]p"3AOb^ER1G;N6Wc=L5@(KK*_o=FC[3a)fQ@*BjGqUb2]osUXt4iYCV\!9-(q"padF,*D@BfM`X=15s=l<=r*>Z
%LPU?UmD)<Z_/+[-a%GYB0_[PQdGWFoYM6Is"#2r4Ui["M9e4_tgRlTmSHbQa6t8GE@9.L.Zj5s'R@&S$.uF>M<aNVk_;;[6%<26P
%IZ"C1^=s4KS6Q2eX8*8G7.%8##$SuceAVWhJO4<(FZ30<plhJPK+6$I/^PZk5,bU)cQlW#`_*aVZb&J'DjsOYdWup@X[);$_R9\j
%q>.8pZ?AHu84*oP[@?]sj9&sF4hm0`<Yq-G1dsVBeT@=(Ym7VGf`\[*_eHTNSXg1b[;5epHbtorh:a&67u(9[W5lJYX^/L[(O;aW
%ZPa(3I%^dNHe4rqHm`rd)'c?fY)>jjkQaI[]DnsOW1A`[8ZT,43oo"#5WVg`F7"-V#o6]de?uoV1=rJbY-U8ni=g4l[C_L.DXJa)
%?HY7]/0=!,CPaaCHC<^WBHe=3Y6XpXSW,u;AqOIfD\J',N.rPI+M.`[ZO+$g*.]]b[^$RdKODE*"/>=3@'J/u>)H*A+DcIXCeY1B
%%><Q/-?6UYD@cY1QBS^P(j7f7)r#q]%b@g'9j;Za[Y%Jd!qKMsCmS*L3Xq"<9N(#0@T`!U;ClVhA%OI$!2qpsg[4sA8,$j+NZDtS
%.mJ#9G."m:+Sg4HG-Rm<f\#M@aNhMs8="Eip-cr_Y\KPAQfQE>(EAY+MmS[Ck+HNta[*H>pIkKk\'uX)p-6:aG5ogsa)>$='qu&Q
%m$`PV`9\sB&nlX,81K+B9ONi&2?,c<!6$P"W:#Kb)J?6S+TB]FoHR7&AXonV'.*U%GlqioQZ+0ThXF<V'c`t2Wd@\=7Cc8$#Ldjp
%m`e:"9oi?C#-:0X1Hte7gArp=0m98;j4OVCg9@3$;sGZ+N_lZ>4DliOO=Z/4a9`B-AH^b9po[L,YdQll$2H!`8?K3@#."1Lol!HK
%%PU>)bup,Cc4ZON7do(r;T(KUJDQ<Q"GCVK0Ok]98"RKO%/#49LC5#]<4ACR6EgX6f6qkXZm,NhiLO80#4f,C91p:f?[r"KmI,N(
%jU+&h1NR96Q"9sk)!LVZ\'E\Q@B&m>4S$#-$P[sGT-(c=;Z5`U:ZqZD9f8Ip^$a-c0#nWTp['p>nAA>bs024obpS#>h:Lt6InX,_
%s7n`U<VbqkRH;,cfg#1<g,J4KrajYhdEXJBD,n[4^t,Hu6g,k9kBLDH'jX`=Pef&q^5KTp:q3-7F7uaN@cF)cDS=]:gQ)"c(^@qD
%G_gP1_*eT-GjSZ+NbA6'7VS,A"VC_B0UrTuXpD$q##LHfIXd3'Mb5p5\6fLp/i/k5P]k!B,YI[?KnJX+YWRF"Eqmb?+O35,-3OKo
%L6_+7"9^%#l%/0q*'K)V'/aEeCRkb50kE"0,0(/UYulU+oV)qk'(=[)lc$TO(#bMR7l,%&RpF8C:1I2I*jkFMLO`&Q)e4t9H-FaN
%q@TiO7ug4"@?tk/N84m)I>tZRYt+Kk7rKp70?XsC,LC8siTM(3^Es>r"@7e@_]]SpBY$#Pb9<Qm5<iuBQO9Gb.3h*r:?[!<rS4Mk
%%O??\qdiXAfo'N#X9=6?fWfsCLeU-7?\Vi0fb+P")]e-u1`R%K2o)X8)3RC4RdID=/g8816X"G%G.XV$dMJ+-YkdB\iToMCan#HD
%&QBI2ldjLsi[eY,P;JL/<E*Hne$1dbcfgS:d/D%uoAV"OR(G0""tu0;"UK7E@"er\qi\h^Oea#I.1!kY1e]mDm4<>liYRe:4Ru[:
%Koi?.L[l,*,='/Z=QEeM$;%)YBo4HC7&")<>D?]JAIE075O-ER0@LhP.\DZX'Q('F`0)%9E]Kms5?,:rqd(QiUVm#nR^auG%rIbA
%Z1I?=rbT?/eMr8X;(qbb]+#RS3REU$/;lrk3h0[DVMXcT?8*LrD]t8"J$Q'/S9nGlgTHhF?f'2IrNt2C=Z_>dd9CB@.ibnX`<J1=
%%kt"&W;@^@[?:Z40#6(Nh%h9(NO9;\o>;?Xo.n\SfNeRbdAe[9Mf,*q(4ZeFUnJ[8*9W%%!E#;^D>>bf9Rdho]'eP\ZhUl?;(2bt
%"`44udTG8R"/o3$\lp8(?TIB85o\^.*=s$XAl#kb:9F!trArMX65sK/b9Fb]Xk*>2$MS9?LBacjku+_tI/(:3F'Zi`SM.mtC4R'A
%qjW!Y=@+I[$H)0);$5^"(&[&5h_]0lAKbCfUAetU&<of>k3`MH(eA+rV)!YKa/1)BXE5Pc+:E/l,F6`Og9OYTiHgSISE2N3.S#;(
%b*@rW6q6EV`Qc5^4@'A9B&3BXCV$i[<nTT8ZJk^[_PsesUT"`ED2<[(.kdtPLP/I],.6/]R'Lklg%R0)fhLpN%'n"]Wr8DApuc&o
%mcs=kh#(m+i.qU6[qoTF8tSeG2RfDQE<&ZPip$S-6JY@/QO+uN+I9?IYf4keTO=4h3_2sG.Y7`-41AR#L*`IbXFNHET7@WdSM,)_
%'4cls&u:*h4)(2,H3M:><F::#9rK5,XVY2T/ks<''q/Fobb<&TYKe.;ff;p[k'gS7d&llfAq>"OASW9'c^aB5"8&F[=s8?H.?tqC
%WBCP!O9;Or)lWt,@$G>?2C?%^7K8tHLYLtfr<C`A^MPCmLK"j,`if\Uc*&Y?s+C$YrrC]aJu\:*TV?h7dG6:Qi3n&OLT>km#<!"N
%XsK!Hn(ElOMCmPN/8XUBNCN%V4BOEE:SjnVq>sR1'"XNY-HPP"Ial.tFKPP\!SD=qS@_uoJp:r4eB)\q'FX>#F[Q'=eMTMfmn+T1
%h3G_T&kr$)Kc&X;b7=/=Sn]Q#-F+q6Qhb$5W3`1?on@!F5YeZq'c8lM6sf56iXIYKPS.J^b1=3d9Z<52ZEDn)Jf3h@=ONoI:e+\S
%"46(mL>/37cor;8G@#YBJudV.XPHhc]tu`20QuD.Tl""s$')&'.Wu#ACbA9ZqjpMVRJr(Yj[*<ZC*%)*b3Y"k;WHT+'3VV:E!t-U
%Ytqu[]<qBA:*O;(c!oC^gMT@%Q%.8NpKjii?r-C%qd;hpo!h]4?P;W/W9(!'a\M/*&3d+orZb$i;;C-ZaImc9or?TfD7n)4j=e_H
%Jk25dMMH15A[a9J$KcaEhg<$>C+m-Jf<_`/W6U2rF5l5XX951kG^Mn"Qit+II^j^V7%PaQ+jD6Ug=#%(),Vep1T<R<;q'!f\LXb\
%fgcIsDgJ->rpJP9cHC`Pe#cQDjktQm(5l[(ZW8c,?;07I/"\%SAEae&."7[5H!JH+mXFFJZ9<VD<9;I(YXE,O?rRHL:2!baS&u-d
%H_E^ZpC2N5<BrI/efAJCfcoQnY>pcPpE7h@-n*t"=RFIOU0?=h&UgeX>-7"GU_QSMMbCB,,>rFsW1MgSN9$?2"8!D=5B3AZ5AK-R
%Y(6PKQ69UXj0C79b=oK"a\UTKE.]*eKEcra14&;E6$6#,]fWYg;]8k%J0&b[1Kje"/PCS<$m:/s&m\Itm^EO`('?T>9mmcB39fb)
%3fiX8Y_65YaaFm'Xbm_6!X51[HGr?@OXOYcr9eTehY6_,CdDm[pU(0iOng:*oA<6Xs6!(lUadAC:Q#T1S).6Nn8*-bC4gd;cCCA0
%KbWYGEa*%gBA+"QJfn/DGMEu#.+d<1G;`b<PgpS6QFqmQOuD"mY3Oj_6LN7ZV&mZljD@(b&kd5&#/=n2c?Wos:n0ZdBn,`4&?`?A
%Nh7)J[#5FGgTi-+&K%TA'V]u"F!Csp#:&j%Mrgk^"%UoR8lZAYc([NcaMbU0B6,th#'=9&1U<d>+*:pGoE$5>9_'>)\kt.-gCW_/
%P8ufbjOM+@qK8:3"LN%I(`h!(lOpTrmT]J36P.09kl+AGpRgf.c<G5tZq?EX0MH\pi<CP4MPlEb8uN+R(KdQjG`?\gPD/sE;Kq-Z
%AY@\8*q[Me!"R.FLu9ts1H1[YoUq%J^0Z<c1*DNVh>\8kHM\EnVbpM]SA!RMqc*:"/]lfM=rL+Z9NK&h>@b,"qara7?L9(VWOO_s
%LmEi;/XAh*#U*ZeJ1T32K!Dl;3hc':_JHgiEY0['6g7SW$$_uA=Cb!hRtIZ!\T`\4F9Nml0>:='_>Z0$,_=l]LSjEeADV\/"_pgC
%]D4NZ]MFQJ1)dR#m#Ig(/ge3ZM3e&8afYCshgiiDnk1EW.(R[;f"EDr*6,B.db)0).gS/%p+cL["0s\/BD9J?j<-iiK8qIHB[5Q!
%LY[7EV2@2"+hC:+r[/@_f"WD[+V*g.SWr0qMifs@C!tHeQT)2S3HJr'iRF5H_M'i0iKdr,E8\\F`mhW\ZFDiXb.(0A<Y0'>>moP6
%`Fq7N.jj,l2B>m$')Uo-+b\51(tDo_;3>o_<?6O_1)eK9(`Id$Z)$B^T0^k?s)i#G:%I(%S;)GZ5diL,J*ZKS-GK4(!(IVbg'q]K
%VjW.O\KW$J>kqnT<<q@IO(W<E.k3eDV>8,4E[-a_(&mPi?(Ks4L54F=(TP)J,"rMpG>jo%XU<S_^MD`A_A\6TfeZ:k&FiS7Ja_#l
%jM[9)h04)X\%kfeLPl:PICA%5^l>uIFh5o,Ph\&-UCR/.Jp4p_b)&c7jm^UA>OXolhffP-'V"S.1(+'!]@hkA/VI!V`u't*g#,`K
%k$FM?<>GuH)5;MMn6@=C=t)&>9(e',.Q*DFVT;;H1Y3&uM/e+n>YNCTL>&ZTV&P6n0BP8I>P00BJu1!690/EQp9Cu-Bj=6O3RH'r
%febaVL9)8i];045\p;E;$XT`].k@cu7hQWAmj3#$P(.=5:QI;$WMSIW*.#/\G&oBANU?mf`I>5ghFRO7PS?M3Na/DK10V3`=q`&\
%^R$F=INo$P?>eNP)Z7(Rm=bRAF@:?$4Drn8FOJsQGJH&!DqfWALPll..mK,U4S@0%>)bl3nhgn4h-kNU[^DT2TV:H$%^VmNNn83g
%,OtFN'b*b,aH'4;>rpta40)A&<C)5BNG4?-MsWu+qJN_TqgPm*8[NI]8:+>g9(p*()iT',`[nFuNgJt!%N)tK57&?LMSa+@I8U.1
%QpVRn#&`=?b(79hqSun`2Sg:[D9AS+9A=\_[sMh7I$LEb:Rh)<4?s`#XRO&Am<bpnc'S],\JZG-*6jj$,]2A4$)eKbUlr0%SBEUc
%^*qD4Fi2D?f@osY_@HYHcV6TbdoL,'"HAP5BZ4077!H1lCci>f?7s!>/@?T"$kLuts6Y$&^\[`mf/K:e^]3HhLTg4#r9@A0^]"/D
%Dnc7t5N6elI`qC9<2+.E5lLPK[lnAJDuTX;^Adh5IfHHU`TaW&8M/Zqk[4;eDu\q2YP3OVp1.BuAa;9mh.;Rt%HWS@>l8MYFa*M0
%rRBu,5A>)r:RZh$JPU<3pp!okO*gOAhu%9!Nt1)LmVdL<9lK-_bmAmJB[0B>au6k[H`K;2&+<<]o(Ea0UrQ-b_,%Z#qKa$.20]l>
%e@..Rje5B.3G$%8`ln&,O/;IBrsOi<.$uH!oDeM//,YN"(8b"-s2Bh[rqoMBONqcN(]SYf^%7(\Q*)2[3-,[^cQ`Mo2@aHt<5D-u
%+n-X87@p1)%H)@k#SW`Y1cSgNMWW6^!:'_$m..%0TE)pCIaUZgf%erejh]W&q793PIr<bW=8:Z5'CpU#]gKa0mK!,e!RJ74pA^t6
%VsfMf/XOm"j4UAJ"4hNl3A>LuN=%Ji-=h;K+4G='=4:_a.aV5+8l/N1EY3cub;G80LJpg^QC](>-@U@;dZ8#$;0^"j*:)57i%fQ1
%qRJ6:?Ffm%pnLe+F8b%qHi8RhY8=!BrLfPTAZN!VU_H3/P\0mP&6iqaq;D3um=Pp3DMkD-qro_mFpNIP=%']81NaSX:qR5=+HsVI
%V]'Nq3iN"<&&0rj!1G[>l%s?i22,_G\n>'@\>R26M\:Jhb"tM85!F@H%ju6PbK,5RGNt72(CSHFQGO6Xa-2u-0`:J+(NV%c8-XnK
%[N-I$s2qlu4Ckf`X_.H@c7ZX!UH,Q=([!6[It>@[oNB"=Gr*0liuRaU,tbb_q>LQsk#uBY,!k'DF7G@V<b>*bUk89a'NX3b$L3kD
%:=X+LlNDFf!>-FV`peZ/,EW^e*D7O"E=mIg@WgJQnK>d]L8XZ#LdY=l^9sNBI?@PFe-f'qlbkKEbPL$DdVhR#ShCW"XK_;58"SB0
%eO)l.eZ^,R$_S3!#dHM&rLiYYD2Y17T@T,f?mH'q"UhFBSN((3Jo1tur_&T@>ZGEW>+UBSM,`MH@].;&\6I8PnR-F$\E.k2B`7?C
%'fN*W/[%7fak_Pp4cVS,?paLR*;3/Th<J*q^dd)LK&Y/@"%_n!KS!%P2O@DY;_%e<UH)/@o)@9?=@E!;HrT(q*&gLa?sW0:YFZrj
%Xc+Z@OYYH4Q^r%.RDd\-Y>3KGh'4M<Zp"aVZF@*Qm1c[p?)4,%Mu@gT7GX[>U`smW=I"7+_AK,NAm"WjM@?%6U>i$:n:K51&TpI;
%q/9Q]l3N!j651XM%$<2@ZBi%l,5#$=i:6@\p"W$H]^??5hd*%Lf6+gp>Ujqjb1<"do-n%5)FDst4/ITX7jqeKCP[k/lESnS5-;4G
%CJF6^[^BZUM,:9L%+\[!WgXQ5]DY#.6X!b2gF>6sI?Dh:Z+Os,U?0#1C*Q,.bY<Sg2R&6Co&a%kVeB@QMfc*[\.W$0lY<cK1ui2U
%nR./u?#A@\T#WNdgEKg5rKPUhTl-+:)k]WAcL/!j$uI]$cb]V3oAshEB_h!E[DfSem9D0NCWb5^:EgGbh'?`S.LGZ6+P)+u<2aQq
%op9Et<Ae13SMM(Se7#+Z2PR0C#l0Yf"e4uj,'?C*-("KV3j\i0"lesrU=p1;-aCQ2oTt$8R$YRPj<YimK]KlokfJI)n4*%b2%=IG
%,gX7jdd=Z.m.qMp&1?Qpe@,'YRLbS3:hH3I5cA/j$TXYH6s&XJLd.7n>.UE),g'l3BKL\OF4W;hBFj781o6m<,lE\c=Oh5qVo<g;
%qeP*Vg[UD@_j<hQ7`@ks/7r[5,gGkLOD:tOmqs,/3SU'tC+GWJ5VsSTcK/:Hd2_=Sc8Psn0=8oD*Vn&p8.p:Ub1Yp#bV)B<HE\"%
%&m8OuhMltH(!!R;17:SRoqdIrrO*dWUmU(0V;6SO[0Zf7J\s9XB?,Wn%hclF*jjOYo=&A%b8(V&Zj-t=Y,ok^$K*-C!'3RFJpocs
%WEN5RGdJAf`?$Rt7P<uhDr^@1J*B7V:R'NH%8<IA`%``_IOR*q1P4_Yhq:$TX3B/fA"61UI[b`9i?rN`Zro=A@/RXsr9h*RL`3>=
%j_RQ^DFfCrre4jPl`if*m@fTjZ7I3s/Lnm4e2G?^S?"7<KBG^"(qQ4,)s?7(UH7op;#fPee9C5%Cq.usF#@clBW`j&A8_rH-u(\N
%,j'6fAKe?R.`@Ik.lU'T($+'1?FAte[YXQ`Ke1#gMILL?YGt0*N:oGP[2jln71B.#SPP7:X%e7?7RLn9p%a=$-XR&H@_XJmQs)I]
%kAfMq:@4l,ncqTp4JaaS*nNmhO/.!/d`4#XR<7-Ls8-<b9Uh+^_;%Nhh^6dA`oX^q*ct&`krm`r(be1=Rg>+_QlBb2$./7/CtM95
%")fC./OmqU&N9''F:mhfA1L+&^*q69*,hKDUe/c#?9'_+%65@HpW&$uHge5o$K*HH!L1W8nFD$5Pc3%%,;jSW<U0pB@P_alV]g!$
%`JW+S#HpG2bHJhf]odcXMlNA$CcYJN'E8&dNAB`*O>m&Xg^P,bpi&c]Ied^uln3rWK#^8;NSU`ml4fX>pl!K5i<F.1ZGt3$:i8\Y
%]ZsfhO*l?)\+a79il'eh'I1?)U"sh(YR/Y'.Vi%:?E/MrH2m?H/HXAf/JP`o9!!urN0lA]8BTT/[2"a,&EP7X:#(gZ`nA>,,!"q`
%BLD6\c1>\`4?M\VZq@$0^4-5R]DW2>PQU4Mg"MKnP[c?\f]QOtEc);P"d%2=bK;g@[QZdmK4esn&&nX%nG=9Y?66b'T?%9+D34)[
%HboS`0:%=b=:2:fH`Xftp>4&,PG6:XXSLdeX'R^pWErcoEDD?l*Dng,P:9s>jDjp%R^3&s^W'VL'3m@foP0WtcSnI"b+W@l#Kreh
%)tCQ?(-Yfd<r9%W;tt:QV;"db$3Q>V<1rlH`g)kqooXW:!eBq<Lq'RJDTqS3o+hM=V[(tMr'@\4;6@l_K+7d[d6Q#Tn=J]>C[-@d
%kBIh"r>_lNje[P%i-)%KYW3iC$CIQ.I$\>[Nn%`OPsiu"LXXsMAC\,gNTfoeFNeZj^J2bk7.$6f[Ta?YNSE9A>@/^U+t\spcK+mU
%Asp+gGir$rnX+>1SQd*iIK-H",TTd0Y`rXsAc##'f%%=&<=-qm$oUVMA'ZY$_Ops!`b!VZ<A8nQ_Eqg21!X?_-@sV\Ii_3IL$Ito
%GPHtdS7;O%j%$<(P]9-2,)>S4efp'&&e4V#mZ6`gKhMH1Me1Lk2IZXZju9H,#4K43+pr8sR*Baq#cpTd_N/YU+-:4b5JIj_H#0C^
%s(+<OA,b)_p$_q:k.bN32MVggT@f`7kh'B3W[jUCnKHcbd:s!-17>R`7)oWZq(G^ki[27TbuO*qNlaUd.b"*5rYM!TU-_'ipaG'?
%f<0Zd(mX/Pq/Ode2K+,/l<".*$J(pI3%:,4gh`J"HIoZ`PAMd$,rGP6DKdUaH[[(*/Y<q0DP+LU9!2-9>AjL88+@35;cj0!br7f#
%8qi+_BU>a&8',OCq@FucPqpG*`W16<3?M3;g.+'#aAl*@W9W.dMP4d6)gPnWIid";b2SQ*nq(o["mGPsD/?3q9,T**,EO`^p7V7Z
%/RDJIqZ3#$&,SQG%s7+:;,U*oCoI76"Q69]LHA]kmWEc&8m!]GZXYsF"3fal]_lH4*CL%n:(X[,1.G;/NJ<eR8LdA%^*Q2p`VTXR
%IHiX,KgpURUjP*OLrNk'2skd_@sA1)SH`()59qu>Ve.6b7.c5>UjOM[^+:Fmo#SXpL(rjqE6j#aCVN_LSq;)PoJe944P[SM(He2F
%OqT,O^qN`-U4PH*!-Ndfph%CN,$KKHEbT\a_DuQ!o:1eE<>k>?V9/#UE`+2Sm@cL9Yq?*<S+W+&(T!RkNSM(4Kl?>Ub4H'&"uCh]
%Cd3\me$Kn5"n(+ng@_pPLC1Lh;5"U;3[+S'g$<0cinj.(*D*psV&?7)<WPV4qT@?g"tS8>jhu+P(+YLTg71JFUamgX6"GS`cuWD-
%X(4cG&+b.C>6\Z"Yf6m4(c14u<\EkU'e9;0UN[uYXO"+L's!S=e-+5X8T`2A*9RKZ^PYoP<M1mFK#;5J/n@t;&A.JH1Q/W?=cQ/N
%]0Da-'8Ge`U-c,)pe7QM<S*/OLIeos^_*S='nqM#/=M1)hhS6?+^2FC6M2b'1b]5IQr6Yk8ei;<Eq(P?cB;EkYDAJE7onF"[<f[R
%6J5f>:6G[JO&A@6V;t\@d46[rLCRZ_MlLnrKH@?I3g%=.G^0f'!YOgh^R8_F:jif#IWn6PWbaD7boirY<E4bD"Ro(CIE?51jO0qI
%(r\2GoZHi=*r27^o5M\):i@p_Z(-,(Wn%p+U`F'>P455V7(L<NqDEQW:ob&CX]\Zj<^@rMikBC_[2DtA:b5VV-7YCA+EWku]hhp)
%N`RM3Yl'-Sj$bmj;%r_'d"-HrVEP=QeJ,BaZ?_OK;#3^HUB8c2*lLuLZ)]A:$Jj_rOR9/OD=2Mmo8klIDaCY8m$WfpWm6kr>mI3i
%b0ArA+mX2J7M?"iA1)9](h6AXb\!73p+H6:&cGXD2f't..Q:-28i]][<D.Gd%@6-AU.uk,k.uU:+U1P\]m\Xu'.X6:9Wlh;e\$]s
%0h)E#,+X?ZdI>_q)':+CO=KFik*`jKAI\1:V:%IACM"C*Bpa1gWd'H4f6d0DjQ:oMo=*!1P#?p[='`1L<2+1F6+N9qGbto.oF8\"
%V1SA4hh!MbE\Q^`&7JHc!D+/4?Ll$&>LpF9$MG''&(J:!<_Xs,PJUCZ8?$k,ApFgh!4p`i1*1'8bRruE7>cK(4*+#Np>r<[m[VG"
%S7ak"@9r,-=SA`&"N4qF/;+rP,CnYeK)n50>)V[hmJk$o@G_kOG:@T9jg@OB7`$7tjJ/QU_TpG@>_uon?8NBM*(WA04)$h#[Y'5V
%:*>7(n<`$i/o5UTY<lLAG4C$<?T,1XfF":JBuAo.bs';5p`58"(*a[>Q@2KC/B!bOaG]4YmW\4)"Km>;\<[R>j;WZ=G]k0mW(Fsr
%=7uZ;i%7)'pVT2M%<p.F2pe`7rnd+O03UP(\bI3=F]Jsl`]Dqem:FH6aRcO^Q=K;K'Wp<mO.>sb##a\WSXgJi0m."8MlKjDG[phO
%%o:[[YNC;UeCBc;]0L$rTsn!$3fZjeCjpP6BtD*(;fX,k9XEuQhr"tB/3GMfRiaYO@b%mX^"bNn*QkO%QAWeoLT"ZGkfDu9S5T4k
%:3Q*h?tcPF_aU97UdL[+4KrE[Gj'S=CbCPq^L^L?ff:7El4X^d'<J,6r=C&%qlOX?02W3g(?%8#ohDh7"c];rW\cQtlQm-C'5N4s
%dr3n^^@HlhKIr$/X!h0q!_dU275QSImEb(i%BJ<-*Xt*;qWLea-SlO;4u/R@^#qR0O]'UY(ALV##U=)t2cXN"TJQ;t%#`)llYN38
%DS=eCfr3(_3/%lr**(1O4!UKPm),QJNRtX%^&]l\U3fC'Z4\lP]ICe@\Y%uF1Ah6tCoB*5Q=>AJR2t0b:Ce&ZM@GFc<E7:<r6'7=
%i,Zuq<1,KIH.Pd93Cd:F3\,)L_7M>*;d2rbc^-1Y3W@i0No5\gWm=[OcSi/NW$B>:8.U@XdTd*8EYPDU.;KL/,=VF.3>;\&-``jH
%)SsQp*a\ml;C+UTA_!cOSa)E]VTJg9f]70'^b1eKZe@r4j\.A`@Q#mAf^t=Z,M*BhXi`a;CrqoT9k#48YY']1O/f<NGg@YiB<'M!
%%O;FW1pm$V94*-p$tlV1<V's:4?LNMG:D''#l?.`B(uj\*P'bV:U>';WDf>T_@D;)D4XW_nsc=37#%8Z\on3PD1..N7FKO6Fq\CT
%m,j$\N/"0omIFK(<"E&C,*Y1QAIN9Hq?Ru6$=7]RpAJ`TY^5/KFV[aGW9-E%$7j+DX,Uq@c&$3D,+1k&c@NP8T.^^MT*Qe"#3Y%P
%$?g(+g!UU!OQT"kAhRaY%71+V"0Z,6]I2.!"P3h9qk=PF$70B:]kC[0.T+aE$mI=WB7gJb#lr'i/lnFTg=o*)q(>]k=Pp&BZ&6En
%gSUeU[#>0DW!O54a)^mH!IkLBaWPDajX)_pbQ0^#<bFGF&(D#)XpMtee2.ANbqD<KW]g7O?oHm9/-8(+Jr@L'M>hK1@GjR7Kj1rG
%PLtd"(2lW*@03gR#egTeP;1^#kE3WglbY_PbK-7&@iAM(]9,*IP`g1s-"Bbs1(^p'B/,mfb&a8^kdYPG&4<HaWSP3sm,S$T^-FMj
%ZnZE?h6.pi(7DjUCg-ab129Q+!FESH@>8qaF.i;RU..1F-#Tme[8tSB.IZiQJ^2G23Nrn*L`T3U9#fXTM:eQYHQT2=\fWJ!_ulcL
%IBGL>CV]R!>b36UI:Al0kQ9M':elg5lRMg?,uf;@lB]W)HWaQK79-SYdd<:m4p3QBDK\[EZ:^\+]j^bVQ[5B([o'!<PA2YP\d4dH
%8BkI`&N487aIf)KoEfiJ8X1qIIIl>1K6t[B$qlRHm_i9#BiRs<ESKPa4k)$"-OOL$[cMA+L:l2XNT&TDb(K0=(2_"SAG/!1L-\GC
%646smE!Kho$7])!O:rY`4RB!>Y!Ul=1&!B4;'.8/9@dC/kju?bG&5c]T8(o"=EL1fWd;,%,#sq1V5>E)A.j_VZs8sh*cIjX6iI_e
%cf)3:QSjS,h08Hgbm\SaC$n'()J*/!h9/Eke5bAW5YIS<1+Y*qIlGg#5n)F+'fZsI(5kTX1+A,#M6f"!0WkcNE=!3?NE)!YZt/G%
%@&?E0`jo'\QS>8)F](qlo.DC260*^i5g+>a43?@RUthnXY?LACiV:M=pgM+kZ`9QK_E;Y!4;ToA]f^t4,GhV])57u5jte'Cn):7=
%[>t,a`9jc%gD3eV<+XM2[%hqd"$_']O@(sh*0Xc0b!`2QF+U"o%!j$I?2%G(/"a9JFRO;D$[&+JW5TN2n).M0"Ro8%+Y"[QQ[;^H
%nQ,Ur81g/1)ik2=N8l?i_<^?=#J!gQ6l/:UDm&_!%6_%P7<p[KZ`%7W2`F2\"M'=l;2o!dXG5i3+tZjo'pm+X.uSLq)ZYTBp6JNi
%WMsB+,Rbj1Igs9b@);ZA^+lJ:?)IruFrj[\Ga3T6\L@<M9'D@qD)t#fr3:LOJfOW$;#"m^S'e8lA`iiJT1#!fY1R[1b.6u]#E^/q
%-F8M.*6+(oO3C@"7f+[JiqjG\&oU>h$6ZRjY[XD@32RtdY%a4s.j%#h/[Hl8\#"Q.Xk]@mr#k<`EPVpK7cfI)D!(N=EZ1nkI.?X)
%d'FICmfnEu/Mk$J6Ei^=aP?j)F#_II36<BlX(je#pn!ptAcKSC>]d#IBFj-F'BA.bTK&]L?BQYN9jB`]#G:EB\7di3PoR`*.b-JM
%&=Bo0n4#)tRuHNHX*[(bMf?0lap_UIl6MeQYu(]FNXiVlbN=h#`EWHaXS8t;7<Ya^M#naq/QJD5:mL'QJZ"XS98#,?W)`L-W$.1q
%g2sJohLTGdK<;6/(TO$6or,K[9pnZj=sc]tMFW.S;WJD.(4A.8@[7ALTX0^\Xiqh7QCss(CmL'TgDLfe#^t=Hi.as3MBl;Jgp(!O
%OD^";[>:h4EimLiBiMK4!g&8sY=b<(npt9(Y[IS7[uslcnN]_PbE[=3J.qfp9l*n*G#>>G^naq.mgS8Ses`&8(>`ip2'BIk5jTX4
%h5kLSR.u?W[X#McWH8p4""^K[!qG_QjSh[,A4pqD$M!!/D2)I_>4Q%#hO10E#5^]Gl=f$u7%&PK.eOf&/Pq4RFbs"nUs<$2SEW&E
%&7eB#LI+gKq'],R6sDBY=sgs36].A@?l*C^9$eW^em2ohPFI@@0krMO@/;E(:n6Z)Z]#q=;XbVg7>4PoRU\$]3hh;m[i#!'0ZZ_9
%$8uC8Lrg3LVuWS\A9III6^ugt86'O""#8ob@b3$_B7]1]N<!"P*"bOMCAXtW1ab'cnK2D/R9(eBaDK*t+JLJU18Quodd<h=%BDn?
%TW!&*Y"2Ppi/5CjRgKd:WGMGscbA,+TO*Io(L&&P7hOA`[1Lrfn:LK8agc]QcAcLb/<jFOXk(3l)6FN_K*-A%HpQ;!FuYB$n0#,)
%9*T\nO``7aj>M&?K[QmA7Q7i)(3GnRgbpHIZ3?$jaap@OEH%#nglFu>-"RX)Rot'uV8Tg"5Se]qmOBe(X(<OEa*0CVD-)_ta&1q`
%RVp("4FqWS)E.Jr>NT#<6H9h/UZ9#4_^?D_1X=kf'l?7:9L^K0.TT?^9Aj^LWVp)Pl]Td9oFii,1eha()GF0MPH!3aQe:d!N:nR'
%=qp[YjR&`DOetNkXAa)Ib"Ilc9*Tp(!m#Ns#mQ;foj.5pcYAYd)GuBu$Kt#jLX9qRR3cTWiML8*MunYMnAY^;JfC`8o%?PZNIuAg
%mRl"*NmN3AVbQ;SX^Nr_\\2OflbTj22oK$;-B$V+qX*2c_1jGVdX.])Z7^4J$R37S8KOY)gU3NUZMZTlln$8E#$c3^m7M8$p7uSK
%^^4oKK]`'rTn4t7e37n[7FS*+T:SqfbrEiB0Gq9;^`p.lXsKHYM`3YZR+%h$8sQ)<r@+bSS4FJ#Z;BUd0ZR#0#VB!0/#lAiHofl$
%aYKnW=p_q1^Hf(RFVa^]ERT/0'WFfc/dh/#ks-'^^6HqA-KKs37Z$O<!-BL)PRpE>[RmP,E5>0]n\^Wd_F=I4^`E;e8NBZ$_b$7@
%]4+d!.3UjFi$c=t(e#i9Mee][^a<7q:GPW27?t!O,7lJ=ZPSGrL0\NKmDWlPg/)<n_Q_<:"%imj2iG7hhjHnZTB52.4'96Cpc'7j
%2op2B.Zer1g%$8"i8!bFY3KKc$>bK4hs6B-@Ln,E`<SR2P3No06'/Ud95`V2A)OS<\ZbgCF1$Uh6Z*YWE+J\HmPo-!;*k`EXU"oZ
%*c4X/,kGl:LZT9SQGmqO\I]/o4M[fP&I:!-KX5k3B`G*&bS(U9o."850TbX0,"VqL<->_K^,sMIkQ)^I+h;qXHJrP3MOE*XU.kZW
%U`q9*PLG;V2IZL<&9[:Q)l2C\P4(ra%=%!cc)<M>du/3gR(?Be]<3iZ:-8BXL9T:AY)+C'qJ(b5'u,JWB/6"'kJXum2bE60[[>\;
%6n,m]/Z(.pY4CWc#I':(KJJ1]?ZMil&J$!9WZ$bOD,EB6o`@s!T's)iU;Ie`P`4VZ-!i*(.XH+:8p'O/q!hXB"e.bpfc4Xu=stoE
%HS77LO`*>J7Z]d.I*+WI(WU>)i(!ZEfMC]\ODPRVAc<P/f0r&pMC+(EU8?'XPELnkL=iAX:e@'SCfIc@/m5XcjHd73H8LeoD'F<Z
%EZt_bC`=?*]PbV[X6U+J<XAt8NGO*IX!4nqm;#[_-qnf#EUcH^\sau*iJ^0(`Likoi@pBu<kK`6kgbE5$bB`CPbqFOPn2p?jg1Ge
%qs`'NA^&Jd:"MND)LIoJVQO5^LV>m<a*2ZtD8OTJnml(=XrO0A2s<SZDcsV=asf)`=Kp`H*rr'2o7.kkeheld'h67Vr5BW=iCpm=
%CEWiCJ)APD9j983p2CUC^kRb<3'Rg<JtMJn-@BLI4"?@-N8aagd]XnZ6UeQ%18F'q"NaM\d/a[#\.==i\E.667#+Oqd\t]U,ju^5
%:t#ZbSML[95R<L5A3p6aq<o8;`Ii_ef;ZYQ&ht=U0(9\;Xp_(@[uo^UgTJ_!bg6FO:/lQZc!&_upk/Pn_WW6(^]5<!kkM-3*@8"8
%$XK!mCiR,J"rrD+)O's!H1/CbIl=*@Z0]D?'LZ)W@Ap7qbo\XD;^)sWpq!"_*$Q("?jZ2o#-S+fM'E&uHntkDJf7rI@p\HALTF<H
%Nf.%r4dSFV/lnJBb6E^Gdd:YZ@R":Y^ruWT2iCD8M'WLGo.OpLRu554V`&ahJ`1<gh9c]02Ic6CM&5QcK#6j5!/ZG;Pio.=+eesS
%L8Tt6-!P4&4.F%nlAB/?jTO]=g!#hP0fP[R8RWY+pL'XI4B5UnbQ,,MM#*>j6[aREJc:KA:4bE@F$BZ)Ua!Uu<QBS\O&D/BaNPXB
%"L1IdDm?Y5[n#Tom^$GL?:C">XIShsAan9PdiTi2bJt=af+"i*Gm$\!@Or1h94j4i`O4(3`hZKlVOV>TDA^Q<dA6o9,%3l/1fHCm
%o>57u<8DEP[h!P5)6cj`D_8I"n917GMHS>F^,ebl=Ve5EOJ0HgRJg`mfdo=23lm=5A18MC-Y'42)0[%e?-`T=0#M6N?;(+s8_I#*
%'EKErTB*$66,5O+a?RSR;.hiuRh$W!i@KPu)9bLWOWYh``ll32m'$=DR$P37..59,eq(RMpcPo(;553imsQj@9jWn?^7o;@*kJKc
%UY*+.)c^dtmYi>jc7)610PqDl@-m1M.<mB(RQ4]89jY+I-@j0:M."1]n,jP3Q:u%Y6!5:MdHfNCjhVDtI'sgATDMs.n"9j7a*\MI
%5t-YJ1e+/rLG)V_Rco>9,in)3cgA&]^'4+6W:X_&F/)EBjY$`568US@Hj!97m8M\1;YqTK!(0Hg_Q[<K%,R'.ZAY/G^98T*bS("*
%pIl#%$kSCph4YM']K7ogE6<iITeK3=Yl+,U&0%>1En),mL,p7IU[l-ONnZ/,l\,\ek*3"c/7HFk7rfYb>*g_9o+<XJL:oX4q)f&h
%OHgO^NCb=kEj!<U8dD6"M4,["ZYh!r;doB.!W75Ra=er#j?+Pk/UM3=H-QX`<QL"1YuOgfN/S%m=bl-Ub3Q'?*UYdn=bQKZWPg.6
%lY^+e=]ZlS@NJ(=mCJi#LO+0I`C%,p**5PtZYB"WgO8H:=I*/W[gO'K7&8mSe9QtA,s'Qd%`p=*PIgmh4qCg<-+A@.C9!+,K)Tf&
%^lY8,=.HGj5n^T8Mi+r_\i(ugJ9=QfI9pX:1oR8uZ*]]XQ:>sY8-&]]gFVh:,,.-#$M7a_\[#cPdGj)o<h-qK=<bXUpL+^<g00Gj
%&?(HXWD*'gFX@QgZ%N]tH95,:BI&N3E%LTTg6nu1kSjX5F0Mf]Cum5a\0n=j]6ek_YN^3j9r0_h_%l*)`gXVK"Rg[H-dKTiYa/7i
%ZAF0ZWmRU'7_u1f_7=j$L6]6E25&%^IY*\</_:$Z)VDqu%!G/H1\hqo_lQY_VTa+A?S0fFHMXo$+11I^b`X<G])ONKSS><e?c7#f
%'7T4Fb2<qV!j,70j;C0+fX>\Z9$C'V'LZFca_8cll.n;TG7BXK/CTtdgoU\>fqm5QU$QHH,Dj0W;!E'%Ya<M(O_7gQIaQqU%2Ka2
%pQ+6SP[f"CR1Z(JPer(f-KlgFqo,F3!!S0PA5<e*adX;,pb]%W2e9_^I847ieYtD^$Pj>?5dY(3<P!Af5<,FP$*YUpK*t/U5h7_^
%Do2#$il]WI\o2L2(CX:QB$.[/G<;Jd3a;0#l;B`0JPa645uG`+&<);j\Q-VfMiT2C6T?V](,dd2gH`2KCZa:(:Y[MK:rX3B&?PG(
%I[V:kEd[UI;r6%JHM0WoGOR@`K<nlum-)1d6GVME*SI%ZDa%BX6PW-+_QaLg^aUH0%AX*JaeJ&\P>>MELbO]$R%#:\I4RcSBR2Ca
%8do:h.<_jG=-:Qf`69cBQB`t&RJ&;d-@CX\HM5(2j;\b^.G9`(EMo&cES\+?=GH85$Yefm[i0&j2k1/tFX!mNK)e0PjcjFb8htTi
%XVQV$:fQ-=bW>h=e%7LgnN5O;kAQELGdZXIn1(4?*Srb[b.PaA1*1Q*cco/f+KMFJQr<U4eY1L#&/6O&O_d)5NsB<2;l=C(\.[BD
%DN6QE:^U!UJ-kuCH)SmPEhoC*A7i:U**Kne+]=XP+LGgNG/Yr!GI(X0<fg\cdAK&I16)6/;d^uoQ@dO*r.oCCPjHN:%E@ec0/?P&
%6WJ&Xq*`#^A\D2fO,]U!Q!:bhaYuM1U6t*F>4JQY&^2g3%_QQdiFhV^PP/CAd!7$Z*7mM3F>e6(!_+O!2VLJ9Yps-J@Oe9KIUret
%=hDpfndtigb=eRG*f2\iYA?RT+B>8$R`@HhRL<`c7Xi,G\,ha?b2_"^lHmK\_%NZQ)j.FfKfXh3T=dK"V\*)@k2#smTF6HU(Zlu.
%g`^h^;o6'mJOBjHkZ/q`k0B!EkHVTI\a,C.f>'f'jD?!2AQ^RmUnl/OS+me;cl.fUYfRi'?E-WI0[p&,N&Ytbe_Huj1o#s2\tuml
%D3jqHDiTfDi42g^\PK5#Roei0l8-m^3nf>adM>+$\[2r+MLhBmRoHS[/EuG)g7nHeeg.](+Y\P$Xhit>!W(E<.o&+TUDB/(^VIam
%oD!#H$cpu."SA-,f;uP5H_1h30kmSh;fk\N_105rd&[Z'RuH^K5<Tk!GJ31M4u7j'!dkcVnt-?d'.cB"6)Eac,0J(!"CdF73J3aI
%8oFRkj/(k*Rtn>C>$;Qtb@n`RXNEG2jl/O&<1;2@;<8j#h+/]d]DI87_b`BG&:A/B&2dHn-aoOuV7Q-Kqt^T>kK&7t<_n\OA73nP
%]hM@aDO@P/a-_st,f:1YrG5"NK.fYQ_-(7qP3QF@3PeA/7hkfb-D(`I]AJ?4[Gmn_5C5e]_<'9\)E9H\jgZc#^+mf!GI;i7N:(!/
%hV#/Va)CRkQjfJ.N<<G$p"GYIb#I!ZrksebT=+_>i@Kdp[,hFZB)bA]n!FRT$YQJnc',F?"AIaN1QO-.OhiP5H0+.c/D8t:"!BJM
%&FOM$$FLuN-q;>:nVr@e^157s&o9u(2fhChJF\q)3:*lQQVS#?Fcf5G$SC03Pf%1uLl0J2U=@.k,Y>"j9oHPfKet!FYo-;0Uj#fe
%T;[YN^\/X/)2l;:\2K!3n3c9n;p30E+$@2A*/>E;U'ELM^)'<D2*JKZ72*]FK&N^+o)S7cqC@FTO?R6bRrs8^U>!1GJhiSi!/W;T
%M9@P\/j/pMqfW%"[/_1<@J":a.3?$nge@3U=B"!^6h&'Ob#0=)rO,lr2-"Sh?gpQaNYp]^MK0%L9Se`Ed%s.q9mI8d.`4p`a>Skr
%G!`td2"/c7eH8*?\$ufH8hjh_Ds!FQ>HD]=![\_W`p,8*`-0(pWhM8PVHOJtUe#3SUk!#Wq>s@dfN*#K&r0/(>`d,?>&hmbI]!X'
%,c'^&TLoXO^4#Hc;HAD4nYZ1PQ(P\as"XTe;/07Bg[t3eI8G>Q/`],CqSAG\\j^U]EG)%tbVq"8PXuYTS,O/TYj80"5o!K:QFTCc
%[CP&">6)X0-AA=.SHmA`me:-5n3UY0M2j2k"DN0kq/+@l9@Hj>+rkB:4^io>P)_Ze5>BV$.CH6@SR?0:LKX8:5SP$nrJ82ZKH3d^
%$3:sQc^7L(&R2-W=;@;FcE@:tct@]%)+&@pP6WEI5agtul2i![:=<g?SCp<eDesg21odW9ea=$aV_3+;=bsEN;iA`fGt=mUebK=1
%-cd5/8A7X)Td%b+jrG3]XI;'ck4<C\S.HnGX]QpS!t4Nk40D-K`_eQ>VeB))?8g,),/JL!D5D'4^WqTJr[(EQM5'>k`!<[9=K8=m
%>Or-97[Wkb<4q[!A(GgkI'[1Kl7t*M(r3a9\*b5`=.;2R:VK>k#m`_a-0G==C)Er.!CZ>u(N-IhSY'**PRr,M5N(W68ZBpc`^M-2
%gkOV!JL6d#%(Et@m?,Et3$Kh6>hg[eUiY?[ER"rBQIJEom0#7l>LTEo0UjkDMEZrTP\ff5c_>-!=FeC8q"Wr4&Q6:,9VP$aK(,'&
%H:3Nc*XT(F$pK.-Z0Lr5;MNTF2@u[A*-am7`*EC5Z]]t_KhIMC&.H0``\XW\SMp:F@+!^[+9Qq@b#],9r*@q(5;(K%ILb`r,r2QX
%!EXXdm_fP>D_^o3#f;)(&=d7+U5^:t#N[q282L*&/k)+a.,LT`PJ]D=?J>`q%jl@^a5bR"lX*_VIk2Qm0Qmb[Un(c2,iJ7OB.H8+
%>NIMdd+'f'aaXBjms[;deI\aSPK,'?lO_t?^8d$!DDL+F`B]WqTuH@KO-F9O7hehb\=!h@-W2=X@6;',$L`KE^>/NNrYhjJ]JHH4
%WSnC!>$Hdc>7&2fPjQ<2SF]noL3b.a](EgShm_EPeYrh0[UV#a)J<`Lg.]jE-"Ao@Ue;*E61`Bq4+'2gH:jAmTt-R3%**Zf8*q%/
%5^O()#ntQArV3=bmlV-d;)qBX0lVNGE3H_S#P%.:[]W1h>rM4=)a=-=&%6\MU3V!R+ri[cfG8pTK`#L5akWun(g@]hG2:#uNoO'u
%D!=gU5Y-Dc484/Omn+5]622J1MN%13@<tce`cJp3WRO:>'/978n5)mHI+F5#5e4s*>TOim2)u]KnO@E2DRHQY0q3,QcLP5:T*6jd
%ki_g_&kiUN=qn$hqSqng!@^*Z>@*>8Ij$H3Gg,=2aCdA&W[-eb4S2qcbE-<KTY?W4ETZ=C7J".D/J;LcP2p2qRa%J:gN`))G#XT4
%M9jZ9Cu:K"oW,,oldm=`Nq:_Qhn.iCr$0H-'>DGW&Y8L^XP$1-T:6G"&aGk3%=8Sriq'M>/R+7P7tTLjpcgs;BD!L^U\[+[A1mDu
%5j:!r(b(]La85T@s"a5a2_?:R-d@L;Ri#2MZSITFR?NEOALiK%r+"i;IjCLFl+K%Ocb@tM,PdmlrQsQNXn1%I01_+4Qd-KDG^2[4
%*_GsK(qsM;*umE`;cH=d3QGlgP1EM7O&)g+\udjZkp"4-Xl9FAoa1W^;@DI4q&:&^IU!EB=tS]28`?:B4_iU%XVbdMV<T(g,.eRi
%*tT=`Y[S:*doQH\\S>TdiM2ahKdo@cdU"lFWDT2.<qTVq*B1/.mf+4(?^l23+6C_-GM2<P%[=rtqR!8!#GgFUj[<s?p@4(Zm<Vc3
%i42N(ihI63\eU3Aq#Z.+=fjq5l:=KY$l\_;P\sfG)j'aPB`.K]mIht/hk,i]$raeX*eGZ?B#"g6b@N8!n/bo3O%Z=RFV>AGkXAfA
%OtXDM0.naWB<Tb\Y?S?3*`.S`E9/4V)GA]MD#A/-hJuQ'l&7/9%\b"F`@1!B.Y@0kd"M&dB^;-lb*Gd;ao<eO<IG\)3SE#V)$S0Y
%F8p5;&*SnS8]!h2_:]GCF<^7$mCnac*4s!U;cKRCH/$9bW8\d48XIfe>r.)eB5RtOn'1jWer97E=f$R>at1l!rT@PDoTUPW1[8Nr
%0Y2b@.STGuCfN2F]S1Ngi]j^]pTQrk[I#U=[cd8JRh'C$7)BHc%?`96TDNjtH8_WC1UfDp=q%J=QH,n!ldZJ([A!HO'Y&Qh*Pprk
%bN.W(:U<"1A[oZ\;*j`/P\,9:^%Sea'D"-Y;qL`2rC``j]mR9!*"u]GGq%58QZo0Amo@=nmn3,l/,meSp:fMQO2l>-7t(0rc"4_>
%ZM;Z1=G,'fAs\KY9ugqS3`ekerqB8[#5<e/Nh[QlY$<=IOOW=@==Q=Wb]V'G>O(DB_<&QT<\.)(r)0!nOh^?cjJ.itq,Nea:Si*Q
%NieJ)%:r@0s6]_unXel^LudmpO3V*M<n0hH*k_Md^GbhE%(6/`o2tP>ioD:f3$k1K4j6.V:G!Zm/bPkrc?nI:qk\>N?J8oW?o-Q%
%<aF!PH.Ta3rKlC;@H2S>dbHk':t.H`gDn'c\"k+GP0IF[FcP(ujP#i>mJ38c]Aa;,F6^'s)5-PJA?Pqmk.`!"mPo7&J2Z#6P4r(g
%d-DEE_YjBqOR_\o*,0fI*jM2\ma5MK8GDM#Iel%_PDs-ZoqF9Y^@>ec&"2ZT,5G@?CV-+FMD9ZQ\%g6fk%NqFpVlZ\D'%cs*1:<n
%g\I?m`]6pUe)HR6Zo6SRgj)o_7[n>>dJ)]!EQMMk.iej^.<?Sps)JD4AkH\HMB?6L]@u)qK.lY3r%,B6SBa=T[ba*r[d.m[;Q813
%gMi\ZXr^mn6rmUb,@M(!T.BLIM+fL\@q9quCMQ^eZWt6.>@>1dg6@Zg]5@;_T3Sf&(KU=3Q7Sl6Fk+/OL`EH@.>iI`.6Y9b0d3sr
%&,B[6[Rasr`%to6COs:(Q)7s[a^'80g*&__+s&\k#]<FV&?"*;e[2Y<=)U[^2h8H?G@*G.:a`Y)^Ljh\(MQhHfX+0]FVUPZ`.C6n
%>XeMTfmZ#ZR8Tr*^@@G2;Yh!UdXA(2)"tt=d<dbrkik<:HRitT1Ej$Da=0*FZX;HU\dl2.lmboXYik>bA1F"$gY)/SXre7//j-8<
%ERFBcjXtt,fUiuQp)!bmlVY>"*Z&Ga%e/,CY/4YU.UK8UkZ;5U=09t^jhW63`L,N2=@AT98n"%Y_&&:bpMBdgqd5%OcB"J>Dp>U?
%qC/h,^KcIRq>8Y;%2N/%d;4c"oYRrn0%Coe*ZdO1a5Qg7m3o+F$ZOh(Q'e]=fV_s<#1(%fd&a*@ZJ9@d29ZP%j@rW4f-,OP%e9()
%89%8:Ht*nj0g7a!$I*fUVWX3+Tm_69"BO[@Ea9UD&oZ`F[nC(ULqSG]YKpW:^9NRFR-07"pi&676Hd\1=4AU=;`&KM>ZW#gL%B8P
%'+PF(g^5KVPcR:m<7)>%f.F1e;VWh\s8Jluf>ci3WS'a<FhVZ60%+=*<FqkZ\"tAIq1s7VMg[l@HM;gaL:<t<ADNSfb8s<W;,m@I
%oT8@m;Xa/!_f<1,.*/o-]"%im`QA@*\WbsSP2^GGWZ5'S\a.Ts[bfl,Y&=:dPjc>08sd.b`:##0908fijTYjM.5:[F"("C9%Cerq
%)t5&Z)\DaoWk"WYi;MlA#M%8WjTb(jWbYjX5l)e4kOSm_L3qd-(X[4)?DPUN\4Gcl\9qiDJ4j[D)fTNeEWb1mkL#CmU3<=m6ciEZ
%+sl3\%_WH%N3Ad`.>q**LE!3b=QFYs#2fK=HT`-j$XOm_lXhXUi=5\hbhWWTWI1jn'G'HO<Ot*YI)BHnF7+<pHMip[T`4cU%Erq]
%%S:a3Y*7ds;n@Irfn)`BZY,U*+fdArgAuj80=BO83MgNCcSmtPY'hs0,kPs<flX06[W^DNYLIP,<nJ5[r<pmt4H_lJ&Sg:40pe@X
%A3X@rg%45VU?6Ic7Has^U+/3nj-]a_Zico!<TR0>."esn>NpY^@p0dL[3Ul2\Rehk)JicW6#:JeO6QV^j!'(%\!f4a8A41>\'he^
%)s9`R;7s9U7F0i4ZE7d5MiH+R+T7NKMQXEY-k:*=PD,X5COqI-gMb:!Y4HSIMQ[\Zi1kNNL[1AA[#3*,i+me,RP"m8;05-\)As-C
%g7_#/jS^VeogLq)/bO/UF3AX9I,l!@2:$>ea&GA2B>!"l$Ye)U8'$>:O7'D50(LsHQFkZ(34l]uHk+*cO]/(,4?jh+F"@4LeX4sr
%+jM0-eqg(L,DBjs/1K_-!%3N\A(MJf!DPA`1S0]:880sO_5Io>[b+4c2+]ZAV)Z0XU/\BlMAWlC%2i&@H!8l8ZH8m3E(o9/j:C*s
%kMo^(]VLO?Dj;>\SMo(fhC>4o/J!Q!O(.0m3[aKk/GYXD+j(JW$AXF7_)t&h@o,XP`Do:48+GNh)0cBF$MfHpcE,cL^GI,CV86g_
%TdI*nP"6a4iteLs'C=C;24NkTo=>(>V%:E3W\`]UmT)%QAqRfJT=I-KkfA,6%ciV\,TDH(8U)U2VdaE<k\hCd)@Xf\Gc%8P(";b>
%]o@.iMBjd6>Wi');3Q[><E7+2?Wc"d]j8[IT:6NeUMXZ]8tAUEe27B.8;4$p[gu_n,e`)rNXoq?^fdordLihjQ.-0?%%t9YBK$$K
%X7@C6)QK;M_NZ4\WdI'KQ")mTOC"!)mT4gh^Z*'Pr2W+aDg"=t8l:7b726"Rh,p,o8BMotel@aMCtN,Ik0Je!lbZBVI9*0NaMiJ7
%6BT/Rc:^'QBGY^\#6CfD=r(fNq(`eoS2^M+C(\b8/d42>8Y\FnfBOI("+X!H_q/$(BV]R/!_K?%HTtW0Bc[9-YTfPb<;2SATFnDI
%MW_kgj9RKfA?3'EdU::6,]@duW0:6'K-.55.4dN1\8PWt@`G_Z[?k`+DX!(5`Tg8F?f7_`Pb0;N/.IfaHmMZj5XbK19_QK\-GFkA
%`G@6?N\l4%MV4T0VuQVd?iEJW^s5aUl!9>$Un[<E1sB*7GhFiL1`CF-Q%^ReNmt/;nRp%6$aKKTe?>hO[;E?UMc8SQnTZN)AW]P/
%O1++?g4pYAp#EKkdVJ?59X<^iW`MRH)KD_q&0Ac>pZ6_MO]R;kr9SJ:1hVS\?J@'IH/LN06_r4J[g\`W\V7aZ/u-A27<XPl8D\(o
%;1NL.fH9iJr6b4f:bAcC\e6_]lB[1#Gbn?)Tumcd)V'#8;QMGAh160-'X4/M,]1Zg[6_@ZU-7-PbaL(3,_`6TC\Q;2\C-"<Qp[Br
%noCS7'HokfH\?/Kbi`S/d%^3RaR2jbT^C$3^(+T@l-:SZa@uWp;Ib,H]\82X&(9X'*!/]`S"3PiTop'bm?+Uj_m?!@5pq>JqSHJL
%X9qo^dd:dLl!!_-DmYL[[\eIKZ.\2N7S&j>W:d/G\q,72OIdM8j,;iALcHljrPr:95?BFaE-6R!E.9Tcj"OQkrh-W0<ind(nldMl
%fN1h$Uhb!'`o`LYP]'ta5Cg%knQ8Hl7HDWIBZmW\-lu#FpdrqpirYa*g2c*7\ak:H2gX@OX;[Ho!g^&^F__%)<rU]G/0]]_5QTN[
%PF"Gde2F70I<5:^(0%W12*aleB)+^nLQ(pb#$Pc]D/>R1!![.1Z.e"pN1sCJfOpq"\&pI,%=-ETG>3'j8f(d$diW`'<'T'u<eW0n
%Kmit1D-A<F<Y^YT["ookj@^Eq-b/T&r!6K(ik/*NBIpT#p*$lWk^=Bf4"GF-<.a-jHPp\E,s?"OkC=Le+k"Y3*d$EQm#Gpi?nMB]
%:7Rr+%LjZ.e%d47`&,o@oeUg7aB2##Zb7H?]C`EmQfb%$C60'>WFpdhnmEq8o5hikcRFJ#$o&%)O!K,`?NKt&6l`G&7*T$QE:8O\
%Nu<hbL_>?P"fd??r.n$<anL"mqP$a.RblfQrY1ps?f'h-.QWj&iIfQ0/AJ%qY)[L^DmLX?7AVB>:Z9bMU6)tH06<<T?"CiR+6!Kj
%L)Rj!KbD=&:(773r[):O#O.fX[o+c*e[GE)HdKA(lOVp5iujue-R;[h>fD^]<[GH^*SH/`Ff%]rBt6KBE!d@Q;:b"h=rUWe;"rPb
%fqm6M\3:d4X"9sl2i;)PGdJ<XEN<5&&2FN6CI;%:*.PChceV1h]+KERB]A3!*QDl<i6R.]#8Jl9)\i8$K<3\c%ZnkgX9Br<iKa=S
%DS]cS;20rp?.%(*&Zm,1N&R_%a8"%lBt?gdA4'7#k'%fgqsh+CLD/edn)K318g:.QPlc#M"U/;+PX,4ETgP[;(XE6li-_1sFJO<8
%.Y<\t>T\l'Apt*QK37+%Gp?2n(<Se$*0-X<eIepW=QNUP<UP3%Q+I3U6C'WOLgDZh^P.,^E'Ld2bAr^Vd2=8[T&^t]#M8PC<>@S9
%Q\OF$5UDO@B$2FMb#$?;6].hBnB^V:6sZ%`.Nr_A6jQK)BT3%b0uj&0Q0[BV:oK"M.D(D:hl6`1^Em$NQ+VJ[a?"H=BQ=ou!2:7a
%YDNOd'R$:CZ4.kjDQ4O&kn&FJg</2e,53CG,SG5h"l6VTV*IFRroa^B0aPXhg<1BLE@9d24WbSC-L92G\u?6F"h)P+K?+C4,8.;6
%0R+2)clpi=6.^h@Js>&7Jp]jq:T7p,b#*i57ZY$n*&%FPs!fP[nsm*TjTisYHF:go&NTIY+=2t=aS&Waa[-\A^q0ZTCYm`cW@6I;
%],iNOc"^:eTPtK?kL#VE;VVqN@Ye:jM">J.4&W\HPiYk_5-*,]q\1]!$>K\Tm0Xei',".fp#t'/#`9cF6=20*6W8;+Xt!EW0QK_T
%;$LSDmQ0ncgs2,aIu_6<\r%%ua>/W-^b8TZ^g^Z"g-cUc^8qo^M"UU=?30`AqC[#h\+[21_q$Emi4:sHX!u-#MBLd88-)1=0Fb(g
%i2l8LO=NU]%O"ZX]X@Ra+^>f'&dAK5N<60,FpP*_11+%_(J.ZDe$C4\8]gY=V0$eN2Y#hWVr`/Afn_gOgkQ.V/,B+gLk)k5:fmlR
%7Q%X96#nZPcr`_[><G-]6>ke>dWL2>R37h.;Q`psK)$Te*>>A%*E<,87)j"sW-/7M71g:#$G[H[PlI=7`AO%0e*MuH6@7L0>bNN7
%/,^/2nqlO9d_raBjKkl/]SLMCgR+n6p,U5n9sm_+WUd$e==;M)Y6g&+au;rpBi:Z=4\=/X6PNO,K3@!0^3_t2,2m4UDuCnT($Ul&
%'K<=@;ZhH*BPY1CMMF4bgI\<e!Dj&./Dm"B`?GZ=ZEeLNX&ONrC\(@oPiI(J<-90aa30/VTa2=6nKH_2,i[)7N>s[V\';*e3MuT=
%5'-U,kML-8i%jEWDbgt6WtdNqV#)GV.$]B4ZdEt/hMluHFJI(QT-fr#p04Pt+SG:\Prp=RE5.iKYKK(?EHUPoBjeJ8X[3me_73+;
%JemNQ;TNb:Rme^V9rRB1n<\p@@*?9d/V;F6D^B_;OA$9BH$KtH>MX,YlO#38\)113eB;@D4MU'.>"*mnq(H"\g5Vphhc5o_5#-Y7
%WC!.?l_:Va`j'!6M4$a^F[&m\e+-J"(K=Jd.c'b:aF[cb/jLdS#_`PNo)"`,'id>AOh=lSV8?EZF6>BM,#nL.^[98QNJ!RY]j3N*
%b=P.dN`@^#)_l\GI[e<\=00MpKHP:^']W$9A2K*]8hlH#<arMk1?:NM1_i+,eaOudqE\+I2"=,QS.Xbk`gs01M89P$6WEnZ=*\k(
%@Y7!BBd\&g%D(^?H%I7]Cdo^"$D'mF5H7ON22\ji;&#E>)F5cPQO[_]D,/MF6rDjtllIA%g==r+Wn2#W:!WIpo=g*f<AZ8B.8cI#
%Y>i!@gnrCe\g1(oH$_*gc$`IqIFP]]eD&q'[UWOSQui_f]mL:t4?@<lkn%JjYGc(QK-p'?fc!.`HEiKL0kjp0G)]G,^.8&L*aFmq
%G"[!enm[e$^9*7gk?*d6NbuBp'>A=+KUfIX4"SO#d%Y08F>4^TLX[$O)DtA3q=_W9[%'^W")<K[<I[a#)nn>p3ERt]#h>Ne,mbN*
%a6`p(H9t]YJ$cLR_+rVB;bAEh$>pH<9Jd5S-#4fH4tJ,DUh/$4?'/H:X,=kC?`PHW84Z0k%O]+WAuZQAk`bt-@4db%T;!3.;:WSj
%eo98YUer\T6.C$r[#'R@\nqUpe$FHYhuK&LQ9[\emA6t-=%A$jbE$:`S84DD%lYIug!Y/+ZCLeQ8CXa[[QEnHp]:@+o'=`1htaR>
%Q"%qVO+(of*%%F=[W+>(KVk\s/uLP:lR2IS)Ta8<(0er`Eb%a.[_j$5NjE"W`Fe]F=<r_&qfpf<kU&G.Ck<2PZR*gRdnjH@&Ao9<
%<g5KQr<@L7=rXMg$6I,C"bHb!0:bG7Y&;(RTgC8&f/&fJF(V#'@)b`T&,Vi)g\'',U'(e2fYHV&?/!KT,/Pt^R#Pjo&DN6%j1-)4
%mT\'b+EgE,Va-sa$cG2))Kc)="B$+Ur&MBh%?5T4H`EKhceFd>#[=,i<L'fo>W+Jb%m8'5VI6IH9u,!\`KBDtRtj&\/&78s]((o)
%i0/B:Mi!<f,96.pO#8eqY]Wg3;ZoVB)\+"9.7C.NJ11nt%+]45J%OGo!=so?X@IEfE"eC)0M:_eBc-Z/k^E*r*Y@\o$k!n(J/XPn
%3A`b^5n;r&-5R$:9Wi4&CcBb0*nQH4+B<-IZ[Jm'!@q+*::u"!7O-q-p7LK(i"],DZCgj<NA%*`XpVI:\B;0te(T3S/64]q9/l#o
%>XP":13F3H26i1QW8T5&='Lu]0hlTZ'qj-^DhqpBp49a,Gj]&ID\+1,gEne.noub=RF^F!)V25e*Cp[(?Ad'_fIg/,_Rbf?d^@al
%SE'Fl"JUbRC[W>QMYpl$f"#uS<==6H'N7:`)hb*M?:5?c\Q"CNco.rRFsnuWH]4qM/oKlJ#PD])d"WUDs&OTOJtVX;_,3KogH:^R
%6D%auqrX55YMo^Kk%FOP?>X:AQ%kJf!+ErJHulU#VIOIG-idL1-QfHOE3^JdN<gCD$"\GXG(h<Gdg[YL3DW4p17&=8qrI+H9eg,f
%ikd6&;V@:/O_8O>Uq.OaX#7rkl#jM-]AIB^h)BPueUeFkE`(0)#V(SP#_IS,dqjn.e/%[Rh[;J?>t'Z[GEnIjmC.7HM2&9o<FSJp
%o;*b=Y6\=,Y/ef-;-m6>SOT!EYXGZarP.6?rh,dg<5V8,PIZL<dGLRj=5tXno="5QE38=@U<)jq<tTCBkC,IgWdV=JkNCTsjc[QL
%W?o5[4n+DaPZD"E.LN"HZWh#K"(:6C<m(XRX"rDj,:)o9G`fcR?>i'OD%k@j6(Be*>;u*g&\oTgA7)0ti$@<Q+:F'@SY5SdM^KJs
%U7i^q+an@e/Q7UhT6$c?f+[3N?R3@WoKIii_K*#uQurA8oQtf4+mQMnVn%mg0lC;H&o%.RLM3_#rc2/da3TgS3uqF]j>>'m(."7d
%O][=8<Q&(ult+f9GI'Gh"HL$;VX>fKOnhGCmK^7<Zcd&(#6_lKb)!.1*s&`"ih<@Kj\=FBjja6.F0`l*\*/93XXa1@q^jIj\f^#.
%X\[EuZmfN3oW`(Z8RPTR:p0cEhG"_6(@=oJ;bE"HOIl0MPstQ`Z;)hMX7cc$:FO.[q]i=`-Iu/q(s:hjXJ<<K=/((@;u$NgdEGa$
%O+F#<ea9C6,o*)@(PHlpIMbaIR(An$ONl"G;tgCc&llL(d/E2*VLftHo#H:TG1HOj.+W5$WV_Ns5Ki8Y=#H`%9S#9I^T12B+!T1V
%Vs9$_$r[=)ePDHFe'q$dql"&QVI_P`5IJbk?&S!gjOZ+eT,K,:/Sfm7l3D8T>4?N/rBT5ZOSbdK_9h)=0Rp*O,4.<fBMn^Nb1qY%
%4-Vrt]na6KJ"W]3R-N4$rfC1Pn$r'=A8j'B!)T+D-6%J6q*Wl:QMOS[+>+X+KK,427'*3:8=dmFOK[.eg7L'D=qjp2"&IFa%*)''
%:S?$E6f?*/Vb+!:T?88!Iu)3_<W:W2?)YS,q.&T0$\Q_>V%pVMX6sUK83**9nu#A$(4`"!+)NMolY]T!fKLV+E#5QZ7)6s&4-Vs1
%`J>;N4I*Z<\WK\LO"i81'i3q0R@cqD;k`Cj(YoTngN9Mkh/?FDMs_sc?*X:QF[&:3D-5EgQJ"HE5@ufkEYhO-:Z\R^7E8^.9;3WZ
%dU%#[6`T;!co5di=B*$?=3'uOU$+reD*:ES\Q%4F.],6Anl68'O/Y(Z8.kNh'6gnNe`\RYM_6R7"grc\`9O&45QMhnF^10"/?61Y
%WS3"%2,hcMGJ#P[*m^m"R,9B?1gD)TS=l=q*@O6O/g>#ZrnBe4&_p&cTo=bFHHn;/@i"6@08o&E9$8J[G[;Fb1r(2l>ApR@DQ'Nm
%<f8e:[2G6dcGP9;UMNfB/[c=Z\=-#`[l$cDe[@Xo@0IBdX'o"A1sERG1?.SI]o)0c5uiN[m;EZ:RWNh:Qh7,"Mo<qNs.p$kC3$fF
%Ysc8oQ$g;MNf,Pg<M^.l:sGX,kq\"HX-Tn4\lCBC:HakYW9((eF-&-UfhXI#S=8$`-:XXqoP0)TK-4C]K5!-]V\9XBC$WL-=5:Tt
%Q$_A1&bkhF`mlVhUpMaJ4_6nubhljXSeOa8:T%8kjZ%!oD/90lU+/1cq*#K2'toXqbYmM:=_ajJNpnm?Y+mg$AU2S'\Vk"PJ]f_&
%hmlEh##\BkmO.]#hYdanQq)Uk+Q"B6;*J+"@b<<fU5GT&Af3sP[p:h=b(a']gUSgAe`u]DcJuBuY;,q=I'A0,^Ut$XX\7mSeJKgC
%\I6aHE:2%SL2EPOF;bgNe>%E7gLcso&M9,/Ue-4^8#/q!gZB6I8Dj!f''WVsB;BJAcA_FQ=0qSMRUoT=_LJaiM/?VOQ]q99N`/nZ
%hDYHsk-p74mg/X',$[`B01,39jcOG0gJe='mnj8c+?Jq)G##k;aRcu'QBkpN8iDX6#5cJigH<d>_*5-jAR1I3YV-BX/jJ>(p@/Sd
%f,<q-h(H2qF9_VAc.;Nr)=0-dk>c:ad`f@+@XUd;[cimpqQbpDFU!)l:\8qW1qGKo8&ejjFOH-@WEP*n^)lU`^og",:O-+PCtcdO
%*aW%mSGS#7B_escpatp8&D+PU`JFb&\6Nh4YfpLIC>$!&*lZ/qABngtnAC%J7KIrCQ:3`Fm2>2Alafgp>EQWNJpjbZ)<k?@itCTD
%g.WTYOZl1P,(^lN>L'2od)U]L;gUVrD3V;[q,H2(XI:rh\"&+-cF4j_*p@riMQXGSq6*GiDu&/sorXr5e@2f,LAJuD%TB+&DqV-`
%UlS,1h6bEEl=9UY@7`W57to#]S&>&6XH2&Y>P@)PZ+ad.bZGs*M^;\>I=/F?VITH1c3E%*aX$7hEXaGm=N<,/((0^dSNeagF-+[D
%hh*)$&F0ui?r!k-Cn"^RX46mM;Ui"+o3nZS:E]5WaoN=mb3RR`#_tE:+>Dn8KVpM9fia<g[/4u4b$(f+JjcWqUjS<He4Oq8S8_F]
%55JMX$l27V-*M[f):h20h4ZK"V(T2n//qqic`+*\_5f@ENco[Xi-\+_[u!.+gjGE'?u6j>*o!Ln)d.#i;(k)g=BI#S6N[(97A8n[
%O]Xc$cBMmnafO@d`3N'jask<Qq0P_]?M2JjK`-fGK"+A]$_*SR`o423[<aGP-r!@]m-fS\Fu/U/Opn2i;"rg%\dRG3RFL7_W\5mC
%r-TMHh>jOuB2R-tg:1^*c7V4]_TPNg6JFt:PnXunBkkIBD?1TZcWhYo;O26!kbMq[<=:BRkHIu*\Nb@^oG=Ja@9%8;V000G'+u"Y
%I[eISM'bree'#Uf>`a*0j#BK2`[=sFd%:gQ9^^9Yf:cFDM;d??2&=^VAq7r@Li[g:\opI4Zh9geW[Mpqa(64PNaG6dpg5oGqpYd@
%e(OE)nT5tH7I0@B[m85:Q=r[SQft\aZR0T)Y8\NX0!H4TSDs#rLrIhlUsW_R%t7o?T.f$>N<6+FR75qlV+CO[EZ!_M.ompRdq&sZ
%oH+UpH);[e_\PiBk-LG@l-d4mSZ+6pdKs;?=^K+U[o!+fM<)$P8ZEW?NnsY;IUKo)#^1VhDau+N763dXLjCZ=-9NPQ%P.f\?%`qD
%ke>&M\;-cV7(5ri&Q&-9nl@Gc_F/oHeLlqm)kd!$X^Za)%6?52KLi;?W#)7XY1fk=(\s'8ird+&7m\L;B=<>RUq=%3HVJ9<?lA[!
%<J79!?V%4GgN%YKedPL*1k2(b*Y"oS$T6oT<A>Je<=Mm6QCmSn=0hbp>bgrb^-dbbSet5<gqBnWda\eOi^2bUWClR:a=Xu;Zl<^V
%0pMiugthbR@cZNXg-h+]I#Wu!;+Yr)\],p7q:/C3/00\pB&%dWDia"tS`a=j>pITp6>r,m\477FH!Fr$]-gB:O@69IceHINL.G!R
%W[`9H+B:>F2[^'IYrkCA[OcTaC:\+^Cm7Ir745$YOj6oR7,i2SFcuHL,e9u<F<DffaTe.Ge_K0RW,1.JO"IfC:07rs1k;))k=urP
%Lk\oR_jd(<+h5C`:`nA?qmK\%L0@K-<@qL0C!J7m)P@O15omg]7;h\WBFL_fCHGUbV1PhBg/2$s;+NI2.Qe]E4=s>\/,;.2<0*uE
%VtI,']V7VR3.A#cPX:0A-9De>#WK)K-3?FLoV<cl&HI`&nbcXgMV-'#SZD)$EZ2'S!s>d7ANHN"d&p_c`"bM4C-\p=J/XZm'p]67
%&ph$0I>YC(f5$]06B5G0I6O#hON:3F#[eC<+FlmA5lf*oju2217P:sW6gBE"hUWfth66S;F7B^Y&0q@9/UL0HVVu]Yh^24HeVa_)
%,i!j88B8\.K>`AAe,OJ]((@u&F9hl017]XJ4m+1/"FsND\A\5NOOceRRQniT=go+IY_l0aJ5dm(n15CV79qI?3ACN&e%Dg^3+_m(
%EauIqqMFKMog(.Pq=sWnG3?]GMGCpW+tj./SfiP`j<0!M*I+nXCUD%,$OD9BREQU75lb.L23ns[^nEM7,e\^.P`6sVm<L5OjcT-9
%!`1Ff`#B8<,.ikFEY-%WZ3^RtPRQf+32)IOjqXF0J1=Uh]Rg-*#_m:%!MI2MF,.@=8]mB-!M/[`\H)_mg*Xt2'*Ni!)nlje!g$Jr
%bhLX:>D&dKS0.flhN[R;!g(E8a3+bjW2^gr<Y,8W[4SO(!!S<\.X2*tE8GesJ5-XU4foLTSKIoMZKqSk!sO523mtI2!0gpDg55s1
%<\:I<XXJ_#:ac<3?#r5-!(q;g1s(=N5aooR3.p/[0BELS&ILc0JYio.-ie].;dFh9kXKTASL=L&7]G2D5k1DR1@t<p!arsP?f:@9
%<2uiu*ENr*i\"G<;#jMY`Emb]!)OlKZJD/R'W@,B_%f5GXenR$rQ"nSnHK+=5M0T)<X/Y)d1Q$d"JFD0/#"Bs!'>MF3QM7&.%@S+
%SJV>H%EU^X$O2+rgWdI'(k?p3fprr[3J9OVG@CPS$E<)$"2MoJ#*D.$'A;\sVT)=A!<5.i)_s\ZXS6TZq#g`>EE_W:#_68ujsBT;
%:"PV'H\)6tlDn_[+94hs>$=2l$3J5YJcM,4=[2tgJ?l`[?673<hQFS)<\MX,!<F=FIB4QA.S?^dXU,-7bk;>ETZ,.W*>8Q@Dmqn@
%@Y"O?9CCmG"<_XOG):W\>%ZKQ5QD=tNn9ORo8XP[1qfX0FF(<d?'a"?h`1:IMD!$VH<Zs1,!:>Qo&,Mi5a@Vj[eUR96UagsNcT%E
%?P[&Uk?I)`5E`-5p43TIJ+Ga%Fi2M"qf+Rd<#d.efr?"O1HATu\o.D"gCG(I6uM)X_^2Rg_Se&kS[&b?]2qbI7\khT_hoFZAT+-&
%=6".XE=;)BgaFWXn#nbt`s5tBru*&gdlRl[o1a25EZ?1YRt=_1l)gD[g$\[%]=tt-JW]$NrBWa8@.jR+r4B`Dk,XP=J,Rp,^\ZKa
%5CWP(GJF1?=20(\k.;_Lq>S,hC!$)<RE9:92rFSrj#?r_I(e+=\)7$hrRq.;^]!SURn*JO]5N2op8a8SkJ)E;p%MgApVVBcUFN^-
%0E$shI/BC_ro&7f^]3\>n%S\h\$,i+s7l<^hu"(iq_-iUrPLjLZ/:'*m5P(7_cPaqYkIt=-\)*NfB[MXRm$<4mH8EeiLdm]*RB-+
%rE#V?n,L'"I%c_6q8n-alFX5aIe3O<n^XPH?@0TCj4c%0lL9V[ZGVVFGUb_6\<AB>[*Yj=1/ipb-KZ#Jn#jGf32T9N:;[p8Kc<^`
%:im=Mp$qP5f5O>Q--uDFK9-KX"LnfDJ"Y\_lBanI9]GDf4VR@DBc('Zp^Hm)B`E&]k6?SSEp,+,*>pLldPl&g]%PkRol+$jPe;=j
%3X>=$UtVcdHZpE$kt?'hMOB;\J`m#K>lCC*,%+*A`^ZQ%lieK.qpBf)o&BTFU.LV8N35VYBBg+W>,?8aCgMSm<Wl:64VhLnpOd'h
%bMop5V,N6+^U<edDgdoQ#Yh+IbHiAu^mXekFD1dfB*#Ob995ZMhXHgF,C>?TF?pVQ`FIm&HP+e1HHnmWg?!3Vpfg^oroUWPR8UCm
%W@Yd3DVf>'04/M)p8%Js+^Nqd-g_B%o)&=WEPm*RJ&#<Do3Iu)EKAlE4G8DN24sl(Hek'sE#6CKI3VGd;i=4=a:kQ5)cHTN3Sf)L
%OV#IP34%d8\)m3PH<DXhD]_WumN/@?8,LjhG4tFrVPW0ZUe95[Z>hp&KU7J_I?_Q?8p(`jiXe8FA[!f8KNhM29Hq:E1$dZ<]U[DC
%6Rb3;B&su[A_n)ZI("bN9:%T9->"cH8M:a,]\s=a3h9p@*_X%#P)k5T5K,QP&o71eGtR6b^-!ClS,GWu`Y?JAaA8,QT7fJD2#WZA
%NBH+fL,<t`8;Qe+-*%Q64VV6OMfa4FpcQD&Db8Q8SSra$^!,$sL:<u%)E9eJ=Lrru*Rgn.H1g=DZ21Z5Mf4_1c"Wo;\_Z(so\.Rc
%L,Ypon.DFW\*:0iqR*XGO/82LA80hhgJ?E3/i144EEr0We%I]9k8Vu7-u*h4b@0gMVK5Kk\)SpNSFJ)`+r]\<N*iC(\<8,o\(`oF
%Us!blI-mVLR=dnIQCc-$dWH&N*^>rS39?2:?;C<kO-_k5HG5p?b8ZaGrr0SA:AKRRP2jfI+T8R(gZ*OD0"p"XP@8.@LXL<'c8WBZ
%>t6kJJFsjZj-kl^-S^G@K7gWG6bc/F/H]S8j6b&Bd\Xu]%$L:#l1,&Sd3$PfEGj%ds/eF4AF*TUf0MMHkHXZbS;r"f`f/:jX`Fh*
%M]kF=^)YR$?+.DF&DiW]JFi?A:jjJn[.%2-.+Z#Kf'F@(9.0Hm(_#JfY_ZK4)`9_S;#&TQ&aQl%r&R7Cl*haP2g<Lq]e%+^%?I?H
%[^qj,qrNi[QK8t4mA;k=QOu46n6#P,]k<^[G]$IHf7W4M?7(AZcto3?Z1M9:)6:/^i@X<Jd_$U)lo1``\0#()9=hjrY&Do(a=r42
%FIhmVJgV+So7^,ScKt(QLVcQf9`dfnQg8#9X@BJ+:=UN#o]c/LA*FfmRRgBd\,@V@T\c1=MfAJa&n1@u[h%`"nacpFL$N]o17I3,
%_W=&/";atLT'(mud\bHO)=UAbdT%J"gIQ6UQT$=mdr.b7OKM+MdY6^L5@iB<T@<@5qXCji,(sV]/h77X>VlpKi!7/+7O6+(+Q&9t
%>\t2gal:BeHpP?VJH2c+F^1_Z^3:Sp&D-_Yi?=1+>#Cl6TkL<$HrIU/'gh"o1Hh&,Dh)S$e1t)S@F2PeL*'FN((-L;*`X=:Zo=gs
%'1ddi\"8+=H?mEaADYNgY>?4Q!)iO?.12ek<A\^Sb=-[Om.'tnddmYBFFE]SASp8/#aVAoH?mPB?B7$-QEG0$64dpD/V!TjJ,'n1
%of%A)rqin6qtfET+2@XN_hVOe=+BtpDnc%nhgb=da)A]lbJ3hsn%\_sc-obOI7L*kS)<W5o^nXA^\Rg=^]"/$Vr.OGDuU%TIWYMG
%YQ!h=s65%5bJ3hEFR#\h~>
%AI9_PrivateDataEnd
